// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: PipelineMessage.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace wind.Entities.Protobuf {

  /// <summary>Holder for reflection information generated from PipelineMessage.proto</summary>
  public static partial class PipelineMessageReflection {

    #region Descriptor
    /// <summary>File descriptor for PipelineMessage.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PipelineMessageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVQaXBlbGluZU1lc3NhZ2UucHJvdG8SFndpbmQuRW50aXRpZXMuUHJvdG9i",
            "dWYinQIKFFVuaXRTZXR0aW5nc1Byb3RvYnVmEgwKBE5hbWUYASABKAkSEwoL",
            "RGVzY3JpcHRpb24YAiABKAkSDAoEVHlwZRgDIAEoBRIbChNBYnNvbHV0ZUV4",
            "ZWN1dGVQYXRoGAQgASgJEh0KFUFic29sdXRlV29ya0RpcmVjdG9yeRgFIAEo",
            "CRIRCglBcmd1bWVudHMYBiABKAkSEQoJQXV0b1N0YXJ0GAcgASgIEhYKDkF1",
            "dG9TdGFydERlbGF5GAggASgFEhwKFFJlc3RhcnRXaGVuRXhjZXB0aW9uGAkg",
            "ASgIEh8KF01vbml0b3JQZXJmb3JtYW5jZVVzYWdlGAogASgIEhsKE01vbml0",
            "b3JOZXR3b3JrVXNhZ2UYCyABKAgiMAoPUHJvY2Vzc1Byb3RvYnVmEgoKAklk",
            "GAEgASgFEhEKCVN0YXJ0VGltZRgCIAEoAyI6Ch5Vbml0UGVyZm9ybWFuY2VD",
            "b3VudGVyUHJvdG9idWYSCwoDQ1BVGAEgASgCEgsKA1JBTRgCIAEoAiJvChpV",
            "bml0TmV0d29ya0NvdW50ZXJQcm90b2J1ZhIRCglUb3RhbFNlbnQYASABKAMS",
            "FQoNVG90YWxSZWNlaXZlZBgCIAEoAxIRCglTZW5kU3BlZWQYAyABKAMSFAoM",
            "UmVjZWl2ZVNwZWVkGAQgASgDIs0DCgxVbml0UHJvdG9idWYSCwoDS2V5GAEg",
            "ASgJEg0KBVN0YXRlGAIgASgFEhgKEFNldHRpbmdzRmlsZVBhdGgYAyABKAkS",
            "RgoQU2V0dGluZ3NQcm90b2J1ZhgEIAEoCzIsLndpbmQuRW50aXRpZXMuUHJv",
            "dG9idWYuVW5pdFNldHRpbmdzUHJvdG9idWYSTQoXUnVubmluZ1NldHRpbmdz",
            "UHJvdG9idWYYBSABKAsyLC53aW5kLkVudGl0aWVzLlByb3RvYnVmLlVuaXRT",
            "ZXR0aW5nc1Byb3RvYnVmEkAKD1Byb2Nlc3NQcm90b2J1ZhgGIAEoCzInLndp",
            "bmQuRW50aXRpZXMuUHJvdG9idWYuUHJvY2Vzc1Byb3RvYnVmEloKGlBlcmZv",
            "cm1hbmNlQ291bnRlclByb3RvYnVmGAcgASgLMjYud2luZC5FbnRpdGllcy5Q",
            "cm90b2J1Zi5Vbml0UGVyZm9ybWFuY2VDb3VudGVyUHJvdG9idWYSUgoWTmV0",
            "d29ya0NvdW50ZXJQcm90b2J1ZhgIIAEoCzIyLndpbmQuRW50aXRpZXMuUHJv",
            "dG9idWYuVW5pdE5ldHdvcmtDb3VudGVyUHJvdG9idWYi4QIKDkRhZW1vblBy",
            "b3RvYnVmEgwKBE5hbWUYASABKAkSEwoLRGVzY3JpcHRpb24YAiABKAkSGwoT",
            "QWJzb2x1dGVFeGVjdXRlUGF0aBgDIAEoCRIdChVBYnNvbHV0ZVdvcmtEaXJl",
            "Y3RvcnkYBCABKAkSQAoPUHJvY2Vzc1Byb3RvYnVmGAUgASgLMicud2luZC5F",
            "bnRpdGllcy5Qcm90b2J1Zi5Qcm9jZXNzUHJvdG9idWYSWgoaUGVyZm9ybWFu",
            "Y2VDb3VudGVyUHJvdG9idWYYBiABKAsyNi53aW5kLkVudGl0aWVzLlByb3Rv",
            "YnVmLlVuaXRQZXJmb3JtYW5jZUNvdW50ZXJQcm90b2J1ZhJSChZOZXR3b3Jr",
            "Q291bnRlclByb3RvYnVmGAcgASgLMjIud2luZC5FbnRpdGllcy5Qcm90b2J1",
            "Zi5Vbml0TmV0d29ya0NvdW50ZXJQcm90b2J1ZiIiChJQYWNrZXRUZXN0UHJv",
            "dG9idWYSDAoEVHlwZRgBIAEoBSI2ChVTdGF0dXNSZXF1ZXN0UHJvdG9idWYS",
            "DAoEVHlwZRgBIAEoBRIPCgdVbml0S2V5GAIgASgJIp8BChZTdGF0dXNSZXNw",
            "b25zZVByb3RvYnVmEgwKBFR5cGUYASABKAUSDwoHVW5pdEtleRgCIAEoCRIQ",
            "CghFeGVjdXRlZBgDIAEoCBIYChBOb0V4ZWN1dGVNZXNzYWdlGAQgASgJEjoK",
            "DFVuaXRQcm90b2J1ZhgFIAEoCzIkLndpbmQuRW50aXRpZXMuUHJvdG9idWYu",
            "VW5pdFByb3RvYnVmIjUKFFN0YXJ0UmVxdWVzdFByb3RvYnVmEgwKBFR5cGUY",
            "ASABKAUSDwoHVW5pdEtleRgCIAEoCSJiChVTdGFydFJlc3BvbnNlUHJvdG9i",
            "dWYSDAoEVHlwZRgBIAEoBRIPCgdVbml0S2V5GAIgASgJEhAKCEV4ZWN1dGVk",
            "GAMgASgIEhgKEE5vRXhlY3V0ZU1lc3NhZ2UYBCABKAkiNAoTU3RvcFJlcXVl",
            "c3RQcm90b2J1ZhIMCgRUeXBlGAEgASgFEg8KB1VuaXRLZXkYAiABKAkiYQoU",
            "U3RvcFJlc3BvbnNlUHJvdG9idWYSDAoEVHlwZRgBIAEoBRIPCgdVbml0S2V5",
            "GAIgASgJEhAKCEV4ZWN1dGVkGAMgASgIEhgKEE5vRXhlY3V0ZU1lc3NhZ2UY",
            "BCABKAkiNwoWUmVzdGFydFJlcXVlc3RQcm90b2J1ZhIMCgRUeXBlGAEgASgF",
            "Eg8KB1VuaXRLZXkYAiABKAkiZAoXUmVzdGFydFJlc3BvbnNlUHJvdG9idWYS",
            "DAoEVHlwZRgBIAEoBRIPCgdVbml0S2V5GAIgASgJEhAKCEV4ZWN1dGVkGAMg",
            "ASgIEhgKEE5vRXhlY3V0ZU1lc3NhZ2UYBCABKAkiNAoTTG9hZFJlcXVlc3RQ",
            "cm90b2J1ZhIMCgRUeXBlGAEgASgFEg8KB1VuaXRLZXkYAiABKAkiYQoUTG9h",
            "ZFJlc3BvbnNlUHJvdG9idWYSDAoEVHlwZRgBIAEoBRIPCgdVbml0S2V5GAIg",
            "ASgJEhAKCEV4ZWN1dGVkGAMgASgIEhgKEE5vRXhlY3V0ZU1lc3NhZ2UYBCAB",
            "KAkiNgoVUmVtb3ZlUmVxdWVzdFByb3RvYnVmEgwKBFR5cGUYASABKAUSDwoH",
            "VW5pdEtleRgCIAEoCSJjChZSZW1vdmVSZXNwb25zZVByb3RvYnVmEgwKBFR5",
            "cGUYASABKAUSDwoHVW5pdEtleRgCIAEoCRIQCghFeGVjdXRlZBgDIAEoCBIY",
            "ChBOb0V4ZWN1dGVNZXNzYWdlGAQgASgJIigKGFN0YXR1c0FsbFJlcXVlc3RQ",
            "cm90b2J1ZhIMCgRUeXBlGAEgASgFImoKGVN0YXR1c0FsbFJlc3BvbnNlUHJv",
            "dG9idWYSDAoEVHlwZRgBIAEoBRI/ChFVbml0UHJvdG9idWZBcnJheRgCIAMo",
            "CzIkLndpbmQuRW50aXRpZXMuUHJvdG9idWYuVW5pdFByb3RvYnVmIicKF1N0",
            "YXJ0QWxsUmVxdWVzdFByb3RvYnVmEgwKBFR5cGUYASABKAUiKAoYU3RhcnRB",
            "bGxSZXNwb25zZVByb3RvYnVmEgwKBFR5cGUYASABKAUiJgoWU3RvcEFsbFJl",
            "cXVlc3RQcm90b2J1ZhIMCgRUeXBlGAEgASgFIicKF1N0b3BBbGxSZXNwb25z",
            "ZVByb3RvYnVmEgwKBFR5cGUYASABKAUiKQoZUmVzdGFydEFsbFJlcXVlc3RQ",
            "cm90b2J1ZhIMCgRUeXBlGAEgASgFIioKGlJlc3RhcnRBbGxSZXNwb25zZVBy",
            "b3RvYnVmEgwKBFR5cGUYASABKAUiJgoWTG9hZEFsbFJlcXVlc3RQcm90b2J1",
            "ZhIMCgRUeXBlGAEgASgFIicKF0xvYWRBbGxSZXNwb25zZVByb3RvYnVmEgwK",
            "BFR5cGUYASABKAUiKAoYUmVtb3ZlQWxsUmVxdWVzdFByb3RvYnVmEgwKBFR5",
            "cGUYASABKAUiKQoZUmVtb3ZlQWxsUmVzcG9uc2VQcm90b2J1ZhIMCgRUeXBl",
            "GAEgASgFIiwKHERhZW1vblZlcnNpb25SZXF1ZXN0UHJvdG9idWYSDAoEVHlw",
            "ZRgBIAEoBSKIAQodRGFlbW9uVmVyc2lvblJlc3BvbnNlUHJvdG9idWYSDAoE",
            "VHlwZRgBIAEoBRIUCgxNYWpvclZlcnNpb24YAiABKAUSFAoMTWlub3JWZXJz",
            "aW9uGAMgASgFEhQKDEJ1aWxkVmVyc2lvbhgEIAEoBRIXCg9SZXZpc2lvblZl",
            "cnNpb24YBSABKAUiKwobRGFlbW9uU3RhdHVzUmVxdWVzdFByb3RvYnVmEgwK",
            "BFR5cGUYASABKAUibAocRGFlbW9uU3RhdHVzUmVzcG9uc2VQcm90b2J1ZhIM",
            "CgRUeXBlGAEgASgFEj4KDkRhZW1vblByb3RvYnVmGAIgASgLMiYud2luZC5F",
            "bnRpdGllcy5Qcm90b2J1Zi5EYWVtb25Qcm90b2J1ZiItCh1EYWVtb25TaHV0",
            "ZG93blJlcXVlc3RQcm90b2J1ZhIMCgRUeXBlGAEgASgFIi4KHkRhZW1vblNo",
            "dXRkb3duUmVzcG9uc2VQcm90b2J1ZhIMCgRUeXBlGAEgASgFQhtIA6oCFndp",
            "bmQuRW50aXRpZXMuUHJvdG9idWZiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.UnitSettingsProtobuf), global::wind.Entities.Protobuf.UnitSettingsProtobuf.Parser, new[]{ "Name", "Description", "Type", "AbsoluteExecutePath", "AbsoluteWorkDirectory", "Arguments", "AutoStart", "AutoStartDelay", "RestartWhenException", "MonitorPerformanceUsage", "MonitorNetworkUsage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.ProcessProtobuf), global::wind.Entities.Protobuf.ProcessProtobuf.Parser, new[]{ "Id", "StartTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.UnitPerformanceCounterProtobuf), global::wind.Entities.Protobuf.UnitPerformanceCounterProtobuf.Parser, new[]{ "CPU", "RAM" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.UnitNetworkCounterProtobuf), global::wind.Entities.Protobuf.UnitNetworkCounterProtobuf.Parser, new[]{ "TotalSent", "TotalReceived", "SendSpeed", "ReceiveSpeed" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.UnitProtobuf), global::wind.Entities.Protobuf.UnitProtobuf.Parser, new[]{ "Key", "State", "SettingsFilePath", "SettingsProtobuf", "RunningSettingsProtobuf", "ProcessProtobuf", "PerformanceCounterProtobuf", "NetworkCounterProtobuf" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.DaemonProtobuf), global::wind.Entities.Protobuf.DaemonProtobuf.Parser, new[]{ "Name", "Description", "AbsoluteExecutePath", "AbsoluteWorkDirectory", "ProcessProtobuf", "PerformanceCounterProtobuf", "NetworkCounterProtobuf" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.PacketTestProtobuf), global::wind.Entities.Protobuf.PacketTestProtobuf.Parser, new[]{ "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.StatusRequestProtobuf), global::wind.Entities.Protobuf.StatusRequestProtobuf.Parser, new[]{ "Type", "UnitKey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.StatusResponseProtobuf), global::wind.Entities.Protobuf.StatusResponseProtobuf.Parser, new[]{ "Type", "UnitKey", "Executed", "NoExecuteMessage", "UnitProtobuf" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.StartRequestProtobuf), global::wind.Entities.Protobuf.StartRequestProtobuf.Parser, new[]{ "Type", "UnitKey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.StartResponseProtobuf), global::wind.Entities.Protobuf.StartResponseProtobuf.Parser, new[]{ "Type", "UnitKey", "Executed", "NoExecuteMessage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.StopRequestProtobuf), global::wind.Entities.Protobuf.StopRequestProtobuf.Parser, new[]{ "Type", "UnitKey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.StopResponseProtobuf), global::wind.Entities.Protobuf.StopResponseProtobuf.Parser, new[]{ "Type", "UnitKey", "Executed", "NoExecuteMessage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.RestartRequestProtobuf), global::wind.Entities.Protobuf.RestartRequestProtobuf.Parser, new[]{ "Type", "UnitKey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.RestartResponseProtobuf), global::wind.Entities.Protobuf.RestartResponseProtobuf.Parser, new[]{ "Type", "UnitKey", "Executed", "NoExecuteMessage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.LoadRequestProtobuf), global::wind.Entities.Protobuf.LoadRequestProtobuf.Parser, new[]{ "Type", "UnitKey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.LoadResponseProtobuf), global::wind.Entities.Protobuf.LoadResponseProtobuf.Parser, new[]{ "Type", "UnitKey", "Executed", "NoExecuteMessage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.RemoveRequestProtobuf), global::wind.Entities.Protobuf.RemoveRequestProtobuf.Parser, new[]{ "Type", "UnitKey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.RemoveResponseProtobuf), global::wind.Entities.Protobuf.RemoveResponseProtobuf.Parser, new[]{ "Type", "UnitKey", "Executed", "NoExecuteMessage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.StatusAllRequestProtobuf), global::wind.Entities.Protobuf.StatusAllRequestProtobuf.Parser, new[]{ "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.StatusAllResponseProtobuf), global::wind.Entities.Protobuf.StatusAllResponseProtobuf.Parser, new[]{ "Type", "UnitProtobufArray" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.StartAllRequestProtobuf), global::wind.Entities.Protobuf.StartAllRequestProtobuf.Parser, new[]{ "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.StartAllResponseProtobuf), global::wind.Entities.Protobuf.StartAllResponseProtobuf.Parser, new[]{ "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.StopAllRequestProtobuf), global::wind.Entities.Protobuf.StopAllRequestProtobuf.Parser, new[]{ "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.StopAllResponseProtobuf), global::wind.Entities.Protobuf.StopAllResponseProtobuf.Parser, new[]{ "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.RestartAllRequestProtobuf), global::wind.Entities.Protobuf.RestartAllRequestProtobuf.Parser, new[]{ "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.RestartAllResponseProtobuf), global::wind.Entities.Protobuf.RestartAllResponseProtobuf.Parser, new[]{ "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.LoadAllRequestProtobuf), global::wind.Entities.Protobuf.LoadAllRequestProtobuf.Parser, new[]{ "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.LoadAllResponseProtobuf), global::wind.Entities.Protobuf.LoadAllResponseProtobuf.Parser, new[]{ "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.RemoveAllRequestProtobuf), global::wind.Entities.Protobuf.RemoveAllRequestProtobuf.Parser, new[]{ "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.RemoveAllResponseProtobuf), global::wind.Entities.Protobuf.RemoveAllResponseProtobuf.Parser, new[]{ "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.DaemonVersionRequestProtobuf), global::wind.Entities.Protobuf.DaemonVersionRequestProtobuf.Parser, new[]{ "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.DaemonVersionResponseProtobuf), global::wind.Entities.Protobuf.DaemonVersionResponseProtobuf.Parser, new[]{ "Type", "MajorVersion", "MinorVersion", "BuildVersion", "RevisionVersion" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.DaemonStatusRequestProtobuf), global::wind.Entities.Protobuf.DaemonStatusRequestProtobuf.Parser, new[]{ "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.DaemonStatusResponseProtobuf), global::wind.Entities.Protobuf.DaemonStatusResponseProtobuf.Parser, new[]{ "Type", "DaemonProtobuf" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.DaemonShutdownRequestProtobuf), global::wind.Entities.Protobuf.DaemonShutdownRequestProtobuf.Parser, new[]{ "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.DaemonShutdownResponseProtobuf), global::wind.Entities.Protobuf.DaemonShutdownResponseProtobuf.Parser, new[]{ "Type" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// 预定义
  /// </summary>
  public sealed partial class UnitSettingsProtobuf : pb::IMessage<UnitSettingsProtobuf> {
    private static readonly pb::MessageParser<UnitSettingsProtobuf> _parser = new pb::MessageParser<UnitSettingsProtobuf>(() => new UnitSettingsProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnitSettingsProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.PipelineMessageReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnitSettingsProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnitSettingsProtobuf(UnitSettingsProtobuf other) : this() {
      name_ = other.name_;
      description_ = other.description_;
      type_ = other.type_;
      absoluteExecutePath_ = other.absoluteExecutePath_;
      absoluteWorkDirectory_ = other.absoluteWorkDirectory_;
      arguments_ = other.arguments_;
      autoStart_ = other.autoStart_;
      autoStartDelay_ = other.autoStartDelay_;
      restartWhenException_ = other.restartWhenException_;
      monitorPerformanceUsage_ = other.monitorPerformanceUsage_;
      monitorNetworkUsage_ = other.monitorNetworkUsage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnitSettingsProtobuf Clone() {
      return new UnitSettingsProtobuf(this);
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 3;
    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "AbsoluteExecutePath" field.</summary>
    public const int AbsoluteExecutePathFieldNumber = 4;
    private string absoluteExecutePath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AbsoluteExecutePath {
      get { return absoluteExecutePath_; }
      set {
        absoluteExecutePath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AbsoluteWorkDirectory" field.</summary>
    public const int AbsoluteWorkDirectoryFieldNumber = 5;
    private string absoluteWorkDirectory_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AbsoluteWorkDirectory {
      get { return absoluteWorkDirectory_; }
      set {
        absoluteWorkDirectory_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Arguments" field.</summary>
    public const int ArgumentsFieldNumber = 6;
    private string arguments_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Arguments {
      get { return arguments_; }
      set {
        arguments_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AutoStart" field.</summary>
    public const int AutoStartFieldNumber = 7;
    private bool autoStart_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AutoStart {
      get { return autoStart_; }
      set {
        autoStart_ = value;
      }
    }

    /// <summary>Field number for the "AutoStartDelay" field.</summary>
    public const int AutoStartDelayFieldNumber = 8;
    private int autoStartDelay_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AutoStartDelay {
      get { return autoStartDelay_; }
      set {
        autoStartDelay_ = value;
      }
    }

    /// <summary>Field number for the "RestartWhenException" field.</summary>
    public const int RestartWhenExceptionFieldNumber = 9;
    private bool restartWhenException_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool RestartWhenException {
      get { return restartWhenException_; }
      set {
        restartWhenException_ = value;
      }
    }

    /// <summary>Field number for the "MonitorPerformanceUsage" field.</summary>
    public const int MonitorPerformanceUsageFieldNumber = 10;
    private bool monitorPerformanceUsage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool MonitorPerformanceUsage {
      get { return monitorPerformanceUsage_; }
      set {
        monitorPerformanceUsage_ = value;
      }
    }

    /// <summary>Field number for the "MonitorNetworkUsage" field.</summary>
    public const int MonitorNetworkUsageFieldNumber = 11;
    private bool monitorNetworkUsage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool MonitorNetworkUsage {
      get { return monitorNetworkUsage_; }
      set {
        monitorNetworkUsage_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnitSettingsProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnitSettingsProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      if (Type != other.Type) return false;
      if (AbsoluteExecutePath != other.AbsoluteExecutePath) return false;
      if (AbsoluteWorkDirectory != other.AbsoluteWorkDirectory) return false;
      if (Arguments != other.Arguments) return false;
      if (AutoStart != other.AutoStart) return false;
      if (AutoStartDelay != other.AutoStartDelay) return false;
      if (RestartWhenException != other.RestartWhenException) return false;
      if (MonitorPerformanceUsage != other.MonitorPerformanceUsage) return false;
      if (MonitorNetworkUsage != other.MonitorNetworkUsage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (AbsoluteExecutePath.Length != 0) hash ^= AbsoluteExecutePath.GetHashCode();
      if (AbsoluteWorkDirectory.Length != 0) hash ^= AbsoluteWorkDirectory.GetHashCode();
      if (Arguments.Length != 0) hash ^= Arguments.GetHashCode();
      if (AutoStart != false) hash ^= AutoStart.GetHashCode();
      if (AutoStartDelay != 0) hash ^= AutoStartDelay.GetHashCode();
      if (RestartWhenException != false) hash ^= RestartWhenException.GetHashCode();
      if (MonitorPerformanceUsage != false) hash ^= MonitorPerformanceUsage.GetHashCode();
      if (MonitorNetworkUsage != false) hash ^= MonitorNetworkUsage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (Type != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Type);
      }
      if (AbsoluteExecutePath.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(AbsoluteExecutePath);
      }
      if (AbsoluteWorkDirectory.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(AbsoluteWorkDirectory);
      }
      if (Arguments.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Arguments);
      }
      if (AutoStart != false) {
        output.WriteRawTag(56);
        output.WriteBool(AutoStart);
      }
      if (AutoStartDelay != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(AutoStartDelay);
      }
      if (RestartWhenException != false) {
        output.WriteRawTag(72);
        output.WriteBool(RestartWhenException);
      }
      if (MonitorPerformanceUsage != false) {
        output.WriteRawTag(80);
        output.WriteBool(MonitorPerformanceUsage);
      }
      if (MonitorNetworkUsage != false) {
        output.WriteRawTag(88);
        output.WriteBool(MonitorNetworkUsage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (AbsoluteExecutePath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AbsoluteExecutePath);
      }
      if (AbsoluteWorkDirectory.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AbsoluteWorkDirectory);
      }
      if (Arguments.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Arguments);
      }
      if (AutoStart != false) {
        size += 1 + 1;
      }
      if (AutoStartDelay != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AutoStartDelay);
      }
      if (RestartWhenException != false) {
        size += 1 + 1;
      }
      if (MonitorPerformanceUsage != false) {
        size += 1 + 1;
      }
      if (MonitorNetworkUsage != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnitSettingsProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.AbsoluteExecutePath.Length != 0) {
        AbsoluteExecutePath = other.AbsoluteExecutePath;
      }
      if (other.AbsoluteWorkDirectory.Length != 0) {
        AbsoluteWorkDirectory = other.AbsoluteWorkDirectory;
      }
      if (other.Arguments.Length != 0) {
        Arguments = other.Arguments;
      }
      if (other.AutoStart != false) {
        AutoStart = other.AutoStart;
      }
      if (other.AutoStartDelay != 0) {
        AutoStartDelay = other.AutoStartDelay;
      }
      if (other.RestartWhenException != false) {
        RestartWhenException = other.RestartWhenException;
      }
      if (other.MonitorPerformanceUsage != false) {
        MonitorPerformanceUsage = other.MonitorPerformanceUsage;
      }
      if (other.MonitorNetworkUsage != false) {
        MonitorNetworkUsage = other.MonitorNetworkUsage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 24: {
            Type = input.ReadInt32();
            break;
          }
          case 34: {
            AbsoluteExecutePath = input.ReadString();
            break;
          }
          case 42: {
            AbsoluteWorkDirectory = input.ReadString();
            break;
          }
          case 50: {
            Arguments = input.ReadString();
            break;
          }
          case 56: {
            AutoStart = input.ReadBool();
            break;
          }
          case 64: {
            AutoStartDelay = input.ReadInt32();
            break;
          }
          case 72: {
            RestartWhenException = input.ReadBool();
            break;
          }
          case 80: {
            MonitorPerformanceUsage = input.ReadBool();
            break;
          }
          case 88: {
            MonitorNetworkUsage = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ProcessProtobuf : pb::IMessage<ProcessProtobuf> {
    private static readonly pb::MessageParser<ProcessProtobuf> _parser = new pb::MessageParser<ProcessProtobuf>(() => new ProcessProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProcessProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.PipelineMessageReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProcessProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProcessProtobuf(ProcessProtobuf other) : this() {
      id_ = other.id_;
      startTime_ = other.startTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProcessProtobuf Clone() {
      return new ProcessProtobuf(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "StartTime" field.</summary>
    public const int StartTimeFieldNumber = 2;
    private long startTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProcessProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProcessProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (StartTime != other.StartTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (StartTime != 0L) hash ^= StartTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (StartTime != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(StartTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (StartTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProcessProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.StartTime != 0L) {
        StartTime = other.StartTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            StartTime = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UnitPerformanceCounterProtobuf : pb::IMessage<UnitPerformanceCounterProtobuf> {
    private static readonly pb::MessageParser<UnitPerformanceCounterProtobuf> _parser = new pb::MessageParser<UnitPerformanceCounterProtobuf>(() => new UnitPerformanceCounterProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnitPerformanceCounterProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.PipelineMessageReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnitPerformanceCounterProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnitPerformanceCounterProtobuf(UnitPerformanceCounterProtobuf other) : this() {
      cPU_ = other.cPU_;
      rAM_ = other.rAM_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnitPerformanceCounterProtobuf Clone() {
      return new UnitPerformanceCounterProtobuf(this);
    }

    /// <summary>Field number for the "CPU" field.</summary>
    public const int CPUFieldNumber = 1;
    private float cPU_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float CPU {
      get { return cPU_; }
      set {
        cPU_ = value;
      }
    }

    /// <summary>Field number for the "RAM" field.</summary>
    public const int RAMFieldNumber = 2;
    private float rAM_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float RAM {
      get { return rAM_; }
      set {
        rAM_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnitPerformanceCounterProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnitPerformanceCounterProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CPU, other.CPU)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(RAM, other.RAM)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CPU != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CPU);
      if (RAM != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(RAM);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CPU != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(CPU);
      }
      if (RAM != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(RAM);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CPU != 0F) {
        size += 1 + 4;
      }
      if (RAM != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnitPerformanceCounterProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.CPU != 0F) {
        CPU = other.CPU;
      }
      if (other.RAM != 0F) {
        RAM = other.RAM;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            CPU = input.ReadFloat();
            break;
          }
          case 21: {
            RAM = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UnitNetworkCounterProtobuf : pb::IMessage<UnitNetworkCounterProtobuf> {
    private static readonly pb::MessageParser<UnitNetworkCounterProtobuf> _parser = new pb::MessageParser<UnitNetworkCounterProtobuf>(() => new UnitNetworkCounterProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnitNetworkCounterProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.PipelineMessageReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnitNetworkCounterProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnitNetworkCounterProtobuf(UnitNetworkCounterProtobuf other) : this() {
      totalSent_ = other.totalSent_;
      totalReceived_ = other.totalReceived_;
      sendSpeed_ = other.sendSpeed_;
      receiveSpeed_ = other.receiveSpeed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnitNetworkCounterProtobuf Clone() {
      return new UnitNetworkCounterProtobuf(this);
    }

    /// <summary>Field number for the "TotalSent" field.</summary>
    public const int TotalSentFieldNumber = 1;
    private long totalSent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalSent {
      get { return totalSent_; }
      set {
        totalSent_ = value;
      }
    }

    /// <summary>Field number for the "TotalReceived" field.</summary>
    public const int TotalReceivedFieldNumber = 2;
    private long totalReceived_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalReceived {
      get { return totalReceived_; }
      set {
        totalReceived_ = value;
      }
    }

    /// <summary>Field number for the "SendSpeed" field.</summary>
    public const int SendSpeedFieldNumber = 3;
    private long sendSpeed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long SendSpeed {
      get { return sendSpeed_; }
      set {
        sendSpeed_ = value;
      }
    }

    /// <summary>Field number for the "ReceiveSpeed" field.</summary>
    public const int ReceiveSpeedFieldNumber = 4;
    private long receiveSpeed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ReceiveSpeed {
      get { return receiveSpeed_; }
      set {
        receiveSpeed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnitNetworkCounterProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnitNetworkCounterProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TotalSent != other.TotalSent) return false;
      if (TotalReceived != other.TotalReceived) return false;
      if (SendSpeed != other.SendSpeed) return false;
      if (ReceiveSpeed != other.ReceiveSpeed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TotalSent != 0L) hash ^= TotalSent.GetHashCode();
      if (TotalReceived != 0L) hash ^= TotalReceived.GetHashCode();
      if (SendSpeed != 0L) hash ^= SendSpeed.GetHashCode();
      if (ReceiveSpeed != 0L) hash ^= ReceiveSpeed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TotalSent != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TotalSent);
      }
      if (TotalReceived != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(TotalReceived);
      }
      if (SendSpeed != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(SendSpeed);
      }
      if (ReceiveSpeed != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(ReceiveSpeed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TotalSent != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalSent);
      }
      if (TotalReceived != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalReceived);
      }
      if (SendSpeed != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SendSpeed);
      }
      if (ReceiveSpeed != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ReceiveSpeed);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnitNetworkCounterProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.TotalSent != 0L) {
        TotalSent = other.TotalSent;
      }
      if (other.TotalReceived != 0L) {
        TotalReceived = other.TotalReceived;
      }
      if (other.SendSpeed != 0L) {
        SendSpeed = other.SendSpeed;
      }
      if (other.ReceiveSpeed != 0L) {
        ReceiveSpeed = other.ReceiveSpeed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TotalSent = input.ReadInt64();
            break;
          }
          case 16: {
            TotalReceived = input.ReadInt64();
            break;
          }
          case 24: {
            SendSpeed = input.ReadInt64();
            break;
          }
          case 32: {
            ReceiveSpeed = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UnitProtobuf : pb::IMessage<UnitProtobuf> {
    private static readonly pb::MessageParser<UnitProtobuf> _parser = new pb::MessageParser<UnitProtobuf>(() => new UnitProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnitProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.PipelineMessageReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnitProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnitProtobuf(UnitProtobuf other) : this() {
      key_ = other.key_;
      state_ = other.state_;
      settingsFilePath_ = other.settingsFilePath_;
      settingsProtobuf_ = other.settingsProtobuf_ != null ? other.settingsProtobuf_.Clone() : null;
      runningSettingsProtobuf_ = other.runningSettingsProtobuf_ != null ? other.runningSettingsProtobuf_.Clone() : null;
      processProtobuf_ = other.processProtobuf_ != null ? other.processProtobuf_.Clone() : null;
      performanceCounterProtobuf_ = other.performanceCounterProtobuf_ != null ? other.performanceCounterProtobuf_.Clone() : null;
      networkCounterProtobuf_ = other.networkCounterProtobuf_ != null ? other.networkCounterProtobuf_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnitProtobuf Clone() {
      return new UnitProtobuf(this);
    }

    /// <summary>Field number for the "Key" field.</summary>
    public const int KeyFieldNumber = 1;
    private string key_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "State" field.</summary>
    public const int StateFieldNumber = 2;
    private int state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "SettingsFilePath" field.</summary>
    public const int SettingsFilePathFieldNumber = 3;
    private string settingsFilePath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SettingsFilePath {
      get { return settingsFilePath_; }
      set {
        settingsFilePath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SettingsProtobuf" field.</summary>
    public const int SettingsProtobufFieldNumber = 4;
    private global::wind.Entities.Protobuf.UnitSettingsProtobuf settingsProtobuf_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::wind.Entities.Protobuf.UnitSettingsProtobuf SettingsProtobuf {
      get { return settingsProtobuf_; }
      set {
        settingsProtobuf_ = value;
      }
    }

    /// <summary>Field number for the "RunningSettingsProtobuf" field.</summary>
    public const int RunningSettingsProtobufFieldNumber = 5;
    private global::wind.Entities.Protobuf.UnitSettingsProtobuf runningSettingsProtobuf_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::wind.Entities.Protobuf.UnitSettingsProtobuf RunningSettingsProtobuf {
      get { return runningSettingsProtobuf_; }
      set {
        runningSettingsProtobuf_ = value;
      }
    }

    /// <summary>Field number for the "ProcessProtobuf" field.</summary>
    public const int ProcessProtobufFieldNumber = 6;
    private global::wind.Entities.Protobuf.ProcessProtobuf processProtobuf_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::wind.Entities.Protobuf.ProcessProtobuf ProcessProtobuf {
      get { return processProtobuf_; }
      set {
        processProtobuf_ = value;
      }
    }

    /// <summary>Field number for the "PerformanceCounterProtobuf" field.</summary>
    public const int PerformanceCounterProtobufFieldNumber = 7;
    private global::wind.Entities.Protobuf.UnitPerformanceCounterProtobuf performanceCounterProtobuf_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::wind.Entities.Protobuf.UnitPerformanceCounterProtobuf PerformanceCounterProtobuf {
      get { return performanceCounterProtobuf_; }
      set {
        performanceCounterProtobuf_ = value;
      }
    }

    /// <summary>Field number for the "NetworkCounterProtobuf" field.</summary>
    public const int NetworkCounterProtobufFieldNumber = 8;
    private global::wind.Entities.Protobuf.UnitNetworkCounterProtobuf networkCounterProtobuf_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::wind.Entities.Protobuf.UnitNetworkCounterProtobuf NetworkCounterProtobuf {
      get { return networkCounterProtobuf_; }
      set {
        networkCounterProtobuf_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnitProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnitProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (State != other.State) return false;
      if (SettingsFilePath != other.SettingsFilePath) return false;
      if (!object.Equals(SettingsProtobuf, other.SettingsProtobuf)) return false;
      if (!object.Equals(RunningSettingsProtobuf, other.RunningSettingsProtobuf)) return false;
      if (!object.Equals(ProcessProtobuf, other.ProcessProtobuf)) return false;
      if (!object.Equals(PerformanceCounterProtobuf, other.PerformanceCounterProtobuf)) return false;
      if (!object.Equals(NetworkCounterProtobuf, other.NetworkCounterProtobuf)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (State != 0) hash ^= State.GetHashCode();
      if (SettingsFilePath.Length != 0) hash ^= SettingsFilePath.GetHashCode();
      if (settingsProtobuf_ != null) hash ^= SettingsProtobuf.GetHashCode();
      if (runningSettingsProtobuf_ != null) hash ^= RunningSettingsProtobuf.GetHashCode();
      if (processProtobuf_ != null) hash ^= ProcessProtobuf.GetHashCode();
      if (performanceCounterProtobuf_ != null) hash ^= PerformanceCounterProtobuf.GetHashCode();
      if (networkCounterProtobuf_ != null) hash ^= NetworkCounterProtobuf.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (State != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(State);
      }
      if (SettingsFilePath.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SettingsFilePath);
      }
      if (settingsProtobuf_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(SettingsProtobuf);
      }
      if (runningSettingsProtobuf_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(RunningSettingsProtobuf);
      }
      if (processProtobuf_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ProcessProtobuf);
      }
      if (performanceCounterProtobuf_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(PerformanceCounterProtobuf);
      }
      if (networkCounterProtobuf_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(NetworkCounterProtobuf);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(State);
      }
      if (SettingsFilePath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SettingsFilePath);
      }
      if (settingsProtobuf_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SettingsProtobuf);
      }
      if (runningSettingsProtobuf_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RunningSettingsProtobuf);
      }
      if (processProtobuf_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProcessProtobuf);
      }
      if (performanceCounterProtobuf_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PerformanceCounterProtobuf);
      }
      if (networkCounterProtobuf_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NetworkCounterProtobuf);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnitProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.State != 0) {
        State = other.State;
      }
      if (other.SettingsFilePath.Length != 0) {
        SettingsFilePath = other.SettingsFilePath;
      }
      if (other.settingsProtobuf_ != null) {
        if (settingsProtobuf_ == null) {
          SettingsProtobuf = new global::wind.Entities.Protobuf.UnitSettingsProtobuf();
        }
        SettingsProtobuf.MergeFrom(other.SettingsProtobuf);
      }
      if (other.runningSettingsProtobuf_ != null) {
        if (runningSettingsProtobuf_ == null) {
          RunningSettingsProtobuf = new global::wind.Entities.Protobuf.UnitSettingsProtobuf();
        }
        RunningSettingsProtobuf.MergeFrom(other.RunningSettingsProtobuf);
      }
      if (other.processProtobuf_ != null) {
        if (processProtobuf_ == null) {
          ProcessProtobuf = new global::wind.Entities.Protobuf.ProcessProtobuf();
        }
        ProcessProtobuf.MergeFrom(other.ProcessProtobuf);
      }
      if (other.performanceCounterProtobuf_ != null) {
        if (performanceCounterProtobuf_ == null) {
          PerformanceCounterProtobuf = new global::wind.Entities.Protobuf.UnitPerformanceCounterProtobuf();
        }
        PerformanceCounterProtobuf.MergeFrom(other.PerformanceCounterProtobuf);
      }
      if (other.networkCounterProtobuf_ != null) {
        if (networkCounterProtobuf_ == null) {
          NetworkCounterProtobuf = new global::wind.Entities.Protobuf.UnitNetworkCounterProtobuf();
        }
        NetworkCounterProtobuf.MergeFrom(other.NetworkCounterProtobuf);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 16: {
            State = input.ReadInt32();
            break;
          }
          case 26: {
            SettingsFilePath = input.ReadString();
            break;
          }
          case 34: {
            if (settingsProtobuf_ == null) {
              SettingsProtobuf = new global::wind.Entities.Protobuf.UnitSettingsProtobuf();
            }
            input.ReadMessage(SettingsProtobuf);
            break;
          }
          case 42: {
            if (runningSettingsProtobuf_ == null) {
              RunningSettingsProtobuf = new global::wind.Entities.Protobuf.UnitSettingsProtobuf();
            }
            input.ReadMessage(RunningSettingsProtobuf);
            break;
          }
          case 50: {
            if (processProtobuf_ == null) {
              ProcessProtobuf = new global::wind.Entities.Protobuf.ProcessProtobuf();
            }
            input.ReadMessage(ProcessProtobuf);
            break;
          }
          case 58: {
            if (performanceCounterProtobuf_ == null) {
              PerformanceCounterProtobuf = new global::wind.Entities.Protobuf.UnitPerformanceCounterProtobuf();
            }
            input.ReadMessage(PerformanceCounterProtobuf);
            break;
          }
          case 66: {
            if (networkCounterProtobuf_ == null) {
              NetworkCounterProtobuf = new global::wind.Entities.Protobuf.UnitNetworkCounterProtobuf();
            }
            input.ReadMessage(NetworkCounterProtobuf);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DaemonProtobuf : pb::IMessage<DaemonProtobuf> {
    private static readonly pb::MessageParser<DaemonProtobuf> _parser = new pb::MessageParser<DaemonProtobuf>(() => new DaemonProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DaemonProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.PipelineMessageReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DaemonProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DaemonProtobuf(DaemonProtobuf other) : this() {
      name_ = other.name_;
      description_ = other.description_;
      absoluteExecutePath_ = other.absoluteExecutePath_;
      absoluteWorkDirectory_ = other.absoluteWorkDirectory_;
      processProtobuf_ = other.processProtobuf_ != null ? other.processProtobuf_.Clone() : null;
      performanceCounterProtobuf_ = other.performanceCounterProtobuf_ != null ? other.performanceCounterProtobuf_.Clone() : null;
      networkCounterProtobuf_ = other.networkCounterProtobuf_ != null ? other.networkCounterProtobuf_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DaemonProtobuf Clone() {
      return new DaemonProtobuf(this);
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AbsoluteExecutePath" field.</summary>
    public const int AbsoluteExecutePathFieldNumber = 3;
    private string absoluteExecutePath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AbsoluteExecutePath {
      get { return absoluteExecutePath_; }
      set {
        absoluteExecutePath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AbsoluteWorkDirectory" field.</summary>
    public const int AbsoluteWorkDirectoryFieldNumber = 4;
    private string absoluteWorkDirectory_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AbsoluteWorkDirectory {
      get { return absoluteWorkDirectory_; }
      set {
        absoluteWorkDirectory_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ProcessProtobuf" field.</summary>
    public const int ProcessProtobufFieldNumber = 5;
    private global::wind.Entities.Protobuf.ProcessProtobuf processProtobuf_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::wind.Entities.Protobuf.ProcessProtobuf ProcessProtobuf {
      get { return processProtobuf_; }
      set {
        processProtobuf_ = value;
      }
    }

    /// <summary>Field number for the "PerformanceCounterProtobuf" field.</summary>
    public const int PerformanceCounterProtobufFieldNumber = 6;
    private global::wind.Entities.Protobuf.UnitPerformanceCounterProtobuf performanceCounterProtobuf_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::wind.Entities.Protobuf.UnitPerformanceCounterProtobuf PerformanceCounterProtobuf {
      get { return performanceCounterProtobuf_; }
      set {
        performanceCounterProtobuf_ = value;
      }
    }

    /// <summary>Field number for the "NetworkCounterProtobuf" field.</summary>
    public const int NetworkCounterProtobufFieldNumber = 7;
    private global::wind.Entities.Protobuf.UnitNetworkCounterProtobuf networkCounterProtobuf_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::wind.Entities.Protobuf.UnitNetworkCounterProtobuf NetworkCounterProtobuf {
      get { return networkCounterProtobuf_; }
      set {
        networkCounterProtobuf_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DaemonProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DaemonProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      if (AbsoluteExecutePath != other.AbsoluteExecutePath) return false;
      if (AbsoluteWorkDirectory != other.AbsoluteWorkDirectory) return false;
      if (!object.Equals(ProcessProtobuf, other.ProcessProtobuf)) return false;
      if (!object.Equals(PerformanceCounterProtobuf, other.PerformanceCounterProtobuf)) return false;
      if (!object.Equals(NetworkCounterProtobuf, other.NetworkCounterProtobuf)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (AbsoluteExecutePath.Length != 0) hash ^= AbsoluteExecutePath.GetHashCode();
      if (AbsoluteWorkDirectory.Length != 0) hash ^= AbsoluteWorkDirectory.GetHashCode();
      if (processProtobuf_ != null) hash ^= ProcessProtobuf.GetHashCode();
      if (performanceCounterProtobuf_ != null) hash ^= PerformanceCounterProtobuf.GetHashCode();
      if (networkCounterProtobuf_ != null) hash ^= NetworkCounterProtobuf.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (AbsoluteExecutePath.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(AbsoluteExecutePath);
      }
      if (AbsoluteWorkDirectory.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(AbsoluteWorkDirectory);
      }
      if (processProtobuf_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ProcessProtobuf);
      }
      if (performanceCounterProtobuf_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(PerformanceCounterProtobuf);
      }
      if (networkCounterProtobuf_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(NetworkCounterProtobuf);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (AbsoluteExecutePath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AbsoluteExecutePath);
      }
      if (AbsoluteWorkDirectory.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AbsoluteWorkDirectory);
      }
      if (processProtobuf_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProcessProtobuf);
      }
      if (performanceCounterProtobuf_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PerformanceCounterProtobuf);
      }
      if (networkCounterProtobuf_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NetworkCounterProtobuf);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DaemonProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.AbsoluteExecutePath.Length != 0) {
        AbsoluteExecutePath = other.AbsoluteExecutePath;
      }
      if (other.AbsoluteWorkDirectory.Length != 0) {
        AbsoluteWorkDirectory = other.AbsoluteWorkDirectory;
      }
      if (other.processProtobuf_ != null) {
        if (processProtobuf_ == null) {
          ProcessProtobuf = new global::wind.Entities.Protobuf.ProcessProtobuf();
        }
        ProcessProtobuf.MergeFrom(other.ProcessProtobuf);
      }
      if (other.performanceCounterProtobuf_ != null) {
        if (performanceCounterProtobuf_ == null) {
          PerformanceCounterProtobuf = new global::wind.Entities.Protobuf.UnitPerformanceCounterProtobuf();
        }
        PerformanceCounterProtobuf.MergeFrom(other.PerformanceCounterProtobuf);
      }
      if (other.networkCounterProtobuf_ != null) {
        if (networkCounterProtobuf_ == null) {
          NetworkCounterProtobuf = new global::wind.Entities.Protobuf.UnitNetworkCounterProtobuf();
        }
        NetworkCounterProtobuf.MergeFrom(other.NetworkCounterProtobuf);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            AbsoluteExecutePath = input.ReadString();
            break;
          }
          case 34: {
            AbsoluteWorkDirectory = input.ReadString();
            break;
          }
          case 42: {
            if (processProtobuf_ == null) {
              ProcessProtobuf = new global::wind.Entities.Protobuf.ProcessProtobuf();
            }
            input.ReadMessage(ProcessProtobuf);
            break;
          }
          case 50: {
            if (performanceCounterProtobuf_ == null) {
              PerformanceCounterProtobuf = new global::wind.Entities.Protobuf.UnitPerformanceCounterProtobuf();
            }
            input.ReadMessage(PerformanceCounterProtobuf);
            break;
          }
          case 58: {
            if (networkCounterProtobuf_ == null) {
              NetworkCounterProtobuf = new global::wind.Entities.Protobuf.UnitNetworkCounterProtobuf();
            }
            input.ReadMessage(NetworkCounterProtobuf);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 测试包
  /// </summary>
  public sealed partial class PacketTestProtobuf : pb::IMessage<PacketTestProtobuf> {
    private static readonly pb::MessageParser<PacketTestProtobuf> _parser = new pb::MessageParser<PacketTestProtobuf>(() => new PacketTestProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PacketTestProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.PipelineMessageReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PacketTestProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PacketTestProtobuf(PacketTestProtobuf other) : this() {
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PacketTestProtobuf Clone() {
      return new PacketTestProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PacketTestProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PacketTestProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PacketTestProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// windctl status unitKey
  /// </summary>
  public sealed partial class StatusRequestProtobuf : pb::IMessage<StatusRequestProtobuf> {
    private static readonly pb::MessageParser<StatusRequestProtobuf> _parser = new pb::MessageParser<StatusRequestProtobuf>(() => new StatusRequestProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StatusRequestProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.PipelineMessageReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatusRequestProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatusRequestProtobuf(StatusRequestProtobuf other) : this() {
      type_ = other.type_;
      unitKey_ = other.unitKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatusRequestProtobuf Clone() {
      return new StatusRequestProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///1001
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "UnitKey" field.</summary>
    public const int UnitKeyFieldNumber = 2;
    private string unitKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UnitKey {
      get { return unitKey_; }
      set {
        unitKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StatusRequestProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StatusRequestProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (UnitKey != other.UnitKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (UnitKey.Length != 0) hash ^= UnitKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (UnitKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UnitKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (UnitKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UnitKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StatusRequestProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.UnitKey.Length != 0) {
        UnitKey = other.UnitKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            UnitKey = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class StatusResponseProtobuf : pb::IMessage<StatusResponseProtobuf> {
    private static readonly pb::MessageParser<StatusResponseProtobuf> _parser = new pb::MessageParser<StatusResponseProtobuf>(() => new StatusResponseProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StatusResponseProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.PipelineMessageReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatusResponseProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatusResponseProtobuf(StatusResponseProtobuf other) : this() {
      type_ = other.type_;
      unitKey_ = other.unitKey_;
      executed_ = other.executed_;
      noExecuteMessage_ = other.noExecuteMessage_;
      unitProtobuf_ = other.unitProtobuf_ != null ? other.unitProtobuf_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatusResponseProtobuf Clone() {
      return new StatusResponseProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///2001
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "UnitKey" field.</summary>
    public const int UnitKeyFieldNumber = 2;
    private string unitKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UnitKey {
      get { return unitKey_; }
      set {
        unitKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Executed" field.</summary>
    public const int ExecutedFieldNumber = 3;
    private bool executed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Executed {
      get { return executed_; }
      set {
        executed_ = value;
      }
    }

    /// <summary>Field number for the "NoExecuteMessage" field.</summary>
    public const int NoExecuteMessageFieldNumber = 4;
    private string noExecuteMessage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NoExecuteMessage {
      get { return noExecuteMessage_; }
      set {
        noExecuteMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "UnitProtobuf" field.</summary>
    public const int UnitProtobufFieldNumber = 5;
    private global::wind.Entities.Protobuf.UnitProtobuf unitProtobuf_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::wind.Entities.Protobuf.UnitProtobuf UnitProtobuf {
      get { return unitProtobuf_; }
      set {
        unitProtobuf_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StatusResponseProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StatusResponseProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (UnitKey != other.UnitKey) return false;
      if (Executed != other.Executed) return false;
      if (NoExecuteMessage != other.NoExecuteMessage) return false;
      if (!object.Equals(UnitProtobuf, other.UnitProtobuf)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (UnitKey.Length != 0) hash ^= UnitKey.GetHashCode();
      if (Executed != false) hash ^= Executed.GetHashCode();
      if (NoExecuteMessage.Length != 0) hash ^= NoExecuteMessage.GetHashCode();
      if (unitProtobuf_ != null) hash ^= UnitProtobuf.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (UnitKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UnitKey);
      }
      if (Executed != false) {
        output.WriteRawTag(24);
        output.WriteBool(Executed);
      }
      if (NoExecuteMessage.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NoExecuteMessage);
      }
      if (unitProtobuf_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(UnitProtobuf);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (UnitKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UnitKey);
      }
      if (Executed != false) {
        size += 1 + 1;
      }
      if (NoExecuteMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NoExecuteMessage);
      }
      if (unitProtobuf_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UnitProtobuf);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StatusResponseProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.UnitKey.Length != 0) {
        UnitKey = other.UnitKey;
      }
      if (other.Executed != false) {
        Executed = other.Executed;
      }
      if (other.NoExecuteMessage.Length != 0) {
        NoExecuteMessage = other.NoExecuteMessage;
      }
      if (other.unitProtobuf_ != null) {
        if (unitProtobuf_ == null) {
          UnitProtobuf = new global::wind.Entities.Protobuf.UnitProtobuf();
        }
        UnitProtobuf.MergeFrom(other.UnitProtobuf);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            UnitKey = input.ReadString();
            break;
          }
          case 24: {
            Executed = input.ReadBool();
            break;
          }
          case 34: {
            NoExecuteMessage = input.ReadString();
            break;
          }
          case 42: {
            if (unitProtobuf_ == null) {
              UnitProtobuf = new global::wind.Entities.Protobuf.UnitProtobuf();
            }
            input.ReadMessage(UnitProtobuf);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// windctl start unitKey
  /// </summary>
  public sealed partial class StartRequestProtobuf : pb::IMessage<StartRequestProtobuf> {
    private static readonly pb::MessageParser<StartRequestProtobuf> _parser = new pb::MessageParser<StartRequestProtobuf>(() => new StartRequestProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StartRequestProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.PipelineMessageReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartRequestProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartRequestProtobuf(StartRequestProtobuf other) : this() {
      type_ = other.type_;
      unitKey_ = other.unitKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartRequestProtobuf Clone() {
      return new StartRequestProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///1002
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "UnitKey" field.</summary>
    public const int UnitKeyFieldNumber = 2;
    private string unitKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UnitKey {
      get { return unitKey_; }
      set {
        unitKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StartRequestProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StartRequestProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (UnitKey != other.UnitKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (UnitKey.Length != 0) hash ^= UnitKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (UnitKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UnitKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (UnitKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UnitKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StartRequestProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.UnitKey.Length != 0) {
        UnitKey = other.UnitKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            UnitKey = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class StartResponseProtobuf : pb::IMessage<StartResponseProtobuf> {
    private static readonly pb::MessageParser<StartResponseProtobuf> _parser = new pb::MessageParser<StartResponseProtobuf>(() => new StartResponseProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StartResponseProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.PipelineMessageReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartResponseProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartResponseProtobuf(StartResponseProtobuf other) : this() {
      type_ = other.type_;
      unitKey_ = other.unitKey_;
      executed_ = other.executed_;
      noExecuteMessage_ = other.noExecuteMessage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartResponseProtobuf Clone() {
      return new StartResponseProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///2002
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "UnitKey" field.</summary>
    public const int UnitKeyFieldNumber = 2;
    private string unitKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UnitKey {
      get { return unitKey_; }
      set {
        unitKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Executed" field.</summary>
    public const int ExecutedFieldNumber = 3;
    private bool executed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Executed {
      get { return executed_; }
      set {
        executed_ = value;
      }
    }

    /// <summary>Field number for the "NoExecuteMessage" field.</summary>
    public const int NoExecuteMessageFieldNumber = 4;
    private string noExecuteMessage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NoExecuteMessage {
      get { return noExecuteMessage_; }
      set {
        noExecuteMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StartResponseProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StartResponseProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (UnitKey != other.UnitKey) return false;
      if (Executed != other.Executed) return false;
      if (NoExecuteMessage != other.NoExecuteMessage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (UnitKey.Length != 0) hash ^= UnitKey.GetHashCode();
      if (Executed != false) hash ^= Executed.GetHashCode();
      if (NoExecuteMessage.Length != 0) hash ^= NoExecuteMessage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (UnitKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UnitKey);
      }
      if (Executed != false) {
        output.WriteRawTag(24);
        output.WriteBool(Executed);
      }
      if (NoExecuteMessage.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NoExecuteMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (UnitKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UnitKey);
      }
      if (Executed != false) {
        size += 1 + 1;
      }
      if (NoExecuteMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NoExecuteMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StartResponseProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.UnitKey.Length != 0) {
        UnitKey = other.UnitKey;
      }
      if (other.Executed != false) {
        Executed = other.Executed;
      }
      if (other.NoExecuteMessage.Length != 0) {
        NoExecuteMessage = other.NoExecuteMessage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            UnitKey = input.ReadString();
            break;
          }
          case 24: {
            Executed = input.ReadBool();
            break;
          }
          case 34: {
            NoExecuteMessage = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// windctl stop unitKey
  /// </summary>
  public sealed partial class StopRequestProtobuf : pb::IMessage<StopRequestProtobuf> {
    private static readonly pb::MessageParser<StopRequestProtobuf> _parser = new pb::MessageParser<StopRequestProtobuf>(() => new StopRequestProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StopRequestProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.PipelineMessageReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopRequestProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopRequestProtobuf(StopRequestProtobuf other) : this() {
      type_ = other.type_;
      unitKey_ = other.unitKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopRequestProtobuf Clone() {
      return new StopRequestProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///1003
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "UnitKey" field.</summary>
    public const int UnitKeyFieldNumber = 2;
    private string unitKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UnitKey {
      get { return unitKey_; }
      set {
        unitKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StopRequestProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StopRequestProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (UnitKey != other.UnitKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (UnitKey.Length != 0) hash ^= UnitKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (UnitKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UnitKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (UnitKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UnitKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StopRequestProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.UnitKey.Length != 0) {
        UnitKey = other.UnitKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            UnitKey = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class StopResponseProtobuf : pb::IMessage<StopResponseProtobuf> {
    private static readonly pb::MessageParser<StopResponseProtobuf> _parser = new pb::MessageParser<StopResponseProtobuf>(() => new StopResponseProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StopResponseProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.PipelineMessageReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopResponseProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopResponseProtobuf(StopResponseProtobuf other) : this() {
      type_ = other.type_;
      unitKey_ = other.unitKey_;
      executed_ = other.executed_;
      noExecuteMessage_ = other.noExecuteMessage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopResponseProtobuf Clone() {
      return new StopResponseProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///2003
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "UnitKey" field.</summary>
    public const int UnitKeyFieldNumber = 2;
    private string unitKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UnitKey {
      get { return unitKey_; }
      set {
        unitKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Executed" field.</summary>
    public const int ExecutedFieldNumber = 3;
    private bool executed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Executed {
      get { return executed_; }
      set {
        executed_ = value;
      }
    }

    /// <summary>Field number for the "NoExecuteMessage" field.</summary>
    public const int NoExecuteMessageFieldNumber = 4;
    private string noExecuteMessage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NoExecuteMessage {
      get { return noExecuteMessage_; }
      set {
        noExecuteMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StopResponseProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StopResponseProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (UnitKey != other.UnitKey) return false;
      if (Executed != other.Executed) return false;
      if (NoExecuteMessage != other.NoExecuteMessage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (UnitKey.Length != 0) hash ^= UnitKey.GetHashCode();
      if (Executed != false) hash ^= Executed.GetHashCode();
      if (NoExecuteMessage.Length != 0) hash ^= NoExecuteMessage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (UnitKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UnitKey);
      }
      if (Executed != false) {
        output.WriteRawTag(24);
        output.WriteBool(Executed);
      }
      if (NoExecuteMessage.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NoExecuteMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (UnitKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UnitKey);
      }
      if (Executed != false) {
        size += 1 + 1;
      }
      if (NoExecuteMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NoExecuteMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StopResponseProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.UnitKey.Length != 0) {
        UnitKey = other.UnitKey;
      }
      if (other.Executed != false) {
        Executed = other.Executed;
      }
      if (other.NoExecuteMessage.Length != 0) {
        NoExecuteMessage = other.NoExecuteMessage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            UnitKey = input.ReadString();
            break;
          }
          case 24: {
            Executed = input.ReadBool();
            break;
          }
          case 34: {
            NoExecuteMessage = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// windctl restart unitKey
  /// </summary>
  public sealed partial class RestartRequestProtobuf : pb::IMessage<RestartRequestProtobuf> {
    private static readonly pb::MessageParser<RestartRequestProtobuf> _parser = new pb::MessageParser<RestartRequestProtobuf>(() => new RestartRequestProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RestartRequestProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.PipelineMessageReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestartRequestProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestartRequestProtobuf(RestartRequestProtobuf other) : this() {
      type_ = other.type_;
      unitKey_ = other.unitKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestartRequestProtobuf Clone() {
      return new RestartRequestProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///1004
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "UnitKey" field.</summary>
    public const int UnitKeyFieldNumber = 2;
    private string unitKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UnitKey {
      get { return unitKey_; }
      set {
        unitKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RestartRequestProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RestartRequestProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (UnitKey != other.UnitKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (UnitKey.Length != 0) hash ^= UnitKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (UnitKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UnitKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (UnitKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UnitKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RestartRequestProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.UnitKey.Length != 0) {
        UnitKey = other.UnitKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            UnitKey = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RestartResponseProtobuf : pb::IMessage<RestartResponseProtobuf> {
    private static readonly pb::MessageParser<RestartResponseProtobuf> _parser = new pb::MessageParser<RestartResponseProtobuf>(() => new RestartResponseProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RestartResponseProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.PipelineMessageReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestartResponseProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestartResponseProtobuf(RestartResponseProtobuf other) : this() {
      type_ = other.type_;
      unitKey_ = other.unitKey_;
      executed_ = other.executed_;
      noExecuteMessage_ = other.noExecuteMessage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestartResponseProtobuf Clone() {
      return new RestartResponseProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///2004
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "UnitKey" field.</summary>
    public const int UnitKeyFieldNumber = 2;
    private string unitKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UnitKey {
      get { return unitKey_; }
      set {
        unitKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Executed" field.</summary>
    public const int ExecutedFieldNumber = 3;
    private bool executed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Executed {
      get { return executed_; }
      set {
        executed_ = value;
      }
    }

    /// <summary>Field number for the "NoExecuteMessage" field.</summary>
    public const int NoExecuteMessageFieldNumber = 4;
    private string noExecuteMessage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NoExecuteMessage {
      get { return noExecuteMessage_; }
      set {
        noExecuteMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RestartResponseProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RestartResponseProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (UnitKey != other.UnitKey) return false;
      if (Executed != other.Executed) return false;
      if (NoExecuteMessage != other.NoExecuteMessage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (UnitKey.Length != 0) hash ^= UnitKey.GetHashCode();
      if (Executed != false) hash ^= Executed.GetHashCode();
      if (NoExecuteMessage.Length != 0) hash ^= NoExecuteMessage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (UnitKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UnitKey);
      }
      if (Executed != false) {
        output.WriteRawTag(24);
        output.WriteBool(Executed);
      }
      if (NoExecuteMessage.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NoExecuteMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (UnitKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UnitKey);
      }
      if (Executed != false) {
        size += 1 + 1;
      }
      if (NoExecuteMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NoExecuteMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RestartResponseProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.UnitKey.Length != 0) {
        UnitKey = other.UnitKey;
      }
      if (other.Executed != false) {
        Executed = other.Executed;
      }
      if (other.NoExecuteMessage.Length != 0) {
        NoExecuteMessage = other.NoExecuteMessage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            UnitKey = input.ReadString();
            break;
          }
          case 24: {
            Executed = input.ReadBool();
            break;
          }
          case 34: {
            NoExecuteMessage = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// windctl load unitKey
  /// </summary>
  public sealed partial class LoadRequestProtobuf : pb::IMessage<LoadRequestProtobuf> {
    private static readonly pb::MessageParser<LoadRequestProtobuf> _parser = new pb::MessageParser<LoadRequestProtobuf>(() => new LoadRequestProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoadRequestProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.PipelineMessageReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadRequestProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadRequestProtobuf(LoadRequestProtobuf other) : this() {
      type_ = other.type_;
      unitKey_ = other.unitKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadRequestProtobuf Clone() {
      return new LoadRequestProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///1005
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "UnitKey" field.</summary>
    public const int UnitKeyFieldNumber = 2;
    private string unitKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UnitKey {
      get { return unitKey_; }
      set {
        unitKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoadRequestProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoadRequestProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (UnitKey != other.UnitKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (UnitKey.Length != 0) hash ^= UnitKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (UnitKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UnitKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (UnitKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UnitKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoadRequestProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.UnitKey.Length != 0) {
        UnitKey = other.UnitKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            UnitKey = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LoadResponseProtobuf : pb::IMessage<LoadResponseProtobuf> {
    private static readonly pb::MessageParser<LoadResponseProtobuf> _parser = new pb::MessageParser<LoadResponseProtobuf>(() => new LoadResponseProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoadResponseProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.PipelineMessageReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadResponseProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadResponseProtobuf(LoadResponseProtobuf other) : this() {
      type_ = other.type_;
      unitKey_ = other.unitKey_;
      executed_ = other.executed_;
      noExecuteMessage_ = other.noExecuteMessage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadResponseProtobuf Clone() {
      return new LoadResponseProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///2005
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "UnitKey" field.</summary>
    public const int UnitKeyFieldNumber = 2;
    private string unitKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UnitKey {
      get { return unitKey_; }
      set {
        unitKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Executed" field.</summary>
    public const int ExecutedFieldNumber = 3;
    private bool executed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Executed {
      get { return executed_; }
      set {
        executed_ = value;
      }
    }

    /// <summary>Field number for the "NoExecuteMessage" field.</summary>
    public const int NoExecuteMessageFieldNumber = 4;
    private string noExecuteMessage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NoExecuteMessage {
      get { return noExecuteMessage_; }
      set {
        noExecuteMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoadResponseProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoadResponseProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (UnitKey != other.UnitKey) return false;
      if (Executed != other.Executed) return false;
      if (NoExecuteMessage != other.NoExecuteMessage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (UnitKey.Length != 0) hash ^= UnitKey.GetHashCode();
      if (Executed != false) hash ^= Executed.GetHashCode();
      if (NoExecuteMessage.Length != 0) hash ^= NoExecuteMessage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (UnitKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UnitKey);
      }
      if (Executed != false) {
        output.WriteRawTag(24);
        output.WriteBool(Executed);
      }
      if (NoExecuteMessage.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NoExecuteMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (UnitKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UnitKey);
      }
      if (Executed != false) {
        size += 1 + 1;
      }
      if (NoExecuteMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NoExecuteMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoadResponseProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.UnitKey.Length != 0) {
        UnitKey = other.UnitKey;
      }
      if (other.Executed != false) {
        Executed = other.Executed;
      }
      if (other.NoExecuteMessage.Length != 0) {
        NoExecuteMessage = other.NoExecuteMessage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            UnitKey = input.ReadString();
            break;
          }
          case 24: {
            Executed = input.ReadBool();
            break;
          }
          case 34: {
            NoExecuteMessage = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// windctl remove unitKey
  /// </summary>
  public sealed partial class RemoveRequestProtobuf : pb::IMessage<RemoveRequestProtobuf> {
    private static readonly pb::MessageParser<RemoveRequestProtobuf> _parser = new pb::MessageParser<RemoveRequestProtobuf>(() => new RemoveRequestProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemoveRequestProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.PipelineMessageReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveRequestProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveRequestProtobuf(RemoveRequestProtobuf other) : this() {
      type_ = other.type_;
      unitKey_ = other.unitKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveRequestProtobuf Clone() {
      return new RemoveRequestProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///1006
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "UnitKey" field.</summary>
    public const int UnitKeyFieldNumber = 2;
    private string unitKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UnitKey {
      get { return unitKey_; }
      set {
        unitKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemoveRequestProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemoveRequestProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (UnitKey != other.UnitKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (UnitKey.Length != 0) hash ^= UnitKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (UnitKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UnitKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (UnitKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UnitKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemoveRequestProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.UnitKey.Length != 0) {
        UnitKey = other.UnitKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            UnitKey = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RemoveResponseProtobuf : pb::IMessage<RemoveResponseProtobuf> {
    private static readonly pb::MessageParser<RemoveResponseProtobuf> _parser = new pb::MessageParser<RemoveResponseProtobuf>(() => new RemoveResponseProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemoveResponseProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.PipelineMessageReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveResponseProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveResponseProtobuf(RemoveResponseProtobuf other) : this() {
      type_ = other.type_;
      unitKey_ = other.unitKey_;
      executed_ = other.executed_;
      noExecuteMessage_ = other.noExecuteMessage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveResponseProtobuf Clone() {
      return new RemoveResponseProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///2006
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "UnitKey" field.</summary>
    public const int UnitKeyFieldNumber = 2;
    private string unitKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UnitKey {
      get { return unitKey_; }
      set {
        unitKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Executed" field.</summary>
    public const int ExecutedFieldNumber = 3;
    private bool executed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Executed {
      get { return executed_; }
      set {
        executed_ = value;
      }
    }

    /// <summary>Field number for the "NoExecuteMessage" field.</summary>
    public const int NoExecuteMessageFieldNumber = 4;
    private string noExecuteMessage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NoExecuteMessage {
      get { return noExecuteMessage_; }
      set {
        noExecuteMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemoveResponseProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemoveResponseProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (UnitKey != other.UnitKey) return false;
      if (Executed != other.Executed) return false;
      if (NoExecuteMessage != other.NoExecuteMessage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (UnitKey.Length != 0) hash ^= UnitKey.GetHashCode();
      if (Executed != false) hash ^= Executed.GetHashCode();
      if (NoExecuteMessage.Length != 0) hash ^= NoExecuteMessage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (UnitKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UnitKey);
      }
      if (Executed != false) {
        output.WriteRawTag(24);
        output.WriteBool(Executed);
      }
      if (NoExecuteMessage.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NoExecuteMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (UnitKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UnitKey);
      }
      if (Executed != false) {
        size += 1 + 1;
      }
      if (NoExecuteMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NoExecuteMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemoveResponseProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.UnitKey.Length != 0) {
        UnitKey = other.UnitKey;
      }
      if (other.Executed != false) {
        Executed = other.Executed;
      }
      if (other.NoExecuteMessage.Length != 0) {
        NoExecuteMessage = other.NoExecuteMessage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            UnitKey = input.ReadString();
            break;
          }
          case 24: {
            Executed = input.ReadBool();
            break;
          }
          case 34: {
            NoExecuteMessage = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// windctl status-all
  /// </summary>
  public sealed partial class StatusAllRequestProtobuf : pb::IMessage<StatusAllRequestProtobuf> {
    private static readonly pb::MessageParser<StatusAllRequestProtobuf> _parser = new pb::MessageParser<StatusAllRequestProtobuf>(() => new StatusAllRequestProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StatusAllRequestProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.PipelineMessageReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatusAllRequestProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatusAllRequestProtobuf(StatusAllRequestProtobuf other) : this() {
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatusAllRequestProtobuf Clone() {
      return new StatusAllRequestProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///1101
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StatusAllRequestProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StatusAllRequestProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StatusAllRequestProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class StatusAllResponseProtobuf : pb::IMessage<StatusAllResponseProtobuf> {
    private static readonly pb::MessageParser<StatusAllResponseProtobuf> _parser = new pb::MessageParser<StatusAllResponseProtobuf>(() => new StatusAllResponseProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StatusAllResponseProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.PipelineMessageReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatusAllResponseProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatusAllResponseProtobuf(StatusAllResponseProtobuf other) : this() {
      type_ = other.type_;
      unitProtobufArray_ = other.unitProtobufArray_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatusAllResponseProtobuf Clone() {
      return new StatusAllResponseProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///2101
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "UnitProtobufArray" field.</summary>
    public const int UnitProtobufArrayFieldNumber = 2;
    private static readonly pb::FieldCodec<global::wind.Entities.Protobuf.UnitProtobuf> _repeated_unitProtobufArray_codec
        = pb::FieldCodec.ForMessage(18, global::wind.Entities.Protobuf.UnitProtobuf.Parser);
    private readonly pbc::RepeatedField<global::wind.Entities.Protobuf.UnitProtobuf> unitProtobufArray_ = new pbc::RepeatedField<global::wind.Entities.Protobuf.UnitProtobuf>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::wind.Entities.Protobuf.UnitProtobuf> UnitProtobufArray {
      get { return unitProtobufArray_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StatusAllResponseProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StatusAllResponseProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if(!unitProtobufArray_.Equals(other.unitProtobufArray_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      hash ^= unitProtobufArray_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      unitProtobufArray_.WriteTo(output, _repeated_unitProtobufArray_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      size += unitProtobufArray_.CalculateSize(_repeated_unitProtobufArray_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StatusAllResponseProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      unitProtobufArray_.Add(other.unitProtobufArray_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            unitProtobufArray_.AddEntriesFrom(input, _repeated_unitProtobufArray_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// windctl start-all
  /// </summary>
  public sealed partial class StartAllRequestProtobuf : pb::IMessage<StartAllRequestProtobuf> {
    private static readonly pb::MessageParser<StartAllRequestProtobuf> _parser = new pb::MessageParser<StartAllRequestProtobuf>(() => new StartAllRequestProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StartAllRequestProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.PipelineMessageReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartAllRequestProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartAllRequestProtobuf(StartAllRequestProtobuf other) : this() {
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartAllRequestProtobuf Clone() {
      return new StartAllRequestProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///1102
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StartAllRequestProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StartAllRequestProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StartAllRequestProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class StartAllResponseProtobuf : pb::IMessage<StartAllResponseProtobuf> {
    private static readonly pb::MessageParser<StartAllResponseProtobuf> _parser = new pb::MessageParser<StartAllResponseProtobuf>(() => new StartAllResponseProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StartAllResponseProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.PipelineMessageReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartAllResponseProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartAllResponseProtobuf(StartAllResponseProtobuf other) : this() {
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartAllResponseProtobuf Clone() {
      return new StartAllResponseProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///2102
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StartAllResponseProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StartAllResponseProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StartAllResponseProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// windctl stop-all
  /// </summary>
  public sealed partial class StopAllRequestProtobuf : pb::IMessage<StopAllRequestProtobuf> {
    private static readonly pb::MessageParser<StopAllRequestProtobuf> _parser = new pb::MessageParser<StopAllRequestProtobuf>(() => new StopAllRequestProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StopAllRequestProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.PipelineMessageReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopAllRequestProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopAllRequestProtobuf(StopAllRequestProtobuf other) : this() {
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopAllRequestProtobuf Clone() {
      return new StopAllRequestProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///1103
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StopAllRequestProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StopAllRequestProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StopAllRequestProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class StopAllResponseProtobuf : pb::IMessage<StopAllResponseProtobuf> {
    private static readonly pb::MessageParser<StopAllResponseProtobuf> _parser = new pb::MessageParser<StopAllResponseProtobuf>(() => new StopAllResponseProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StopAllResponseProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.PipelineMessageReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopAllResponseProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopAllResponseProtobuf(StopAllResponseProtobuf other) : this() {
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopAllResponseProtobuf Clone() {
      return new StopAllResponseProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///2103
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StopAllResponseProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StopAllResponseProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StopAllResponseProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// windctl restart-all
  /// </summary>
  public sealed partial class RestartAllRequestProtobuf : pb::IMessage<RestartAllRequestProtobuf> {
    private static readonly pb::MessageParser<RestartAllRequestProtobuf> _parser = new pb::MessageParser<RestartAllRequestProtobuf>(() => new RestartAllRequestProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RestartAllRequestProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.PipelineMessageReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestartAllRequestProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestartAllRequestProtobuf(RestartAllRequestProtobuf other) : this() {
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestartAllRequestProtobuf Clone() {
      return new RestartAllRequestProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///1104
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RestartAllRequestProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RestartAllRequestProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RestartAllRequestProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RestartAllResponseProtobuf : pb::IMessage<RestartAllResponseProtobuf> {
    private static readonly pb::MessageParser<RestartAllResponseProtobuf> _parser = new pb::MessageParser<RestartAllResponseProtobuf>(() => new RestartAllResponseProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RestartAllResponseProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.PipelineMessageReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestartAllResponseProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestartAllResponseProtobuf(RestartAllResponseProtobuf other) : this() {
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestartAllResponseProtobuf Clone() {
      return new RestartAllResponseProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///2104
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RestartAllResponseProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RestartAllResponseProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RestartAllResponseProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// windctl load-all
  /// </summary>
  public sealed partial class LoadAllRequestProtobuf : pb::IMessage<LoadAllRequestProtobuf> {
    private static readonly pb::MessageParser<LoadAllRequestProtobuf> _parser = new pb::MessageParser<LoadAllRequestProtobuf>(() => new LoadAllRequestProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoadAllRequestProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.PipelineMessageReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadAllRequestProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadAllRequestProtobuf(LoadAllRequestProtobuf other) : this() {
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadAllRequestProtobuf Clone() {
      return new LoadAllRequestProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///1105
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoadAllRequestProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoadAllRequestProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoadAllRequestProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LoadAllResponseProtobuf : pb::IMessage<LoadAllResponseProtobuf> {
    private static readonly pb::MessageParser<LoadAllResponseProtobuf> _parser = new pb::MessageParser<LoadAllResponseProtobuf>(() => new LoadAllResponseProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoadAllResponseProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.PipelineMessageReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadAllResponseProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadAllResponseProtobuf(LoadAllResponseProtobuf other) : this() {
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadAllResponseProtobuf Clone() {
      return new LoadAllResponseProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///2105
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoadAllResponseProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoadAllResponseProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoadAllResponseProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// windctl remove-all
  /// </summary>
  public sealed partial class RemoveAllRequestProtobuf : pb::IMessage<RemoveAllRequestProtobuf> {
    private static readonly pb::MessageParser<RemoveAllRequestProtobuf> _parser = new pb::MessageParser<RemoveAllRequestProtobuf>(() => new RemoveAllRequestProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemoveAllRequestProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.PipelineMessageReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveAllRequestProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveAllRequestProtobuf(RemoveAllRequestProtobuf other) : this() {
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveAllRequestProtobuf Clone() {
      return new RemoveAllRequestProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///1106
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemoveAllRequestProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemoveAllRequestProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemoveAllRequestProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RemoveAllResponseProtobuf : pb::IMessage<RemoveAllResponseProtobuf> {
    private static readonly pb::MessageParser<RemoveAllResponseProtobuf> _parser = new pb::MessageParser<RemoveAllResponseProtobuf>(() => new RemoveAllResponseProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemoveAllResponseProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.PipelineMessageReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveAllResponseProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveAllResponseProtobuf(RemoveAllResponseProtobuf other) : this() {
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveAllResponseProtobuf Clone() {
      return new RemoveAllResponseProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///2106
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemoveAllResponseProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemoveAllResponseProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemoveAllResponseProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// windctl daemon-version
  /// </summary>
  public sealed partial class DaemonVersionRequestProtobuf : pb::IMessage<DaemonVersionRequestProtobuf> {
    private static readonly pb::MessageParser<DaemonVersionRequestProtobuf> _parser = new pb::MessageParser<DaemonVersionRequestProtobuf>(() => new DaemonVersionRequestProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DaemonVersionRequestProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.PipelineMessageReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DaemonVersionRequestProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DaemonVersionRequestProtobuf(DaemonVersionRequestProtobuf other) : this() {
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DaemonVersionRequestProtobuf Clone() {
      return new DaemonVersionRequestProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///1200
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DaemonVersionRequestProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DaemonVersionRequestProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DaemonVersionRequestProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DaemonVersionResponseProtobuf : pb::IMessage<DaemonVersionResponseProtobuf> {
    private static readonly pb::MessageParser<DaemonVersionResponseProtobuf> _parser = new pb::MessageParser<DaemonVersionResponseProtobuf>(() => new DaemonVersionResponseProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DaemonVersionResponseProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.PipelineMessageReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DaemonVersionResponseProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DaemonVersionResponseProtobuf(DaemonVersionResponseProtobuf other) : this() {
      type_ = other.type_;
      majorVersion_ = other.majorVersion_;
      minorVersion_ = other.minorVersion_;
      buildVersion_ = other.buildVersion_;
      revisionVersion_ = other.revisionVersion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DaemonVersionResponseProtobuf Clone() {
      return new DaemonVersionResponseProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///2200
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "MajorVersion" field.</summary>
    public const int MajorVersionFieldNumber = 2;
    private int majorVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MajorVersion {
      get { return majorVersion_; }
      set {
        majorVersion_ = value;
      }
    }

    /// <summary>Field number for the "MinorVersion" field.</summary>
    public const int MinorVersionFieldNumber = 3;
    private int minorVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MinorVersion {
      get { return minorVersion_; }
      set {
        minorVersion_ = value;
      }
    }

    /// <summary>Field number for the "BuildVersion" field.</summary>
    public const int BuildVersionFieldNumber = 4;
    private int buildVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BuildVersion {
      get { return buildVersion_; }
      set {
        buildVersion_ = value;
      }
    }

    /// <summary>Field number for the "RevisionVersion" field.</summary>
    public const int RevisionVersionFieldNumber = 5;
    private int revisionVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RevisionVersion {
      get { return revisionVersion_; }
      set {
        revisionVersion_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DaemonVersionResponseProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DaemonVersionResponseProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (MajorVersion != other.MajorVersion) return false;
      if (MinorVersion != other.MinorVersion) return false;
      if (BuildVersion != other.BuildVersion) return false;
      if (RevisionVersion != other.RevisionVersion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (MajorVersion != 0) hash ^= MajorVersion.GetHashCode();
      if (MinorVersion != 0) hash ^= MinorVersion.GetHashCode();
      if (BuildVersion != 0) hash ^= BuildVersion.GetHashCode();
      if (RevisionVersion != 0) hash ^= RevisionVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (MajorVersion != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MajorVersion);
      }
      if (MinorVersion != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MinorVersion);
      }
      if (BuildVersion != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(BuildVersion);
      }
      if (RevisionVersion != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(RevisionVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (MajorVersion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MajorVersion);
      }
      if (MinorVersion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MinorVersion);
      }
      if (BuildVersion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuildVersion);
      }
      if (RevisionVersion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RevisionVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DaemonVersionResponseProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.MajorVersion != 0) {
        MajorVersion = other.MajorVersion;
      }
      if (other.MinorVersion != 0) {
        MinorVersion = other.MinorVersion;
      }
      if (other.BuildVersion != 0) {
        BuildVersion = other.BuildVersion;
      }
      if (other.RevisionVersion != 0) {
        RevisionVersion = other.RevisionVersion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 16: {
            MajorVersion = input.ReadInt32();
            break;
          }
          case 24: {
            MinorVersion = input.ReadInt32();
            break;
          }
          case 32: {
            BuildVersion = input.ReadInt32();
            break;
          }
          case 40: {
            RevisionVersion = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// windctl daemon-status
  /// </summary>
  public sealed partial class DaemonStatusRequestProtobuf : pb::IMessage<DaemonStatusRequestProtobuf> {
    private static readonly pb::MessageParser<DaemonStatusRequestProtobuf> _parser = new pb::MessageParser<DaemonStatusRequestProtobuf>(() => new DaemonStatusRequestProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DaemonStatusRequestProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.PipelineMessageReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DaemonStatusRequestProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DaemonStatusRequestProtobuf(DaemonStatusRequestProtobuf other) : this() {
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DaemonStatusRequestProtobuf Clone() {
      return new DaemonStatusRequestProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///1201
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DaemonStatusRequestProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DaemonStatusRequestProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DaemonStatusRequestProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DaemonStatusResponseProtobuf : pb::IMessage<DaemonStatusResponseProtobuf> {
    private static readonly pb::MessageParser<DaemonStatusResponseProtobuf> _parser = new pb::MessageParser<DaemonStatusResponseProtobuf>(() => new DaemonStatusResponseProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DaemonStatusResponseProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.PipelineMessageReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DaemonStatusResponseProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DaemonStatusResponseProtobuf(DaemonStatusResponseProtobuf other) : this() {
      type_ = other.type_;
      daemonProtobuf_ = other.daemonProtobuf_ != null ? other.daemonProtobuf_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DaemonStatusResponseProtobuf Clone() {
      return new DaemonStatusResponseProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///2201
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "DaemonProtobuf" field.</summary>
    public const int DaemonProtobufFieldNumber = 2;
    private global::wind.Entities.Protobuf.DaemonProtobuf daemonProtobuf_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::wind.Entities.Protobuf.DaemonProtobuf DaemonProtobuf {
      get { return daemonProtobuf_; }
      set {
        daemonProtobuf_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DaemonStatusResponseProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DaemonStatusResponseProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!object.Equals(DaemonProtobuf, other.DaemonProtobuf)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (daemonProtobuf_ != null) hash ^= DaemonProtobuf.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (daemonProtobuf_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DaemonProtobuf);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (daemonProtobuf_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DaemonProtobuf);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DaemonStatusResponseProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.daemonProtobuf_ != null) {
        if (daemonProtobuf_ == null) {
          DaemonProtobuf = new global::wind.Entities.Protobuf.DaemonProtobuf();
        }
        DaemonProtobuf.MergeFrom(other.DaemonProtobuf);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            if (daemonProtobuf_ == null) {
              DaemonProtobuf = new global::wind.Entities.Protobuf.DaemonProtobuf();
            }
            input.ReadMessage(DaemonProtobuf);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// windctl daemon-shutdown
  /// </summary>
  public sealed partial class DaemonShutdownRequestProtobuf : pb::IMessage<DaemonShutdownRequestProtobuf> {
    private static readonly pb::MessageParser<DaemonShutdownRequestProtobuf> _parser = new pb::MessageParser<DaemonShutdownRequestProtobuf>(() => new DaemonShutdownRequestProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DaemonShutdownRequestProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.PipelineMessageReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DaemonShutdownRequestProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DaemonShutdownRequestProtobuf(DaemonShutdownRequestProtobuf other) : this() {
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DaemonShutdownRequestProtobuf Clone() {
      return new DaemonShutdownRequestProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///1299
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DaemonShutdownRequestProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DaemonShutdownRequestProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DaemonShutdownRequestProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DaemonShutdownResponseProtobuf : pb::IMessage<DaemonShutdownResponseProtobuf> {
    private static readonly pb::MessageParser<DaemonShutdownResponseProtobuf> _parser = new pb::MessageParser<DaemonShutdownResponseProtobuf>(() => new DaemonShutdownResponseProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DaemonShutdownResponseProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.PipelineMessageReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DaemonShutdownResponseProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DaemonShutdownResponseProtobuf(DaemonShutdownResponseProtobuf other) : this() {
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DaemonShutdownResponseProtobuf Clone() {
      return new DaemonShutdownResponseProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///2299
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DaemonShutdownResponseProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DaemonShutdownResponseProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DaemonShutdownResponseProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
