syntax = "proto3";
package wind.Entities.Protobuf;
option csharp_namespace = "wind.Entities.Protobuf";
option optimize_for = LITE_RUNTIME;

message UnitSettingsProtobuf{
  string Name=1;
  string Description=2;
  int32 Type=3;
  string AbsoluteExecutePath=4;
  string AbsoluteWorkDirectory=5;
  string Arguments=6;
  bool AutoStart=7;
  int32 AutoStartDelay=8;
  bool RestartWhenException=9;
  bool MonitorPerformanceUsage=10;
  bool MonitorNetworkUsage=11;
  bool HasArguments=12;
}
message UnitProcessProtobuf{
  int32 Id=1;
  int64 StartTime=2;
}
message UnitPerformanceCounterProtobuf{
  float CPU=1;
  float RAM=2;
}
message UnitNetworkCounterProtobuf{
  int64 TotalSent=1;
  int64 TotalReceived=2;
  int64 SendSpeed=3;
  int64 ReceiveSpeed=4;
}
message UnitProtobuf{
  string Key=1;
  int32 State=2;
  string SettingsFilePath=3;
  UnitSettingsProtobuf SettingsProtobuf=4;
  UnitSettingsProtobuf RunningSettingsProtobuf=5;
  UnitProcessProtobuf ProcessProtobuf=6;
  UnitPerformanceCounterProtobuf PerformanceCounterProtobuf=7;
  UnitNetworkCounterProtobuf NetworkCounterProtobuf=8;
}
message DaemonProtobuf{
  string Name=1;
  string Description=2;
  string AbsoluteExecutePath=3;
  string AbsoluteWorkDirectory=4;
  UnitProcessProtobuf ProcessProtobuf=5;
  UnitPerformanceCounterProtobuf PerformanceCounterProtobuf=6;
  UnitNetworkCounterProtobuf NetworkCounterProtobuf=7;
}

////////////////////////////////////////////////////////////////

// 1x = 客户端向服务端请求
// 2x = 服务端向客户端回复
// 3x = 服务端向客户端通知

////////////////////////////////////////////////////////////////

// 测试包
message PacketTestProtobuf{
  int32 Type=1;//0
}
//心跳
message ClientKeepAliveProtobuf{
  int32 Type=1;//1
}
// 服务端响应客户端链接事件,并回复给客户端
message ServerAcceptConnectionProtobuf{
  int32 Type=1;//21
  string ConnectionId=2;
}
// 客户端向服务端请求验证ControlKey
message ClientOfferControlKeyProtobuf{
  int32 Type=1;//12
  string ConnectionId=2;
  string ControlKey=3;
}
// 服务端回复客户端ControlKey验证结果
message ServerValidateConnectionProtobuf{
  int32 Type=1;//22
  string ConnectionId=2;
  bool Valid=3;
}

////////////////////////////////////////////////////////////////

// windctl status unitKey
message StatusRequestProtobuf{
  int32 Type=1;//1001
  string UnitKey=2;
}
message StatusResponseProtobuf{
  int32 Type=1;//2001
  string UnitKey=2;
  bool Executed=3;
  string NoExecuteMessage=4;
  UnitProtobuf UnitProtobuf=5;
}
// windctl start unitKey
message StartRequestProtobuf{
  int32 Type=1;//1002
  string UnitKey=2;
}
message StartResponseProtobuf{
  int32 Type=1;//2002
  string UnitKey=2;
  bool Executed=3;
  string NoExecuteMessage=4;
}
message StartNotifyProtobuf{
  int32 Type=1;//3002
  string UnitKey=2;
}
// windctl stop unitKey
message StopRequestProtobuf{
  int32 Type=1;//1003
  string UnitKey=2;
}
message StopResponseProtobuf{
  int32 Type=1;//2003
  string UnitKey=2;
  bool Executed=3;
  string NoExecuteMessage=4;
}
message StopNotifyProtobuf{
  int32 Type=1;//3003
  string UnitKey=2;
}
// windctl restart unitKey
message RestartRequestProtobuf{
  int32 Type=1;//1004
  string UnitKey=2;
}
message RestartResponseProtobuf{
  int32 Type=1;//2004
  string UnitKey=2;
  bool Executed=3;
  string NoExecuteMessage=4;
}
// windctl load unitKey
message LoadRequestProtobuf{
  int32 Type=1;//1005
  string UnitKey=2;
}
message LoadResponseProtobuf{
  int32 Type=1;//2005
  string UnitKey=2;
  bool Executed=3;
  string NoExecuteMessage=4;
  UnitSettingsProtobuf UnitSettingsProtobuf=5;
}
message LoadNotifyProtobuf{
  int32 Type=1;//3005
  string UnitKey=2;
  UnitSettingsProtobuf UnitSettingsProtobuf=3;
}
// windctl remove unitKey
message RemoveRequestProtobuf{
  int32 Type=1;//1006
  string UnitKey=2;
}
message RemoveResponseProtobuf{
  int32 Type=1;//2006
  string UnitKey=2;
  bool Executed=3;
  string NoExecuteMessage=4;
}
message RemoveNotifyProtobuf{
  int32 Type=1;//3006
  string UnitKey=2;
}