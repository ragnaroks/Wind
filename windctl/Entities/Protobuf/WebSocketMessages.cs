// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WebSocketMessages.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace wind.Entities.Protobuf {

  /// <summary>Holder for reflection information generated from WebSocketMessages.proto</summary>
  public static partial class WebSocketMessagesReflection {

    #region Descriptor
    /// <summary>File descriptor for WebSocketMessages.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static WebSocketMessagesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChdXZWJTb2NrZXRNZXNzYWdlcy5wcm90bxIod2luZC5FbnRpdGllcy5Qcm90",
            "b2J1Zi5XZWJTb2NrZXRNZXNzYWdlcyKzAgoUVW5pdFNldHRpbmdzUHJvdG9i",
            "dWYSDAoETmFtZRgBIAEoCRITCgtEZXNjcmlwdGlvbhgCIAEoCRIMCgRUeXBl",
            "GAMgASgFEhsKE0Fic29sdXRlRXhlY3V0ZVBhdGgYBCABKAkSHQoVQWJzb2x1",
            "dGVXb3JrRGlyZWN0b3J5GAUgASgJEhEKCUFyZ3VtZW50cxgGIAEoCRIRCglB",
            "dXRvU3RhcnQYByABKAgSFgoOQXV0b1N0YXJ0RGVsYXkYCCABKAUSHAoUUmVz",
            "dGFydFdoZW5FeGNlcHRpb24YCSABKAgSHwoXTW9uaXRvclBlcmZvcm1hbmNl",
            "VXNhZ2UYCiABKAgSGwoTTW9uaXRvck5ldHdvcmtVc2FnZRgLIAEoCBIUCgxI",
            "YXNBcmd1bWVudHMYDCABKAgi9QMKDFVuaXRQcm90b2J1ZhILCgNLZXkYASAB",
            "KAkSDQoFU3RhdGUYAiABKAUSGAoQU2V0dGluZ3NGaWxlUGF0aBgDIAEoCRIR",
            "CglQcm9jZXNzSWQYBCABKAUSGAoQUHJvY2Vzc1N0YXJ0VGltZRgFIAEoAxId",
            "ChVQZXJmb3JtYW5jZUNvdW50ZXJDUFUYBiABKAISHQoVUGVyZm9ybWFuY2VD",
            "b3VudGVyUkFNGAcgASgCEh8KF05ldHdvcmtDb3VudGVyVG90YWxTZW50GAgg",
            "ASgDEiMKG05ldHdvcmtDb3VudGVyVG90YWxSZWNlaXZlZBgJIAEoAxIfChdO",
            "ZXR3b3JrQ291bnRlclNlbmRTcGVlZBgKIAEoAxIiChpOZXR3b3JrQ291bnRl",
            "clJlY2VpdmVTcGVlZBgLIAEoAxJYChBTZXR0aW5nc1Byb3RvYnVmGAwgASgL",
            "Mj4ud2luZC5FbnRpdGllcy5Qcm90b2J1Zi5XZWJTb2NrZXRNZXNzYWdlcy5V",
            "bml0U2V0dGluZ3NQcm90b2J1ZhJfChdSdW5uaW5nU2V0dGluZ3NQcm90b2J1",
            "ZhgNIAEoCzI+LndpbmQuRW50aXRpZXMuUHJvdG9idWYuV2ViU29ja2V0TWVz",
            "c2FnZXMuVW5pdFNldHRpbmdzUHJvdG9idWYi5QIKDkRhZW1vblByb3RvYnVm",
            "EgwKBE5hbWUYASABKAkSEwoLRGVzY3JpcHRpb24YAiABKAkSGwoTQWJzb2x1",
            "dGVFeGVjdXRlUGF0aBgDIAEoCRIdChVBYnNvbHV0ZVdvcmtEaXJlY3RvcnkY",
            "BCABKAkSEQoJUHJvY2Vzc0lkGAUgASgFEhgKEFByb2Nlc3NTdGFydFRpbWUY",
            "BiABKAMSHQoVUGVyZm9ybWFuY2VDb3VudGVyQ1BVGAcgASgCEh0KFVBlcmZv",
            "cm1hbmNlQ291bnRlclJBTRgIIAEoAhIfChdOZXR3b3JrQ291bnRlclRvdGFs",
            "U2VudBgJIAEoAxIjChtOZXR3b3JrQ291bnRlclRvdGFsUmVjZWl2ZWQYCiAB",
            "KAMSHwoXTmV0d29ya0NvdW50ZXJTZW5kU3BlZWQYCyABKAMSIgoaTmV0d29y",
            "a0NvdW50ZXJSZWNlaXZlU3BlZWQYDCABKAMiIgoSUGFja2V0VGVzdFByb3Rv",
            "YnVmEgwKBFR5cGUYASABKAUiJwoXQ2xpZW50S2VlcEFsaXZlUHJvdG9idWYS",
            "DAoEVHlwZRgBIAEoBSJECh5TZXJ2ZXJBY2NlcHRDb25uZWN0aW9uUHJvdG9i",
            "dWYSDAoEVHlwZRgBIAEoBRIUCgxDb25uZWN0aW9uSWQYAiABKAkihQEKHUNs",
            "aWVudE9mZmVyQ29udHJvbEtleVByb3RvYnVmEgwKBFR5cGUYASABKAUSFAoM",
            "Q29ubmVjdGlvbklkGAIgASgJEhIKCkNvbnRyb2xLZXkYAyABKAkSFQoNU3Vw",
            "cG9ydE5vdGlmeRgEIAEoCBIVCg1TdXBwb3J0QXR0YWNoGAUgASgIIlUKIFNl",
            "cnZlclZhbGlkYXRlQ29ubmVjdGlvblByb3RvYnVmEgwKBFR5cGUYASABKAUS",
            "FAoMQ29ubmVjdGlvbklkGAIgASgJEg0KBVZhbGlkGAMgASgIIjYKFVN0YXR1",
            "c1JlcXVlc3RQcm90b2J1ZhIMCgRUeXBlGAEgASgFEg8KB1VuaXRLZXkYAiAB",
            "KAkiNQoUU3RhcnRSZXF1ZXN0UHJvdG9idWYSDAoEVHlwZRgBIAEoBRIPCgdV",
            "bml0S2V5GAIgASgJIjQKE1N0b3BSZXF1ZXN0UHJvdG9idWYSDAoEVHlwZRgB",
            "IAEoBRIPCgdVbml0S2V5GAIgASgJIjcKFlJlc3RhcnRSZXF1ZXN0UHJvdG9i",
            "dWYSDAoEVHlwZRgBIAEoBRIPCgdVbml0S2V5GAIgASgJIjQKE0xvYWRSZXF1",
            "ZXN0UHJvdG9idWYSDAoEVHlwZRgBIAEoBRIPCgdVbml0S2V5GAIgASgJIjYK",
            "FVJlbW92ZVJlcXVlc3RQcm90b2J1ZhIMCgRUeXBlGAEgASgFEg8KB1VuaXRL",
            "ZXkYAiABKAkiNAoTTG9nc1JlcXVlc3RQcm90b2J1ZhIMCgRUeXBlGAEgASgF",
            "Eg8KB1VuaXRLZXkYAiABKAkiYAoVQXR0YWNoUmVxdWVzdFByb3RvYnVmEgwK",
            "BFR5cGUYASABKAUSDwoHVW5pdEtleRgCIAEoCRITCgtDb21tYW5kVHlwZRgD",
            "IAEoBRITCgtDb21tYW5kTGluZRgEIAEoCSIoChhTdGF0dXNBbGxSZXF1ZXN0",
            "UHJvdG9idWYSDAoEVHlwZRgBIAEoBSInChdTdGFydEFsbFJlcXVlc3RQcm90",
            "b2J1ZhIMCgRUeXBlGAEgASgFIiYKFlN0b3BBbGxSZXF1ZXN0UHJvdG9idWYS",
            "DAoEVHlwZRgBIAEoBSIpChlSZXN0YXJ0QWxsUmVxdWVzdFByb3RvYnVmEgwK",
            "BFR5cGUYASABKAUiJgoWTG9hZEFsbFJlcXVlc3RQcm90b2J1ZhIMCgRUeXBl",
            "GAEgASgFIigKGFJlbW92ZUFsbFJlcXVlc3RQcm90b2J1ZhIMCgRUeXBlGAEg",
            "ASgFIiwKHERhZW1vblZlcnNpb25SZXF1ZXN0UHJvdG9idWYSDAoEVHlwZRgB",
            "IAEoBSIrChtEYWVtb25TdGF0dXNSZXF1ZXN0UHJvdG9idWYSDAoEVHlwZRgB",
            "IAEoBSItCh1EYWVtb25TaHV0ZG93blJlcXVlc3RQcm90b2J1ZhIMCgRUeXBl",
            "GAEgASgFIrEBChZTdGF0dXNSZXNwb25zZVByb3RvYnVmEgwKBFR5cGUYASAB",
            "KAUSDwoHVW5pdEtleRgCIAEoCRIQCghFeGVjdXRlZBgDIAEoCBIYChBOb0V4",
            "ZWN1dGVNZXNzYWdlGAQgASgJEkwKDFVuaXRQcm90b2J1ZhgFIAEoCzI2Lndp",
            "bmQuRW50aXRpZXMuUHJvdG9idWYuV2ViU29ja2V0TWVzc2FnZXMuVW5pdFBy",
            "b3RvYnVmIscBChVTdGFydFJlc3BvbnNlUHJvdG9idWYSDAoEVHlwZRgBIAEo",
            "BRIPCgdVbml0S2V5GAIgASgJEhAKCEV4ZWN1dGVkGAMgASgIEhgKEE5vRXhl",
            "Y3V0ZU1lc3NhZ2UYBCABKAkSYwobVW5pdFJ1bm5pbmdTZXR0aW5nc1Byb3Rv",
            "YnVmGAUgASgLMj4ud2luZC5FbnRpdGllcy5Qcm90b2J1Zi5XZWJTb2NrZXRN",
            "ZXNzYWdlcy5Vbml0U2V0dGluZ3NQcm90b2J1ZiJhChRTdG9wUmVzcG9uc2VQ",
            "cm90b2J1ZhIMCgRUeXBlGAEgASgFEg8KB1VuaXRLZXkYAiABKAkSEAoIRXhl",
            "Y3V0ZWQYAyABKAgSGAoQTm9FeGVjdXRlTWVzc2FnZRgEIAEoCSJkChdSZXN0",
            "YXJ0UmVzcG9uc2VQcm90b2J1ZhIMCgRUeXBlGAEgASgFEg8KB1VuaXRLZXkY",
            "AiABKAkSEAoIRXhlY3V0ZWQYAyABKAgSGAoQTm9FeGVjdXRlTWVzc2FnZRgE",
            "IAEoCSK/AQoUTG9hZFJlc3BvbnNlUHJvdG9idWYSDAoEVHlwZRgBIAEoBRIP",
            "CgdVbml0S2V5GAIgASgJEhAKCEV4ZWN1dGVkGAMgASgIEhgKEE5vRXhlY3V0",
            "ZU1lc3NhZ2UYBCABKAkSXAoUVW5pdFNldHRpbmdzUHJvdG9idWYYBSABKAsy",
            "Pi53aW5kLkVudGl0aWVzLlByb3RvYnVmLldlYlNvY2tldE1lc3NhZ2VzLlVu",
            "aXRTZXR0aW5nc1Byb3RvYnVmImMKFlJlbW92ZVJlc3BvbnNlUHJvdG9idWYS",
            "DAoEVHlwZRgBIAEoBRIPCgdVbml0S2V5GAIgASgJEhAKCEV4ZWN1dGVkGAMg",
            "ASgIEhgKEE5vRXhlY3V0ZU1lc3NhZ2UYBCABKAkijAEKFExvZ3NSZXNwb25z",
            "ZVByb3RvYnVmEgwKBFR5cGUYASABKAUSDwoHVW5pdEtleRgCIAEoCRIQCghF",
            "eGVjdXRlZBgDIAEoCBIYChBOb0V4ZWN1dGVNZXNzYWdlGAQgASgJEhMKC0xv",
            "Z0ZpbGVQYXRoGAUgASgJEhQKDExvZ0xpbmVBcnJheRgGIAMoCSJ8ChZBdHRh",
            "Y2hSZXNwb25zZVByb3RvYnVmEgwKBFR5cGUYASABKAUSDwoHVW5pdEtleRgC",
            "IAEoCRIQCghFeGVjdXRlZBgDIAEoCBIYChBOb0V4ZWN1dGVNZXNzYWdlGAQg",
            "ASgJEhcKD091dHB1dExpbmVBcnJheRgFIAMoCSLHAQoZU3RhdHVzQWxsUmVz",
            "cG9uc2VQcm90b2J1ZhIMCgRUeXBlGAEgASgFEhAKCEV4ZWN1dGVkGAIgASgI",
            "EhgKEE5vRXhlY3V0ZU1lc3NhZ2UYAyABKAkSHQoVVW5pdFByb3RvYnVmQXJy",
            "YXlTaXplGAQgASgFElEKEVVuaXRQcm90b2J1ZkFycmF5GAUgAygLMjYud2lu",
            "ZC5FbnRpdGllcy5Qcm90b2J1Zi5XZWJTb2NrZXRNZXNzYWdlcy5Vbml0UHJv",
            "dG9idWYiVAoYU3RhcnRBbGxSZXNwb25zZVByb3RvYnVmEgwKBFR5cGUYASAB",
            "KAUSEAoIRXhlY3V0ZWQYAiABKAgSGAoQTm9FeGVjdXRlTWVzc2FnZRgDIAEo",
            "CSJTChdTdG9wQWxsUmVzcG9uc2VQcm90b2J1ZhIMCgRUeXBlGAEgASgFEhAK",
            "CEV4ZWN1dGVkGAIgASgIEhgKEE5vRXhlY3V0ZU1lc3NhZ2UYAyABKAkiVgoa",
            "UmVzdGFydEFsbFJlc3BvbnNlUHJvdG9idWYSDAoEVHlwZRgBIAEoBRIQCghF",
            "eGVjdXRlZBgCIAEoCBIYChBOb0V4ZWN1dGVNZXNzYWdlGAMgASgJIt0BChdM",
            "b2FkQWxsUmVzcG9uc2VQcm90b2J1ZhIMCgRUeXBlGAEgASgFEhAKCEV4ZWN1",
            "dGVkGAIgASgIEhgKEE5vRXhlY3V0ZU1lc3NhZ2UYAyABKAkSJQodVW5pdFNl",
            "dHRpbmdzUHJvdG9idWZBcnJheVNpemUYBCABKAUSYQoZVW5pdFNldHRpbmdz",
            "UHJvdG9idWZBcnJheRgFIAMoCzI+LndpbmQuRW50aXRpZXMuUHJvdG9idWYu",
            "V2ViU29ja2V0TWVzc2FnZXMuVW5pdFNldHRpbmdzUHJvdG9idWYiVQoZUmVt",
            "b3ZlQWxsUmVzcG9uc2VQcm90b2J1ZhIMCgRUeXBlGAEgASgFEhAKCEV4ZWN1",
            "dGVkGAIgASgIEhgKEE5vRXhlY3V0ZU1lc3NhZ2UYAyABKAkibAodRGFlbW9u",
            "VmVyc2lvblJlc3BvbnNlUHJvdG9idWYSDAoEVHlwZRgBIAEoBRINCgVNYWpv",
            "chgCIAEoBRINCgVNaW5vchgDIAEoBRINCgVCdWlsZBgEIAEoBRIQCghSZXZp",
            "c2lvbhgFIAEoBSJ+ChxEYWVtb25TdGF0dXNSZXNwb25zZVByb3RvYnVmEgwK",
            "BFR5cGUYASABKAUSUAoORGFlbW9uUHJvdG9idWYYAiABKAsyOC53aW5kLkVu",
            "dGl0aWVzLlByb3RvYnVmLldlYlNvY2tldE1lc3NhZ2VzLkRhZW1vblByb3Rv",
            "YnVmIloKHkRhZW1vblNodXRkb3duUmVzcG9uc2VQcm90b2J1ZhIMCgRUeXBl",
            "GAEgASgFEhAKCEV4ZWN1dGVkGAIgASgIEhgKEE5vRXhlY3V0ZU1lc3NhZ2UY",
            "AyABKAkiNAoTU3RhcnROb3RpZnlQcm90b2J1ZhIMCgRUeXBlGAEgASgFEg8K",
            "B1VuaXRLZXkYAiABKAkiMwoSU3RvcE5vdGlmeVByb3RvYnVmEgwKBFR5cGUY",
            "ASABKAUSDwoHVW5pdEtleRgCIAEoCSKRAQoSTG9hZE5vdGlmeVByb3RvYnVm",
            "EgwKBFR5cGUYASABKAUSDwoHVW5pdEtleRgCIAEoCRJcChRVbml0U2V0dGlu",
            "Z3NQcm90b2J1ZhgDIAEoCzI+LndpbmQuRW50aXRpZXMuUHJvdG9idWYuV2Vi",
            "U29ja2V0TWVzc2FnZXMuVW5pdFNldHRpbmdzUHJvdG9idWYiNQoUUmVtb3Zl",
            "Tm90aWZ5UHJvdG9idWYSDAoEVHlwZRgBIAEoBRIPCgdVbml0S2V5GAIgASgJ",
            "IkQKEkxvZ3NOb3RpZnlQcm90b2J1ZhIMCgRUeXBlGAEgASgFEg8KB1VuaXRL",
            "ZXkYAiABKAkSDwoHTG9nTGluZRgDIAEoCUIbSAOqAhZ3aW5kLkVudGl0aWVz",
            "LlByb3RvYnVmYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.UnitSettingsProtobuf), global::wind.Entities.Protobuf.UnitSettingsProtobuf.Parser, new[]{ "Name", "Description", "Type", "AbsoluteExecutePath", "AbsoluteWorkDirectory", "Arguments", "AutoStart", "AutoStartDelay", "RestartWhenException", "MonitorPerformanceUsage", "MonitorNetworkUsage", "HasArguments" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.UnitProtobuf), global::wind.Entities.Protobuf.UnitProtobuf.Parser, new[]{ "Key", "State", "SettingsFilePath", "ProcessId", "ProcessStartTime", "PerformanceCounterCPU", "PerformanceCounterRAM", "NetworkCounterTotalSent", "NetworkCounterTotalReceived", "NetworkCounterSendSpeed", "NetworkCounterReceiveSpeed", "SettingsProtobuf", "RunningSettingsProtobuf" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.DaemonProtobuf), global::wind.Entities.Protobuf.DaemonProtobuf.Parser, new[]{ "Name", "Description", "AbsoluteExecutePath", "AbsoluteWorkDirectory", "ProcessId", "ProcessStartTime", "PerformanceCounterCPU", "PerformanceCounterRAM", "NetworkCounterTotalSent", "NetworkCounterTotalReceived", "NetworkCounterSendSpeed", "NetworkCounterReceiveSpeed" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.PacketTestProtobuf), global::wind.Entities.Protobuf.PacketTestProtobuf.Parser, new[]{ "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.ClientKeepAliveProtobuf), global::wind.Entities.Protobuf.ClientKeepAliveProtobuf.Parser, new[]{ "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.ServerAcceptConnectionProtobuf), global::wind.Entities.Protobuf.ServerAcceptConnectionProtobuf.Parser, new[]{ "Type", "ConnectionId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.ClientOfferControlKeyProtobuf), global::wind.Entities.Protobuf.ClientOfferControlKeyProtobuf.Parser, new[]{ "Type", "ConnectionId", "ControlKey", "SupportNotify", "SupportAttach" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.ServerValidateConnectionProtobuf), global::wind.Entities.Protobuf.ServerValidateConnectionProtobuf.Parser, new[]{ "Type", "ConnectionId", "Valid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.StatusRequestProtobuf), global::wind.Entities.Protobuf.StatusRequestProtobuf.Parser, new[]{ "Type", "UnitKey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.StartRequestProtobuf), global::wind.Entities.Protobuf.StartRequestProtobuf.Parser, new[]{ "Type", "UnitKey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.StopRequestProtobuf), global::wind.Entities.Protobuf.StopRequestProtobuf.Parser, new[]{ "Type", "UnitKey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.RestartRequestProtobuf), global::wind.Entities.Protobuf.RestartRequestProtobuf.Parser, new[]{ "Type", "UnitKey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.LoadRequestProtobuf), global::wind.Entities.Protobuf.LoadRequestProtobuf.Parser, new[]{ "Type", "UnitKey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.RemoveRequestProtobuf), global::wind.Entities.Protobuf.RemoveRequestProtobuf.Parser, new[]{ "Type", "UnitKey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.LogsRequestProtobuf), global::wind.Entities.Protobuf.LogsRequestProtobuf.Parser, new[]{ "Type", "UnitKey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.AttachRequestProtobuf), global::wind.Entities.Protobuf.AttachRequestProtobuf.Parser, new[]{ "Type", "UnitKey", "CommandType", "CommandLine" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.StatusAllRequestProtobuf), global::wind.Entities.Protobuf.StatusAllRequestProtobuf.Parser, new[]{ "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.StartAllRequestProtobuf), global::wind.Entities.Protobuf.StartAllRequestProtobuf.Parser, new[]{ "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.StopAllRequestProtobuf), global::wind.Entities.Protobuf.StopAllRequestProtobuf.Parser, new[]{ "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.RestartAllRequestProtobuf), global::wind.Entities.Protobuf.RestartAllRequestProtobuf.Parser, new[]{ "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.LoadAllRequestProtobuf), global::wind.Entities.Protobuf.LoadAllRequestProtobuf.Parser, new[]{ "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.RemoveAllRequestProtobuf), global::wind.Entities.Protobuf.RemoveAllRequestProtobuf.Parser, new[]{ "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.DaemonVersionRequestProtobuf), global::wind.Entities.Protobuf.DaemonVersionRequestProtobuf.Parser, new[]{ "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.DaemonStatusRequestProtobuf), global::wind.Entities.Protobuf.DaemonStatusRequestProtobuf.Parser, new[]{ "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.DaemonShutdownRequestProtobuf), global::wind.Entities.Protobuf.DaemonShutdownRequestProtobuf.Parser, new[]{ "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.StatusResponseProtobuf), global::wind.Entities.Protobuf.StatusResponseProtobuf.Parser, new[]{ "Type", "UnitKey", "Executed", "NoExecuteMessage", "UnitProtobuf" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.StartResponseProtobuf), global::wind.Entities.Protobuf.StartResponseProtobuf.Parser, new[]{ "Type", "UnitKey", "Executed", "NoExecuteMessage", "UnitRunningSettingsProtobuf" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.StopResponseProtobuf), global::wind.Entities.Protobuf.StopResponseProtobuf.Parser, new[]{ "Type", "UnitKey", "Executed", "NoExecuteMessage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.RestartResponseProtobuf), global::wind.Entities.Protobuf.RestartResponseProtobuf.Parser, new[]{ "Type", "UnitKey", "Executed", "NoExecuteMessage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.LoadResponseProtobuf), global::wind.Entities.Protobuf.LoadResponseProtobuf.Parser, new[]{ "Type", "UnitKey", "Executed", "NoExecuteMessage", "UnitSettingsProtobuf" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.RemoveResponseProtobuf), global::wind.Entities.Protobuf.RemoveResponseProtobuf.Parser, new[]{ "Type", "UnitKey", "Executed", "NoExecuteMessage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.LogsResponseProtobuf), global::wind.Entities.Protobuf.LogsResponseProtobuf.Parser, new[]{ "Type", "UnitKey", "Executed", "NoExecuteMessage", "LogFilePath", "LogLineArray" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.AttachResponseProtobuf), global::wind.Entities.Protobuf.AttachResponseProtobuf.Parser, new[]{ "Type", "UnitKey", "Executed", "NoExecuteMessage", "OutputLineArray" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.StatusAllResponseProtobuf), global::wind.Entities.Protobuf.StatusAllResponseProtobuf.Parser, new[]{ "Type", "Executed", "NoExecuteMessage", "UnitProtobufArraySize", "UnitProtobufArray" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.StartAllResponseProtobuf), global::wind.Entities.Protobuf.StartAllResponseProtobuf.Parser, new[]{ "Type", "Executed", "NoExecuteMessage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.StopAllResponseProtobuf), global::wind.Entities.Protobuf.StopAllResponseProtobuf.Parser, new[]{ "Type", "Executed", "NoExecuteMessage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.RestartAllResponseProtobuf), global::wind.Entities.Protobuf.RestartAllResponseProtobuf.Parser, new[]{ "Type", "Executed", "NoExecuteMessage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.LoadAllResponseProtobuf), global::wind.Entities.Protobuf.LoadAllResponseProtobuf.Parser, new[]{ "Type", "Executed", "NoExecuteMessage", "UnitSettingsProtobufArraySize", "UnitSettingsProtobufArray" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.RemoveAllResponseProtobuf), global::wind.Entities.Protobuf.RemoveAllResponseProtobuf.Parser, new[]{ "Type", "Executed", "NoExecuteMessage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.DaemonVersionResponseProtobuf), global::wind.Entities.Protobuf.DaemonVersionResponseProtobuf.Parser, new[]{ "Type", "Major", "Minor", "Build", "Revision" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.DaemonStatusResponseProtobuf), global::wind.Entities.Protobuf.DaemonStatusResponseProtobuf.Parser, new[]{ "Type", "DaemonProtobuf" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.DaemonShutdownResponseProtobuf), global::wind.Entities.Protobuf.DaemonShutdownResponseProtobuf.Parser, new[]{ "Type", "Executed", "NoExecuteMessage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.StartNotifyProtobuf), global::wind.Entities.Protobuf.StartNotifyProtobuf.Parser, new[]{ "Type", "UnitKey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.StopNotifyProtobuf), global::wind.Entities.Protobuf.StopNotifyProtobuf.Parser, new[]{ "Type", "UnitKey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.LoadNotifyProtobuf), global::wind.Entities.Protobuf.LoadNotifyProtobuf.Parser, new[]{ "Type", "UnitKey", "UnitSettingsProtobuf" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.RemoveNotifyProtobuf), global::wind.Entities.Protobuf.RemoveNotifyProtobuf.Parser, new[]{ "Type", "UnitKey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::wind.Entities.Protobuf.LogsNotifyProtobuf), global::wind.Entities.Protobuf.LogsNotifyProtobuf.Parser, new[]{ "Type", "UnitKey", "LogLine" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class UnitSettingsProtobuf : pb::IMessage<UnitSettingsProtobuf> {
    private static readonly pb::MessageParser<UnitSettingsProtobuf> _parser = new pb::MessageParser<UnitSettingsProtobuf>(() => new UnitSettingsProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnitSettingsProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.WebSocketMessagesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnitSettingsProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnitSettingsProtobuf(UnitSettingsProtobuf other) : this() {
      name_ = other.name_;
      description_ = other.description_;
      type_ = other.type_;
      absoluteExecutePath_ = other.absoluteExecutePath_;
      absoluteWorkDirectory_ = other.absoluteWorkDirectory_;
      arguments_ = other.arguments_;
      autoStart_ = other.autoStart_;
      autoStartDelay_ = other.autoStartDelay_;
      restartWhenException_ = other.restartWhenException_;
      monitorPerformanceUsage_ = other.monitorPerformanceUsage_;
      monitorNetworkUsage_ = other.monitorNetworkUsage_;
      hasArguments_ = other.hasArguments_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnitSettingsProtobuf Clone() {
      return new UnitSettingsProtobuf(this);
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 3;
    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "AbsoluteExecutePath" field.</summary>
    public const int AbsoluteExecutePathFieldNumber = 4;
    private string absoluteExecutePath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AbsoluteExecutePath {
      get { return absoluteExecutePath_; }
      set {
        absoluteExecutePath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AbsoluteWorkDirectory" field.</summary>
    public const int AbsoluteWorkDirectoryFieldNumber = 5;
    private string absoluteWorkDirectory_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AbsoluteWorkDirectory {
      get { return absoluteWorkDirectory_; }
      set {
        absoluteWorkDirectory_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Arguments" field.</summary>
    public const int ArgumentsFieldNumber = 6;
    private string arguments_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Arguments {
      get { return arguments_; }
      set {
        arguments_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AutoStart" field.</summary>
    public const int AutoStartFieldNumber = 7;
    private bool autoStart_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AutoStart {
      get { return autoStart_; }
      set {
        autoStart_ = value;
      }
    }

    /// <summary>Field number for the "AutoStartDelay" field.</summary>
    public const int AutoStartDelayFieldNumber = 8;
    private int autoStartDelay_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AutoStartDelay {
      get { return autoStartDelay_; }
      set {
        autoStartDelay_ = value;
      }
    }

    /// <summary>Field number for the "RestartWhenException" field.</summary>
    public const int RestartWhenExceptionFieldNumber = 9;
    private bool restartWhenException_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool RestartWhenException {
      get { return restartWhenException_; }
      set {
        restartWhenException_ = value;
      }
    }

    /// <summary>Field number for the "MonitorPerformanceUsage" field.</summary>
    public const int MonitorPerformanceUsageFieldNumber = 10;
    private bool monitorPerformanceUsage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool MonitorPerformanceUsage {
      get { return monitorPerformanceUsage_; }
      set {
        monitorPerformanceUsage_ = value;
      }
    }

    /// <summary>Field number for the "MonitorNetworkUsage" field.</summary>
    public const int MonitorNetworkUsageFieldNumber = 11;
    private bool monitorNetworkUsage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool MonitorNetworkUsage {
      get { return monitorNetworkUsage_; }
      set {
        monitorNetworkUsage_ = value;
      }
    }

    /// <summary>Field number for the "HasArguments" field.</summary>
    public const int HasArgumentsFieldNumber = 12;
    private bool hasArguments_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasArguments {
      get { return hasArguments_; }
      set {
        hasArguments_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnitSettingsProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnitSettingsProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      if (Type != other.Type) return false;
      if (AbsoluteExecutePath != other.AbsoluteExecutePath) return false;
      if (AbsoluteWorkDirectory != other.AbsoluteWorkDirectory) return false;
      if (Arguments != other.Arguments) return false;
      if (AutoStart != other.AutoStart) return false;
      if (AutoStartDelay != other.AutoStartDelay) return false;
      if (RestartWhenException != other.RestartWhenException) return false;
      if (MonitorPerformanceUsage != other.MonitorPerformanceUsage) return false;
      if (MonitorNetworkUsage != other.MonitorNetworkUsage) return false;
      if (HasArguments != other.HasArguments) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (AbsoluteExecutePath.Length != 0) hash ^= AbsoluteExecutePath.GetHashCode();
      if (AbsoluteWorkDirectory.Length != 0) hash ^= AbsoluteWorkDirectory.GetHashCode();
      if (Arguments.Length != 0) hash ^= Arguments.GetHashCode();
      if (AutoStart != false) hash ^= AutoStart.GetHashCode();
      if (AutoStartDelay != 0) hash ^= AutoStartDelay.GetHashCode();
      if (RestartWhenException != false) hash ^= RestartWhenException.GetHashCode();
      if (MonitorPerformanceUsage != false) hash ^= MonitorPerformanceUsage.GetHashCode();
      if (MonitorNetworkUsage != false) hash ^= MonitorNetworkUsage.GetHashCode();
      if (HasArguments != false) hash ^= HasArguments.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (Type != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Type);
      }
      if (AbsoluteExecutePath.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(AbsoluteExecutePath);
      }
      if (AbsoluteWorkDirectory.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(AbsoluteWorkDirectory);
      }
      if (Arguments.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Arguments);
      }
      if (AutoStart != false) {
        output.WriteRawTag(56);
        output.WriteBool(AutoStart);
      }
      if (AutoStartDelay != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(AutoStartDelay);
      }
      if (RestartWhenException != false) {
        output.WriteRawTag(72);
        output.WriteBool(RestartWhenException);
      }
      if (MonitorPerformanceUsage != false) {
        output.WriteRawTag(80);
        output.WriteBool(MonitorPerformanceUsage);
      }
      if (MonitorNetworkUsage != false) {
        output.WriteRawTag(88);
        output.WriteBool(MonitorNetworkUsage);
      }
      if (HasArguments != false) {
        output.WriteRawTag(96);
        output.WriteBool(HasArguments);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (AbsoluteExecutePath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AbsoluteExecutePath);
      }
      if (AbsoluteWorkDirectory.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AbsoluteWorkDirectory);
      }
      if (Arguments.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Arguments);
      }
      if (AutoStart != false) {
        size += 1 + 1;
      }
      if (AutoStartDelay != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AutoStartDelay);
      }
      if (RestartWhenException != false) {
        size += 1 + 1;
      }
      if (MonitorPerformanceUsage != false) {
        size += 1 + 1;
      }
      if (MonitorNetworkUsage != false) {
        size += 1 + 1;
      }
      if (HasArguments != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnitSettingsProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.AbsoluteExecutePath.Length != 0) {
        AbsoluteExecutePath = other.AbsoluteExecutePath;
      }
      if (other.AbsoluteWorkDirectory.Length != 0) {
        AbsoluteWorkDirectory = other.AbsoluteWorkDirectory;
      }
      if (other.Arguments.Length != 0) {
        Arguments = other.Arguments;
      }
      if (other.AutoStart != false) {
        AutoStart = other.AutoStart;
      }
      if (other.AutoStartDelay != 0) {
        AutoStartDelay = other.AutoStartDelay;
      }
      if (other.RestartWhenException != false) {
        RestartWhenException = other.RestartWhenException;
      }
      if (other.MonitorPerformanceUsage != false) {
        MonitorPerformanceUsage = other.MonitorPerformanceUsage;
      }
      if (other.MonitorNetworkUsage != false) {
        MonitorNetworkUsage = other.MonitorNetworkUsage;
      }
      if (other.HasArguments != false) {
        HasArguments = other.HasArguments;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 24: {
            Type = input.ReadInt32();
            break;
          }
          case 34: {
            AbsoluteExecutePath = input.ReadString();
            break;
          }
          case 42: {
            AbsoluteWorkDirectory = input.ReadString();
            break;
          }
          case 50: {
            Arguments = input.ReadString();
            break;
          }
          case 56: {
            AutoStart = input.ReadBool();
            break;
          }
          case 64: {
            AutoStartDelay = input.ReadInt32();
            break;
          }
          case 72: {
            RestartWhenException = input.ReadBool();
            break;
          }
          case 80: {
            MonitorPerformanceUsage = input.ReadBool();
            break;
          }
          case 88: {
            MonitorNetworkUsage = input.ReadBool();
            break;
          }
          case 96: {
            HasArguments = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UnitProtobuf : pb::IMessage<UnitProtobuf> {
    private static readonly pb::MessageParser<UnitProtobuf> _parser = new pb::MessageParser<UnitProtobuf>(() => new UnitProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnitProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.WebSocketMessagesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnitProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnitProtobuf(UnitProtobuf other) : this() {
      key_ = other.key_;
      state_ = other.state_;
      settingsFilePath_ = other.settingsFilePath_;
      processId_ = other.processId_;
      processStartTime_ = other.processStartTime_;
      performanceCounterCPU_ = other.performanceCounterCPU_;
      performanceCounterRAM_ = other.performanceCounterRAM_;
      networkCounterTotalSent_ = other.networkCounterTotalSent_;
      networkCounterTotalReceived_ = other.networkCounterTotalReceived_;
      networkCounterSendSpeed_ = other.networkCounterSendSpeed_;
      networkCounterReceiveSpeed_ = other.networkCounterReceiveSpeed_;
      settingsProtobuf_ = other.settingsProtobuf_ != null ? other.settingsProtobuf_.Clone() : null;
      runningSettingsProtobuf_ = other.runningSettingsProtobuf_ != null ? other.runningSettingsProtobuf_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnitProtobuf Clone() {
      return new UnitProtobuf(this);
    }

    /// <summary>Field number for the "Key" field.</summary>
    public const int KeyFieldNumber = 1;
    private string key_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "State" field.</summary>
    public const int StateFieldNumber = 2;
    private int state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "SettingsFilePath" field.</summary>
    public const int SettingsFilePathFieldNumber = 3;
    private string settingsFilePath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SettingsFilePath {
      get { return settingsFilePath_; }
      set {
        settingsFilePath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ProcessId" field.</summary>
    public const int ProcessIdFieldNumber = 4;
    private int processId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ProcessId {
      get { return processId_; }
      set {
        processId_ = value;
      }
    }

    /// <summary>Field number for the "ProcessStartTime" field.</summary>
    public const int ProcessStartTimeFieldNumber = 5;
    private long processStartTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ProcessStartTime {
      get { return processStartTime_; }
      set {
        processStartTime_ = value;
      }
    }

    /// <summary>Field number for the "PerformanceCounterCPU" field.</summary>
    public const int PerformanceCounterCPUFieldNumber = 6;
    private float performanceCounterCPU_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float PerformanceCounterCPU {
      get { return performanceCounterCPU_; }
      set {
        performanceCounterCPU_ = value;
      }
    }

    /// <summary>Field number for the "PerformanceCounterRAM" field.</summary>
    public const int PerformanceCounterRAMFieldNumber = 7;
    private float performanceCounterRAM_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float PerformanceCounterRAM {
      get { return performanceCounterRAM_; }
      set {
        performanceCounterRAM_ = value;
      }
    }

    /// <summary>Field number for the "NetworkCounterTotalSent" field.</summary>
    public const int NetworkCounterTotalSentFieldNumber = 8;
    private long networkCounterTotalSent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NetworkCounterTotalSent {
      get { return networkCounterTotalSent_; }
      set {
        networkCounterTotalSent_ = value;
      }
    }

    /// <summary>Field number for the "NetworkCounterTotalReceived" field.</summary>
    public const int NetworkCounterTotalReceivedFieldNumber = 9;
    private long networkCounterTotalReceived_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NetworkCounterTotalReceived {
      get { return networkCounterTotalReceived_; }
      set {
        networkCounterTotalReceived_ = value;
      }
    }

    /// <summary>Field number for the "NetworkCounterSendSpeed" field.</summary>
    public const int NetworkCounterSendSpeedFieldNumber = 10;
    private long networkCounterSendSpeed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NetworkCounterSendSpeed {
      get { return networkCounterSendSpeed_; }
      set {
        networkCounterSendSpeed_ = value;
      }
    }

    /// <summary>Field number for the "NetworkCounterReceiveSpeed" field.</summary>
    public const int NetworkCounterReceiveSpeedFieldNumber = 11;
    private long networkCounterReceiveSpeed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NetworkCounterReceiveSpeed {
      get { return networkCounterReceiveSpeed_; }
      set {
        networkCounterReceiveSpeed_ = value;
      }
    }

    /// <summary>Field number for the "SettingsProtobuf" field.</summary>
    public const int SettingsProtobufFieldNumber = 12;
    private global::wind.Entities.Protobuf.UnitSettingsProtobuf settingsProtobuf_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::wind.Entities.Protobuf.UnitSettingsProtobuf SettingsProtobuf {
      get { return settingsProtobuf_; }
      set {
        settingsProtobuf_ = value;
      }
    }

    /// <summary>Field number for the "RunningSettingsProtobuf" field.</summary>
    public const int RunningSettingsProtobufFieldNumber = 13;
    private global::wind.Entities.Protobuf.UnitSettingsProtobuf runningSettingsProtobuf_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::wind.Entities.Protobuf.UnitSettingsProtobuf RunningSettingsProtobuf {
      get { return runningSettingsProtobuf_; }
      set {
        runningSettingsProtobuf_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnitProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnitProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (State != other.State) return false;
      if (SettingsFilePath != other.SettingsFilePath) return false;
      if (ProcessId != other.ProcessId) return false;
      if (ProcessStartTime != other.ProcessStartTime) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PerformanceCounterCPU, other.PerformanceCounterCPU)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PerformanceCounterRAM, other.PerformanceCounterRAM)) return false;
      if (NetworkCounterTotalSent != other.NetworkCounterTotalSent) return false;
      if (NetworkCounterTotalReceived != other.NetworkCounterTotalReceived) return false;
      if (NetworkCounterSendSpeed != other.NetworkCounterSendSpeed) return false;
      if (NetworkCounterReceiveSpeed != other.NetworkCounterReceiveSpeed) return false;
      if (!object.Equals(SettingsProtobuf, other.SettingsProtobuf)) return false;
      if (!object.Equals(RunningSettingsProtobuf, other.RunningSettingsProtobuf)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (State != 0) hash ^= State.GetHashCode();
      if (SettingsFilePath.Length != 0) hash ^= SettingsFilePath.GetHashCode();
      if (ProcessId != 0) hash ^= ProcessId.GetHashCode();
      if (ProcessStartTime != 0L) hash ^= ProcessStartTime.GetHashCode();
      if (PerformanceCounterCPU != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PerformanceCounterCPU);
      if (PerformanceCounterRAM != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PerformanceCounterRAM);
      if (NetworkCounterTotalSent != 0L) hash ^= NetworkCounterTotalSent.GetHashCode();
      if (NetworkCounterTotalReceived != 0L) hash ^= NetworkCounterTotalReceived.GetHashCode();
      if (NetworkCounterSendSpeed != 0L) hash ^= NetworkCounterSendSpeed.GetHashCode();
      if (NetworkCounterReceiveSpeed != 0L) hash ^= NetworkCounterReceiveSpeed.GetHashCode();
      if (settingsProtobuf_ != null) hash ^= SettingsProtobuf.GetHashCode();
      if (runningSettingsProtobuf_ != null) hash ^= RunningSettingsProtobuf.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (State != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(State);
      }
      if (SettingsFilePath.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SettingsFilePath);
      }
      if (ProcessId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ProcessId);
      }
      if (ProcessStartTime != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(ProcessStartTime);
      }
      if (PerformanceCounterCPU != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(PerformanceCounterCPU);
      }
      if (PerformanceCounterRAM != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(PerformanceCounterRAM);
      }
      if (NetworkCounterTotalSent != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(NetworkCounterTotalSent);
      }
      if (NetworkCounterTotalReceived != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(NetworkCounterTotalReceived);
      }
      if (NetworkCounterSendSpeed != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(NetworkCounterSendSpeed);
      }
      if (NetworkCounterReceiveSpeed != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(NetworkCounterReceiveSpeed);
      }
      if (settingsProtobuf_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(SettingsProtobuf);
      }
      if (runningSettingsProtobuf_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(RunningSettingsProtobuf);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(State);
      }
      if (SettingsFilePath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SettingsFilePath);
      }
      if (ProcessId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ProcessId);
      }
      if (ProcessStartTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ProcessStartTime);
      }
      if (PerformanceCounterCPU != 0F) {
        size += 1 + 4;
      }
      if (PerformanceCounterRAM != 0F) {
        size += 1 + 4;
      }
      if (NetworkCounterTotalSent != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NetworkCounterTotalSent);
      }
      if (NetworkCounterTotalReceived != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NetworkCounterTotalReceived);
      }
      if (NetworkCounterSendSpeed != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NetworkCounterSendSpeed);
      }
      if (NetworkCounterReceiveSpeed != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NetworkCounterReceiveSpeed);
      }
      if (settingsProtobuf_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SettingsProtobuf);
      }
      if (runningSettingsProtobuf_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RunningSettingsProtobuf);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnitProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.State != 0) {
        State = other.State;
      }
      if (other.SettingsFilePath.Length != 0) {
        SettingsFilePath = other.SettingsFilePath;
      }
      if (other.ProcessId != 0) {
        ProcessId = other.ProcessId;
      }
      if (other.ProcessStartTime != 0L) {
        ProcessStartTime = other.ProcessStartTime;
      }
      if (other.PerformanceCounterCPU != 0F) {
        PerformanceCounterCPU = other.PerformanceCounterCPU;
      }
      if (other.PerformanceCounterRAM != 0F) {
        PerformanceCounterRAM = other.PerformanceCounterRAM;
      }
      if (other.NetworkCounterTotalSent != 0L) {
        NetworkCounterTotalSent = other.NetworkCounterTotalSent;
      }
      if (other.NetworkCounterTotalReceived != 0L) {
        NetworkCounterTotalReceived = other.NetworkCounterTotalReceived;
      }
      if (other.NetworkCounterSendSpeed != 0L) {
        NetworkCounterSendSpeed = other.NetworkCounterSendSpeed;
      }
      if (other.NetworkCounterReceiveSpeed != 0L) {
        NetworkCounterReceiveSpeed = other.NetworkCounterReceiveSpeed;
      }
      if (other.settingsProtobuf_ != null) {
        if (settingsProtobuf_ == null) {
          SettingsProtobuf = new global::wind.Entities.Protobuf.UnitSettingsProtobuf();
        }
        SettingsProtobuf.MergeFrom(other.SettingsProtobuf);
      }
      if (other.runningSettingsProtobuf_ != null) {
        if (runningSettingsProtobuf_ == null) {
          RunningSettingsProtobuf = new global::wind.Entities.Protobuf.UnitSettingsProtobuf();
        }
        RunningSettingsProtobuf.MergeFrom(other.RunningSettingsProtobuf);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 16: {
            State = input.ReadInt32();
            break;
          }
          case 26: {
            SettingsFilePath = input.ReadString();
            break;
          }
          case 32: {
            ProcessId = input.ReadInt32();
            break;
          }
          case 40: {
            ProcessStartTime = input.ReadInt64();
            break;
          }
          case 53: {
            PerformanceCounterCPU = input.ReadFloat();
            break;
          }
          case 61: {
            PerformanceCounterRAM = input.ReadFloat();
            break;
          }
          case 64: {
            NetworkCounterTotalSent = input.ReadInt64();
            break;
          }
          case 72: {
            NetworkCounterTotalReceived = input.ReadInt64();
            break;
          }
          case 80: {
            NetworkCounterSendSpeed = input.ReadInt64();
            break;
          }
          case 88: {
            NetworkCounterReceiveSpeed = input.ReadInt64();
            break;
          }
          case 98: {
            if (settingsProtobuf_ == null) {
              SettingsProtobuf = new global::wind.Entities.Protobuf.UnitSettingsProtobuf();
            }
            input.ReadMessage(SettingsProtobuf);
            break;
          }
          case 106: {
            if (runningSettingsProtobuf_ == null) {
              RunningSettingsProtobuf = new global::wind.Entities.Protobuf.UnitSettingsProtobuf();
            }
            input.ReadMessage(RunningSettingsProtobuf);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DaemonProtobuf : pb::IMessage<DaemonProtobuf> {
    private static readonly pb::MessageParser<DaemonProtobuf> _parser = new pb::MessageParser<DaemonProtobuf>(() => new DaemonProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DaemonProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.WebSocketMessagesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DaemonProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DaemonProtobuf(DaemonProtobuf other) : this() {
      name_ = other.name_;
      description_ = other.description_;
      absoluteExecutePath_ = other.absoluteExecutePath_;
      absoluteWorkDirectory_ = other.absoluteWorkDirectory_;
      processId_ = other.processId_;
      processStartTime_ = other.processStartTime_;
      performanceCounterCPU_ = other.performanceCounterCPU_;
      performanceCounterRAM_ = other.performanceCounterRAM_;
      networkCounterTotalSent_ = other.networkCounterTotalSent_;
      networkCounterTotalReceived_ = other.networkCounterTotalReceived_;
      networkCounterSendSpeed_ = other.networkCounterSendSpeed_;
      networkCounterReceiveSpeed_ = other.networkCounterReceiveSpeed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DaemonProtobuf Clone() {
      return new DaemonProtobuf(this);
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AbsoluteExecutePath" field.</summary>
    public const int AbsoluteExecutePathFieldNumber = 3;
    private string absoluteExecutePath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AbsoluteExecutePath {
      get { return absoluteExecutePath_; }
      set {
        absoluteExecutePath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AbsoluteWorkDirectory" field.</summary>
    public const int AbsoluteWorkDirectoryFieldNumber = 4;
    private string absoluteWorkDirectory_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AbsoluteWorkDirectory {
      get { return absoluteWorkDirectory_; }
      set {
        absoluteWorkDirectory_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ProcessId" field.</summary>
    public const int ProcessIdFieldNumber = 5;
    private int processId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ProcessId {
      get { return processId_; }
      set {
        processId_ = value;
      }
    }

    /// <summary>Field number for the "ProcessStartTime" field.</summary>
    public const int ProcessStartTimeFieldNumber = 6;
    private long processStartTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ProcessStartTime {
      get { return processStartTime_; }
      set {
        processStartTime_ = value;
      }
    }

    /// <summary>Field number for the "PerformanceCounterCPU" field.</summary>
    public const int PerformanceCounterCPUFieldNumber = 7;
    private float performanceCounterCPU_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float PerformanceCounterCPU {
      get { return performanceCounterCPU_; }
      set {
        performanceCounterCPU_ = value;
      }
    }

    /// <summary>Field number for the "PerformanceCounterRAM" field.</summary>
    public const int PerformanceCounterRAMFieldNumber = 8;
    private float performanceCounterRAM_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float PerformanceCounterRAM {
      get { return performanceCounterRAM_; }
      set {
        performanceCounterRAM_ = value;
      }
    }

    /// <summary>Field number for the "NetworkCounterTotalSent" field.</summary>
    public const int NetworkCounterTotalSentFieldNumber = 9;
    private long networkCounterTotalSent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NetworkCounterTotalSent {
      get { return networkCounterTotalSent_; }
      set {
        networkCounterTotalSent_ = value;
      }
    }

    /// <summary>Field number for the "NetworkCounterTotalReceived" field.</summary>
    public const int NetworkCounterTotalReceivedFieldNumber = 10;
    private long networkCounterTotalReceived_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NetworkCounterTotalReceived {
      get { return networkCounterTotalReceived_; }
      set {
        networkCounterTotalReceived_ = value;
      }
    }

    /// <summary>Field number for the "NetworkCounterSendSpeed" field.</summary>
    public const int NetworkCounterSendSpeedFieldNumber = 11;
    private long networkCounterSendSpeed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NetworkCounterSendSpeed {
      get { return networkCounterSendSpeed_; }
      set {
        networkCounterSendSpeed_ = value;
      }
    }

    /// <summary>Field number for the "NetworkCounterReceiveSpeed" field.</summary>
    public const int NetworkCounterReceiveSpeedFieldNumber = 12;
    private long networkCounterReceiveSpeed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NetworkCounterReceiveSpeed {
      get { return networkCounterReceiveSpeed_; }
      set {
        networkCounterReceiveSpeed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DaemonProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DaemonProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      if (AbsoluteExecutePath != other.AbsoluteExecutePath) return false;
      if (AbsoluteWorkDirectory != other.AbsoluteWorkDirectory) return false;
      if (ProcessId != other.ProcessId) return false;
      if (ProcessStartTime != other.ProcessStartTime) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PerformanceCounterCPU, other.PerformanceCounterCPU)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PerformanceCounterRAM, other.PerformanceCounterRAM)) return false;
      if (NetworkCounterTotalSent != other.NetworkCounterTotalSent) return false;
      if (NetworkCounterTotalReceived != other.NetworkCounterTotalReceived) return false;
      if (NetworkCounterSendSpeed != other.NetworkCounterSendSpeed) return false;
      if (NetworkCounterReceiveSpeed != other.NetworkCounterReceiveSpeed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (AbsoluteExecutePath.Length != 0) hash ^= AbsoluteExecutePath.GetHashCode();
      if (AbsoluteWorkDirectory.Length != 0) hash ^= AbsoluteWorkDirectory.GetHashCode();
      if (ProcessId != 0) hash ^= ProcessId.GetHashCode();
      if (ProcessStartTime != 0L) hash ^= ProcessStartTime.GetHashCode();
      if (PerformanceCounterCPU != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PerformanceCounterCPU);
      if (PerformanceCounterRAM != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PerformanceCounterRAM);
      if (NetworkCounterTotalSent != 0L) hash ^= NetworkCounterTotalSent.GetHashCode();
      if (NetworkCounterTotalReceived != 0L) hash ^= NetworkCounterTotalReceived.GetHashCode();
      if (NetworkCounterSendSpeed != 0L) hash ^= NetworkCounterSendSpeed.GetHashCode();
      if (NetworkCounterReceiveSpeed != 0L) hash ^= NetworkCounterReceiveSpeed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (AbsoluteExecutePath.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(AbsoluteExecutePath);
      }
      if (AbsoluteWorkDirectory.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(AbsoluteWorkDirectory);
      }
      if (ProcessId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ProcessId);
      }
      if (ProcessStartTime != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(ProcessStartTime);
      }
      if (PerformanceCounterCPU != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(PerformanceCounterCPU);
      }
      if (PerformanceCounterRAM != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(PerformanceCounterRAM);
      }
      if (NetworkCounterTotalSent != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(NetworkCounterTotalSent);
      }
      if (NetworkCounterTotalReceived != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(NetworkCounterTotalReceived);
      }
      if (NetworkCounterSendSpeed != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(NetworkCounterSendSpeed);
      }
      if (NetworkCounterReceiveSpeed != 0L) {
        output.WriteRawTag(96);
        output.WriteInt64(NetworkCounterReceiveSpeed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (AbsoluteExecutePath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AbsoluteExecutePath);
      }
      if (AbsoluteWorkDirectory.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AbsoluteWorkDirectory);
      }
      if (ProcessId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ProcessId);
      }
      if (ProcessStartTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ProcessStartTime);
      }
      if (PerformanceCounterCPU != 0F) {
        size += 1 + 4;
      }
      if (PerformanceCounterRAM != 0F) {
        size += 1 + 4;
      }
      if (NetworkCounterTotalSent != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NetworkCounterTotalSent);
      }
      if (NetworkCounterTotalReceived != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NetworkCounterTotalReceived);
      }
      if (NetworkCounterSendSpeed != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NetworkCounterSendSpeed);
      }
      if (NetworkCounterReceiveSpeed != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NetworkCounterReceiveSpeed);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DaemonProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.AbsoluteExecutePath.Length != 0) {
        AbsoluteExecutePath = other.AbsoluteExecutePath;
      }
      if (other.AbsoluteWorkDirectory.Length != 0) {
        AbsoluteWorkDirectory = other.AbsoluteWorkDirectory;
      }
      if (other.ProcessId != 0) {
        ProcessId = other.ProcessId;
      }
      if (other.ProcessStartTime != 0L) {
        ProcessStartTime = other.ProcessStartTime;
      }
      if (other.PerformanceCounterCPU != 0F) {
        PerformanceCounterCPU = other.PerformanceCounterCPU;
      }
      if (other.PerformanceCounterRAM != 0F) {
        PerformanceCounterRAM = other.PerformanceCounterRAM;
      }
      if (other.NetworkCounterTotalSent != 0L) {
        NetworkCounterTotalSent = other.NetworkCounterTotalSent;
      }
      if (other.NetworkCounterTotalReceived != 0L) {
        NetworkCounterTotalReceived = other.NetworkCounterTotalReceived;
      }
      if (other.NetworkCounterSendSpeed != 0L) {
        NetworkCounterSendSpeed = other.NetworkCounterSendSpeed;
      }
      if (other.NetworkCounterReceiveSpeed != 0L) {
        NetworkCounterReceiveSpeed = other.NetworkCounterReceiveSpeed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            AbsoluteExecutePath = input.ReadString();
            break;
          }
          case 34: {
            AbsoluteWorkDirectory = input.ReadString();
            break;
          }
          case 40: {
            ProcessId = input.ReadInt32();
            break;
          }
          case 48: {
            ProcessStartTime = input.ReadInt64();
            break;
          }
          case 61: {
            PerformanceCounterCPU = input.ReadFloat();
            break;
          }
          case 69: {
            PerformanceCounterRAM = input.ReadFloat();
            break;
          }
          case 72: {
            NetworkCounterTotalSent = input.ReadInt64();
            break;
          }
          case 80: {
            NetworkCounterTotalReceived = input.ReadInt64();
            break;
          }
          case 88: {
            NetworkCounterSendSpeed = input.ReadInt64();
            break;
          }
          case 96: {
            NetworkCounterReceiveSpeed = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 测试包
  /// </summary>
  public sealed partial class PacketTestProtobuf : pb::IMessage<PacketTestProtobuf> {
    private static readonly pb::MessageParser<PacketTestProtobuf> _parser = new pb::MessageParser<PacketTestProtobuf>(() => new PacketTestProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PacketTestProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.WebSocketMessagesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PacketTestProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PacketTestProtobuf(PacketTestProtobuf other) : this() {
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PacketTestProtobuf Clone() {
      return new PacketTestProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///0
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PacketTestProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PacketTestProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PacketTestProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///心跳
  /// </summary>
  public sealed partial class ClientKeepAliveProtobuf : pb::IMessage<ClientKeepAliveProtobuf> {
    private static readonly pb::MessageParser<ClientKeepAliveProtobuf> _parser = new pb::MessageParser<ClientKeepAliveProtobuf>(() => new ClientKeepAliveProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientKeepAliveProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.WebSocketMessagesReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientKeepAliveProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientKeepAliveProtobuf(ClientKeepAliveProtobuf other) : this() {
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientKeepAliveProtobuf Clone() {
      return new ClientKeepAliveProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientKeepAliveProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientKeepAliveProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientKeepAliveProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务端响应客户端链接事件,并回复给客户端
  /// </summary>
  public sealed partial class ServerAcceptConnectionProtobuf : pb::IMessage<ServerAcceptConnectionProtobuf> {
    private static readonly pb::MessageParser<ServerAcceptConnectionProtobuf> _parser = new pb::MessageParser<ServerAcceptConnectionProtobuf>(() => new ServerAcceptConnectionProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServerAcceptConnectionProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.WebSocketMessagesReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerAcceptConnectionProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerAcceptConnectionProtobuf(ServerAcceptConnectionProtobuf other) : this() {
      type_ = other.type_;
      connectionId_ = other.connectionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerAcceptConnectionProtobuf Clone() {
      return new ServerAcceptConnectionProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///21
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "ConnectionId" field.</summary>
    public const int ConnectionIdFieldNumber = 2;
    private string connectionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConnectionId {
      get { return connectionId_; }
      set {
        connectionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServerAcceptConnectionProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServerAcceptConnectionProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (ConnectionId != other.ConnectionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (ConnectionId.Length != 0) hash ^= ConnectionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (ConnectionId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ConnectionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (ConnectionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConnectionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServerAcceptConnectionProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.ConnectionId.Length != 0) {
        ConnectionId = other.ConnectionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            ConnectionId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端向服务端请求验证ControlKey
  /// </summary>
  public sealed partial class ClientOfferControlKeyProtobuf : pb::IMessage<ClientOfferControlKeyProtobuf> {
    private static readonly pb::MessageParser<ClientOfferControlKeyProtobuf> _parser = new pb::MessageParser<ClientOfferControlKeyProtobuf>(() => new ClientOfferControlKeyProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientOfferControlKeyProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.WebSocketMessagesReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientOfferControlKeyProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientOfferControlKeyProtobuf(ClientOfferControlKeyProtobuf other) : this() {
      type_ = other.type_;
      connectionId_ = other.connectionId_;
      controlKey_ = other.controlKey_;
      supportNotify_ = other.supportNotify_;
      supportAttach_ = other.supportAttach_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientOfferControlKeyProtobuf Clone() {
      return new ClientOfferControlKeyProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///12
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "ConnectionId" field.</summary>
    public const int ConnectionIdFieldNumber = 2;
    private string connectionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConnectionId {
      get { return connectionId_; }
      set {
        connectionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ControlKey" field.</summary>
    public const int ControlKeyFieldNumber = 3;
    private string controlKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ControlKey {
      get { return controlKey_; }
      set {
        controlKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SupportNotify" field.</summary>
    public const int SupportNotifyFieldNumber = 4;
    private bool supportNotify_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool SupportNotify {
      get { return supportNotify_; }
      set {
        supportNotify_ = value;
      }
    }

    /// <summary>Field number for the "SupportAttach" field.</summary>
    public const int SupportAttachFieldNumber = 5;
    private bool supportAttach_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool SupportAttach {
      get { return supportAttach_; }
      set {
        supportAttach_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientOfferControlKeyProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientOfferControlKeyProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (ConnectionId != other.ConnectionId) return false;
      if (ControlKey != other.ControlKey) return false;
      if (SupportNotify != other.SupportNotify) return false;
      if (SupportAttach != other.SupportAttach) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (ConnectionId.Length != 0) hash ^= ConnectionId.GetHashCode();
      if (ControlKey.Length != 0) hash ^= ControlKey.GetHashCode();
      if (SupportNotify != false) hash ^= SupportNotify.GetHashCode();
      if (SupportAttach != false) hash ^= SupportAttach.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (ConnectionId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ConnectionId);
      }
      if (ControlKey.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ControlKey);
      }
      if (SupportNotify != false) {
        output.WriteRawTag(32);
        output.WriteBool(SupportNotify);
      }
      if (SupportAttach != false) {
        output.WriteRawTag(40);
        output.WriteBool(SupportAttach);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (ConnectionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConnectionId);
      }
      if (ControlKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ControlKey);
      }
      if (SupportNotify != false) {
        size += 1 + 1;
      }
      if (SupportAttach != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientOfferControlKeyProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.ConnectionId.Length != 0) {
        ConnectionId = other.ConnectionId;
      }
      if (other.ControlKey.Length != 0) {
        ControlKey = other.ControlKey;
      }
      if (other.SupportNotify != false) {
        SupportNotify = other.SupportNotify;
      }
      if (other.SupportAttach != false) {
        SupportAttach = other.SupportAttach;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            ConnectionId = input.ReadString();
            break;
          }
          case 26: {
            ControlKey = input.ReadString();
            break;
          }
          case 32: {
            SupportNotify = input.ReadBool();
            break;
          }
          case 40: {
            SupportAttach = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务端回复客户端ControlKey验证结果
  /// </summary>
  public sealed partial class ServerValidateConnectionProtobuf : pb::IMessage<ServerValidateConnectionProtobuf> {
    private static readonly pb::MessageParser<ServerValidateConnectionProtobuf> _parser = new pb::MessageParser<ServerValidateConnectionProtobuf>(() => new ServerValidateConnectionProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServerValidateConnectionProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.WebSocketMessagesReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerValidateConnectionProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerValidateConnectionProtobuf(ServerValidateConnectionProtobuf other) : this() {
      type_ = other.type_;
      connectionId_ = other.connectionId_;
      valid_ = other.valid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerValidateConnectionProtobuf Clone() {
      return new ServerValidateConnectionProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///22
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "ConnectionId" field.</summary>
    public const int ConnectionIdFieldNumber = 2;
    private string connectionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConnectionId {
      get { return connectionId_; }
      set {
        connectionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Valid" field.</summary>
    public const int ValidFieldNumber = 3;
    private bool valid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Valid {
      get { return valid_; }
      set {
        valid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServerValidateConnectionProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServerValidateConnectionProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (ConnectionId != other.ConnectionId) return false;
      if (Valid != other.Valid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (ConnectionId.Length != 0) hash ^= ConnectionId.GetHashCode();
      if (Valid != false) hash ^= Valid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (ConnectionId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ConnectionId);
      }
      if (Valid != false) {
        output.WriteRawTag(24);
        output.WriteBool(Valid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (ConnectionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConnectionId);
      }
      if (Valid != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServerValidateConnectionProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.ConnectionId.Length != 0) {
        ConnectionId = other.ConnectionId;
      }
      if (other.Valid != false) {
        Valid = other.Valid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            ConnectionId = input.ReadString();
            break;
          }
          case 24: {
            Valid = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// windctl status unitKey
  /// </summary>
  public sealed partial class StatusRequestProtobuf : pb::IMessage<StatusRequestProtobuf> {
    private static readonly pb::MessageParser<StatusRequestProtobuf> _parser = new pb::MessageParser<StatusRequestProtobuf>(() => new StatusRequestProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StatusRequestProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.WebSocketMessagesReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatusRequestProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatusRequestProtobuf(StatusRequestProtobuf other) : this() {
      type_ = other.type_;
      unitKey_ = other.unitKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatusRequestProtobuf Clone() {
      return new StatusRequestProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///1001
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "UnitKey" field.</summary>
    public const int UnitKeyFieldNumber = 2;
    private string unitKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UnitKey {
      get { return unitKey_; }
      set {
        unitKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StatusRequestProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StatusRequestProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (UnitKey != other.UnitKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (UnitKey.Length != 0) hash ^= UnitKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (UnitKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UnitKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (UnitKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UnitKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StatusRequestProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.UnitKey.Length != 0) {
        UnitKey = other.UnitKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            UnitKey = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// windctl start unitKey
  /// </summary>
  public sealed partial class StartRequestProtobuf : pb::IMessage<StartRequestProtobuf> {
    private static readonly pb::MessageParser<StartRequestProtobuf> _parser = new pb::MessageParser<StartRequestProtobuf>(() => new StartRequestProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StartRequestProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.WebSocketMessagesReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartRequestProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartRequestProtobuf(StartRequestProtobuf other) : this() {
      type_ = other.type_;
      unitKey_ = other.unitKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartRequestProtobuf Clone() {
      return new StartRequestProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///1002
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "UnitKey" field.</summary>
    public const int UnitKeyFieldNumber = 2;
    private string unitKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UnitKey {
      get { return unitKey_; }
      set {
        unitKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StartRequestProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StartRequestProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (UnitKey != other.UnitKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (UnitKey.Length != 0) hash ^= UnitKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (UnitKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UnitKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (UnitKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UnitKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StartRequestProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.UnitKey.Length != 0) {
        UnitKey = other.UnitKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            UnitKey = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// windctl stop unitKey
  /// </summary>
  public sealed partial class StopRequestProtobuf : pb::IMessage<StopRequestProtobuf> {
    private static readonly pb::MessageParser<StopRequestProtobuf> _parser = new pb::MessageParser<StopRequestProtobuf>(() => new StopRequestProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StopRequestProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.WebSocketMessagesReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopRequestProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopRequestProtobuf(StopRequestProtobuf other) : this() {
      type_ = other.type_;
      unitKey_ = other.unitKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopRequestProtobuf Clone() {
      return new StopRequestProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///1003
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "UnitKey" field.</summary>
    public const int UnitKeyFieldNumber = 2;
    private string unitKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UnitKey {
      get { return unitKey_; }
      set {
        unitKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StopRequestProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StopRequestProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (UnitKey != other.UnitKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (UnitKey.Length != 0) hash ^= UnitKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (UnitKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UnitKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (UnitKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UnitKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StopRequestProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.UnitKey.Length != 0) {
        UnitKey = other.UnitKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            UnitKey = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// windctl restart unitKey
  /// </summary>
  public sealed partial class RestartRequestProtobuf : pb::IMessage<RestartRequestProtobuf> {
    private static readonly pb::MessageParser<RestartRequestProtobuf> _parser = new pb::MessageParser<RestartRequestProtobuf>(() => new RestartRequestProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RestartRequestProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.WebSocketMessagesReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestartRequestProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestartRequestProtobuf(RestartRequestProtobuf other) : this() {
      type_ = other.type_;
      unitKey_ = other.unitKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestartRequestProtobuf Clone() {
      return new RestartRequestProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///1004
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "UnitKey" field.</summary>
    public const int UnitKeyFieldNumber = 2;
    private string unitKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UnitKey {
      get { return unitKey_; }
      set {
        unitKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RestartRequestProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RestartRequestProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (UnitKey != other.UnitKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (UnitKey.Length != 0) hash ^= UnitKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (UnitKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UnitKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (UnitKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UnitKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RestartRequestProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.UnitKey.Length != 0) {
        UnitKey = other.UnitKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            UnitKey = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// windctl load unitKey
  /// </summary>
  public sealed partial class LoadRequestProtobuf : pb::IMessage<LoadRequestProtobuf> {
    private static readonly pb::MessageParser<LoadRequestProtobuf> _parser = new pb::MessageParser<LoadRequestProtobuf>(() => new LoadRequestProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoadRequestProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.WebSocketMessagesReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadRequestProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadRequestProtobuf(LoadRequestProtobuf other) : this() {
      type_ = other.type_;
      unitKey_ = other.unitKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadRequestProtobuf Clone() {
      return new LoadRequestProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///1005
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "UnitKey" field.</summary>
    public const int UnitKeyFieldNumber = 2;
    private string unitKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UnitKey {
      get { return unitKey_; }
      set {
        unitKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoadRequestProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoadRequestProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (UnitKey != other.UnitKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (UnitKey.Length != 0) hash ^= UnitKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (UnitKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UnitKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (UnitKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UnitKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoadRequestProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.UnitKey.Length != 0) {
        UnitKey = other.UnitKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            UnitKey = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// windctl remove unitKey
  /// </summary>
  public sealed partial class RemoveRequestProtobuf : pb::IMessage<RemoveRequestProtobuf> {
    private static readonly pb::MessageParser<RemoveRequestProtobuf> _parser = new pb::MessageParser<RemoveRequestProtobuf>(() => new RemoveRequestProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemoveRequestProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.WebSocketMessagesReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveRequestProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveRequestProtobuf(RemoveRequestProtobuf other) : this() {
      type_ = other.type_;
      unitKey_ = other.unitKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveRequestProtobuf Clone() {
      return new RemoveRequestProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///1006
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "UnitKey" field.</summary>
    public const int UnitKeyFieldNumber = 2;
    private string unitKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UnitKey {
      get { return unitKey_; }
      set {
        unitKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemoveRequestProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemoveRequestProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (UnitKey != other.UnitKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (UnitKey.Length != 0) hash ^= UnitKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (UnitKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UnitKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (UnitKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UnitKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemoveRequestProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.UnitKey.Length != 0) {
        UnitKey = other.UnitKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            UnitKey = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// windctl logs unitKey
  /// </summary>
  public sealed partial class LogsRequestProtobuf : pb::IMessage<LogsRequestProtobuf> {
    private static readonly pb::MessageParser<LogsRequestProtobuf> _parser = new pb::MessageParser<LogsRequestProtobuf>(() => new LogsRequestProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LogsRequestProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.WebSocketMessagesReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogsRequestProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogsRequestProtobuf(LogsRequestProtobuf other) : this() {
      type_ = other.type_;
      unitKey_ = other.unitKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogsRequestProtobuf Clone() {
      return new LogsRequestProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///1007
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "UnitKey" field.</summary>
    public const int UnitKeyFieldNumber = 2;
    private string unitKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UnitKey {
      get { return unitKey_; }
      set {
        unitKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LogsRequestProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LogsRequestProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (UnitKey != other.UnitKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (UnitKey.Length != 0) hash ^= UnitKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (UnitKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UnitKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (UnitKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UnitKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LogsRequestProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.UnitKey.Length != 0) {
        UnitKey = other.UnitKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            UnitKey = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// windctl attach unitKey
  /// </summary>
  public sealed partial class AttachRequestProtobuf : pb::IMessage<AttachRequestProtobuf> {
    private static readonly pb::MessageParser<AttachRequestProtobuf> _parser = new pb::MessageParser<AttachRequestProtobuf>(() => new AttachRequestProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AttachRequestProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.WebSocketMessagesReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttachRequestProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttachRequestProtobuf(AttachRequestProtobuf other) : this() {
      type_ = other.type_;
      unitKey_ = other.unitKey_;
      commandType_ = other.commandType_;
      commandLine_ = other.commandLine_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttachRequestProtobuf Clone() {
      return new AttachRequestProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///1008
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "UnitKey" field.</summary>
    public const int UnitKeyFieldNumber = 2;
    private string unitKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UnitKey {
      get { return unitKey_; }
      set {
        unitKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CommandType" field.</summary>
    public const int CommandTypeFieldNumber = 3;
    private int commandType_;
    /// <summary>
    ///0:attach,1:text,2:^c,9:dettch
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CommandType {
      get { return commandType_; }
      set {
        commandType_ = value;
      }
    }

    /// <summary>Field number for the "CommandLine" field.</summary>
    public const int CommandLineFieldNumber = 4;
    private string commandLine_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CommandLine {
      get { return commandLine_; }
      set {
        commandLine_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AttachRequestProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AttachRequestProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (UnitKey != other.UnitKey) return false;
      if (CommandType != other.CommandType) return false;
      if (CommandLine != other.CommandLine) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (UnitKey.Length != 0) hash ^= UnitKey.GetHashCode();
      if (CommandType != 0) hash ^= CommandType.GetHashCode();
      if (CommandLine.Length != 0) hash ^= CommandLine.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (UnitKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UnitKey);
      }
      if (CommandType != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CommandType);
      }
      if (CommandLine.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CommandLine);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (UnitKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UnitKey);
      }
      if (CommandType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CommandType);
      }
      if (CommandLine.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CommandLine);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AttachRequestProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.UnitKey.Length != 0) {
        UnitKey = other.UnitKey;
      }
      if (other.CommandType != 0) {
        CommandType = other.CommandType;
      }
      if (other.CommandLine.Length != 0) {
        CommandLine = other.CommandLine;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            UnitKey = input.ReadString();
            break;
          }
          case 24: {
            CommandType = input.ReadInt32();
            break;
          }
          case 34: {
            CommandLine = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// windctl status-all
  /// </summary>
  public sealed partial class StatusAllRequestProtobuf : pb::IMessage<StatusAllRequestProtobuf> {
    private static readonly pb::MessageParser<StatusAllRequestProtobuf> _parser = new pb::MessageParser<StatusAllRequestProtobuf>(() => new StatusAllRequestProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StatusAllRequestProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.WebSocketMessagesReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatusAllRequestProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatusAllRequestProtobuf(StatusAllRequestProtobuf other) : this() {
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatusAllRequestProtobuf Clone() {
      return new StatusAllRequestProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///1101
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StatusAllRequestProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StatusAllRequestProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StatusAllRequestProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// windctl start-all
  /// </summary>
  public sealed partial class StartAllRequestProtobuf : pb::IMessage<StartAllRequestProtobuf> {
    private static readonly pb::MessageParser<StartAllRequestProtobuf> _parser = new pb::MessageParser<StartAllRequestProtobuf>(() => new StartAllRequestProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StartAllRequestProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.WebSocketMessagesReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartAllRequestProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartAllRequestProtobuf(StartAllRequestProtobuf other) : this() {
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartAllRequestProtobuf Clone() {
      return new StartAllRequestProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///1102
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StartAllRequestProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StartAllRequestProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StartAllRequestProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// windctl stop-all
  /// </summary>
  public sealed partial class StopAllRequestProtobuf : pb::IMessage<StopAllRequestProtobuf> {
    private static readonly pb::MessageParser<StopAllRequestProtobuf> _parser = new pb::MessageParser<StopAllRequestProtobuf>(() => new StopAllRequestProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StopAllRequestProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.WebSocketMessagesReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopAllRequestProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopAllRequestProtobuf(StopAllRequestProtobuf other) : this() {
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopAllRequestProtobuf Clone() {
      return new StopAllRequestProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///1103
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StopAllRequestProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StopAllRequestProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StopAllRequestProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// windctl restart-all
  /// </summary>
  public sealed partial class RestartAllRequestProtobuf : pb::IMessage<RestartAllRequestProtobuf> {
    private static readonly pb::MessageParser<RestartAllRequestProtobuf> _parser = new pb::MessageParser<RestartAllRequestProtobuf>(() => new RestartAllRequestProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RestartAllRequestProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.WebSocketMessagesReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestartAllRequestProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestartAllRequestProtobuf(RestartAllRequestProtobuf other) : this() {
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestartAllRequestProtobuf Clone() {
      return new RestartAllRequestProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///1104
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RestartAllRequestProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RestartAllRequestProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RestartAllRequestProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// windctl load-all
  /// </summary>
  public sealed partial class LoadAllRequestProtobuf : pb::IMessage<LoadAllRequestProtobuf> {
    private static readonly pb::MessageParser<LoadAllRequestProtobuf> _parser = new pb::MessageParser<LoadAllRequestProtobuf>(() => new LoadAllRequestProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoadAllRequestProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.WebSocketMessagesReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadAllRequestProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadAllRequestProtobuf(LoadAllRequestProtobuf other) : this() {
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadAllRequestProtobuf Clone() {
      return new LoadAllRequestProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///1105
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoadAllRequestProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoadAllRequestProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoadAllRequestProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// windctl remove-all
  /// </summary>
  public sealed partial class RemoveAllRequestProtobuf : pb::IMessage<RemoveAllRequestProtobuf> {
    private static readonly pb::MessageParser<RemoveAllRequestProtobuf> _parser = new pb::MessageParser<RemoveAllRequestProtobuf>(() => new RemoveAllRequestProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemoveAllRequestProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.WebSocketMessagesReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveAllRequestProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveAllRequestProtobuf(RemoveAllRequestProtobuf other) : this() {
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveAllRequestProtobuf Clone() {
      return new RemoveAllRequestProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///1106
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemoveAllRequestProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemoveAllRequestProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemoveAllRequestProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// windctl daemon-version
  /// </summary>
  public sealed partial class DaemonVersionRequestProtobuf : pb::IMessage<DaemonVersionRequestProtobuf> {
    private static readonly pb::MessageParser<DaemonVersionRequestProtobuf> _parser = new pb::MessageParser<DaemonVersionRequestProtobuf>(() => new DaemonVersionRequestProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DaemonVersionRequestProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.WebSocketMessagesReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DaemonVersionRequestProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DaemonVersionRequestProtobuf(DaemonVersionRequestProtobuf other) : this() {
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DaemonVersionRequestProtobuf Clone() {
      return new DaemonVersionRequestProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///1200
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DaemonVersionRequestProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DaemonVersionRequestProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DaemonVersionRequestProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// windctl daemon-status
  /// </summary>
  public sealed partial class DaemonStatusRequestProtobuf : pb::IMessage<DaemonStatusRequestProtobuf> {
    private static readonly pb::MessageParser<DaemonStatusRequestProtobuf> _parser = new pb::MessageParser<DaemonStatusRequestProtobuf>(() => new DaemonStatusRequestProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DaemonStatusRequestProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.WebSocketMessagesReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DaemonStatusRequestProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DaemonStatusRequestProtobuf(DaemonStatusRequestProtobuf other) : this() {
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DaemonStatusRequestProtobuf Clone() {
      return new DaemonStatusRequestProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///1201
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DaemonStatusRequestProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DaemonStatusRequestProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DaemonStatusRequestProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// windctl daemon-shutdown
  /// </summary>
  public sealed partial class DaemonShutdownRequestProtobuf : pb::IMessage<DaemonShutdownRequestProtobuf> {
    private static readonly pb::MessageParser<DaemonShutdownRequestProtobuf> _parser = new pb::MessageParser<DaemonShutdownRequestProtobuf>(() => new DaemonShutdownRequestProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DaemonShutdownRequestProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.WebSocketMessagesReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DaemonShutdownRequestProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DaemonShutdownRequestProtobuf(DaemonShutdownRequestProtobuf other) : this() {
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DaemonShutdownRequestProtobuf Clone() {
      return new DaemonShutdownRequestProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///1299
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DaemonShutdownRequestProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DaemonShutdownRequestProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DaemonShutdownRequestProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// windctl status unitKey
  /// </summary>
  public sealed partial class StatusResponseProtobuf : pb::IMessage<StatusResponseProtobuf> {
    private static readonly pb::MessageParser<StatusResponseProtobuf> _parser = new pb::MessageParser<StatusResponseProtobuf>(() => new StatusResponseProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StatusResponseProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.WebSocketMessagesReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatusResponseProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatusResponseProtobuf(StatusResponseProtobuf other) : this() {
      type_ = other.type_;
      unitKey_ = other.unitKey_;
      executed_ = other.executed_;
      noExecuteMessage_ = other.noExecuteMessage_;
      unitProtobuf_ = other.unitProtobuf_ != null ? other.unitProtobuf_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatusResponseProtobuf Clone() {
      return new StatusResponseProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///2001
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "UnitKey" field.</summary>
    public const int UnitKeyFieldNumber = 2;
    private string unitKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UnitKey {
      get { return unitKey_; }
      set {
        unitKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Executed" field.</summary>
    public const int ExecutedFieldNumber = 3;
    private bool executed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Executed {
      get { return executed_; }
      set {
        executed_ = value;
      }
    }

    /// <summary>Field number for the "NoExecuteMessage" field.</summary>
    public const int NoExecuteMessageFieldNumber = 4;
    private string noExecuteMessage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NoExecuteMessage {
      get { return noExecuteMessage_; }
      set {
        noExecuteMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "UnitProtobuf" field.</summary>
    public const int UnitProtobufFieldNumber = 5;
    private global::wind.Entities.Protobuf.UnitProtobuf unitProtobuf_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::wind.Entities.Protobuf.UnitProtobuf UnitProtobuf {
      get { return unitProtobuf_; }
      set {
        unitProtobuf_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StatusResponseProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StatusResponseProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (UnitKey != other.UnitKey) return false;
      if (Executed != other.Executed) return false;
      if (NoExecuteMessage != other.NoExecuteMessage) return false;
      if (!object.Equals(UnitProtobuf, other.UnitProtobuf)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (UnitKey.Length != 0) hash ^= UnitKey.GetHashCode();
      if (Executed != false) hash ^= Executed.GetHashCode();
      if (NoExecuteMessage.Length != 0) hash ^= NoExecuteMessage.GetHashCode();
      if (unitProtobuf_ != null) hash ^= UnitProtobuf.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (UnitKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UnitKey);
      }
      if (Executed != false) {
        output.WriteRawTag(24);
        output.WriteBool(Executed);
      }
      if (NoExecuteMessage.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NoExecuteMessage);
      }
      if (unitProtobuf_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(UnitProtobuf);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (UnitKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UnitKey);
      }
      if (Executed != false) {
        size += 1 + 1;
      }
      if (NoExecuteMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NoExecuteMessage);
      }
      if (unitProtobuf_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UnitProtobuf);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StatusResponseProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.UnitKey.Length != 0) {
        UnitKey = other.UnitKey;
      }
      if (other.Executed != false) {
        Executed = other.Executed;
      }
      if (other.NoExecuteMessage.Length != 0) {
        NoExecuteMessage = other.NoExecuteMessage;
      }
      if (other.unitProtobuf_ != null) {
        if (unitProtobuf_ == null) {
          UnitProtobuf = new global::wind.Entities.Protobuf.UnitProtobuf();
        }
        UnitProtobuf.MergeFrom(other.UnitProtobuf);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            UnitKey = input.ReadString();
            break;
          }
          case 24: {
            Executed = input.ReadBool();
            break;
          }
          case 34: {
            NoExecuteMessage = input.ReadString();
            break;
          }
          case 42: {
            if (unitProtobuf_ == null) {
              UnitProtobuf = new global::wind.Entities.Protobuf.UnitProtobuf();
            }
            input.ReadMessage(UnitProtobuf);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// windctl start unitKey
  /// </summary>
  public sealed partial class StartResponseProtobuf : pb::IMessage<StartResponseProtobuf> {
    private static readonly pb::MessageParser<StartResponseProtobuf> _parser = new pb::MessageParser<StartResponseProtobuf>(() => new StartResponseProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StartResponseProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.WebSocketMessagesReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartResponseProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartResponseProtobuf(StartResponseProtobuf other) : this() {
      type_ = other.type_;
      unitKey_ = other.unitKey_;
      executed_ = other.executed_;
      noExecuteMessage_ = other.noExecuteMessage_;
      unitRunningSettingsProtobuf_ = other.unitRunningSettingsProtobuf_ != null ? other.unitRunningSettingsProtobuf_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartResponseProtobuf Clone() {
      return new StartResponseProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///2002
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "UnitKey" field.</summary>
    public const int UnitKeyFieldNumber = 2;
    private string unitKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UnitKey {
      get { return unitKey_; }
      set {
        unitKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Executed" field.</summary>
    public const int ExecutedFieldNumber = 3;
    private bool executed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Executed {
      get { return executed_; }
      set {
        executed_ = value;
      }
    }

    /// <summary>Field number for the "NoExecuteMessage" field.</summary>
    public const int NoExecuteMessageFieldNumber = 4;
    private string noExecuteMessage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NoExecuteMessage {
      get { return noExecuteMessage_; }
      set {
        noExecuteMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "UnitRunningSettingsProtobuf" field.</summary>
    public const int UnitRunningSettingsProtobufFieldNumber = 5;
    private global::wind.Entities.Protobuf.UnitSettingsProtobuf unitRunningSettingsProtobuf_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::wind.Entities.Protobuf.UnitSettingsProtobuf UnitRunningSettingsProtobuf {
      get { return unitRunningSettingsProtobuf_; }
      set {
        unitRunningSettingsProtobuf_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StartResponseProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StartResponseProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (UnitKey != other.UnitKey) return false;
      if (Executed != other.Executed) return false;
      if (NoExecuteMessage != other.NoExecuteMessage) return false;
      if (!object.Equals(UnitRunningSettingsProtobuf, other.UnitRunningSettingsProtobuf)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (UnitKey.Length != 0) hash ^= UnitKey.GetHashCode();
      if (Executed != false) hash ^= Executed.GetHashCode();
      if (NoExecuteMessage.Length != 0) hash ^= NoExecuteMessage.GetHashCode();
      if (unitRunningSettingsProtobuf_ != null) hash ^= UnitRunningSettingsProtobuf.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (UnitKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UnitKey);
      }
      if (Executed != false) {
        output.WriteRawTag(24);
        output.WriteBool(Executed);
      }
      if (NoExecuteMessage.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NoExecuteMessage);
      }
      if (unitRunningSettingsProtobuf_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(UnitRunningSettingsProtobuf);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (UnitKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UnitKey);
      }
      if (Executed != false) {
        size += 1 + 1;
      }
      if (NoExecuteMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NoExecuteMessage);
      }
      if (unitRunningSettingsProtobuf_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UnitRunningSettingsProtobuf);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StartResponseProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.UnitKey.Length != 0) {
        UnitKey = other.UnitKey;
      }
      if (other.Executed != false) {
        Executed = other.Executed;
      }
      if (other.NoExecuteMessage.Length != 0) {
        NoExecuteMessage = other.NoExecuteMessage;
      }
      if (other.unitRunningSettingsProtobuf_ != null) {
        if (unitRunningSettingsProtobuf_ == null) {
          UnitRunningSettingsProtobuf = new global::wind.Entities.Protobuf.UnitSettingsProtobuf();
        }
        UnitRunningSettingsProtobuf.MergeFrom(other.UnitRunningSettingsProtobuf);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            UnitKey = input.ReadString();
            break;
          }
          case 24: {
            Executed = input.ReadBool();
            break;
          }
          case 34: {
            NoExecuteMessage = input.ReadString();
            break;
          }
          case 42: {
            if (unitRunningSettingsProtobuf_ == null) {
              UnitRunningSettingsProtobuf = new global::wind.Entities.Protobuf.UnitSettingsProtobuf();
            }
            input.ReadMessage(UnitRunningSettingsProtobuf);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// windctl stop unitKey
  /// </summary>
  public sealed partial class StopResponseProtobuf : pb::IMessage<StopResponseProtobuf> {
    private static readonly pb::MessageParser<StopResponseProtobuf> _parser = new pb::MessageParser<StopResponseProtobuf>(() => new StopResponseProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StopResponseProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.WebSocketMessagesReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopResponseProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopResponseProtobuf(StopResponseProtobuf other) : this() {
      type_ = other.type_;
      unitKey_ = other.unitKey_;
      executed_ = other.executed_;
      noExecuteMessage_ = other.noExecuteMessage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopResponseProtobuf Clone() {
      return new StopResponseProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///2003
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "UnitKey" field.</summary>
    public const int UnitKeyFieldNumber = 2;
    private string unitKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UnitKey {
      get { return unitKey_; }
      set {
        unitKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Executed" field.</summary>
    public const int ExecutedFieldNumber = 3;
    private bool executed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Executed {
      get { return executed_; }
      set {
        executed_ = value;
      }
    }

    /// <summary>Field number for the "NoExecuteMessage" field.</summary>
    public const int NoExecuteMessageFieldNumber = 4;
    private string noExecuteMessage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NoExecuteMessage {
      get { return noExecuteMessage_; }
      set {
        noExecuteMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StopResponseProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StopResponseProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (UnitKey != other.UnitKey) return false;
      if (Executed != other.Executed) return false;
      if (NoExecuteMessage != other.NoExecuteMessage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (UnitKey.Length != 0) hash ^= UnitKey.GetHashCode();
      if (Executed != false) hash ^= Executed.GetHashCode();
      if (NoExecuteMessage.Length != 0) hash ^= NoExecuteMessage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (UnitKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UnitKey);
      }
      if (Executed != false) {
        output.WriteRawTag(24);
        output.WriteBool(Executed);
      }
      if (NoExecuteMessage.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NoExecuteMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (UnitKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UnitKey);
      }
      if (Executed != false) {
        size += 1 + 1;
      }
      if (NoExecuteMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NoExecuteMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StopResponseProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.UnitKey.Length != 0) {
        UnitKey = other.UnitKey;
      }
      if (other.Executed != false) {
        Executed = other.Executed;
      }
      if (other.NoExecuteMessage.Length != 0) {
        NoExecuteMessage = other.NoExecuteMessage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            UnitKey = input.ReadString();
            break;
          }
          case 24: {
            Executed = input.ReadBool();
            break;
          }
          case 34: {
            NoExecuteMessage = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// windctl restart unitKey
  /// </summary>
  public sealed partial class RestartResponseProtobuf : pb::IMessage<RestartResponseProtobuf> {
    private static readonly pb::MessageParser<RestartResponseProtobuf> _parser = new pb::MessageParser<RestartResponseProtobuf>(() => new RestartResponseProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RestartResponseProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.WebSocketMessagesReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestartResponseProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestartResponseProtobuf(RestartResponseProtobuf other) : this() {
      type_ = other.type_;
      unitKey_ = other.unitKey_;
      executed_ = other.executed_;
      noExecuteMessage_ = other.noExecuteMessage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestartResponseProtobuf Clone() {
      return new RestartResponseProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///2004
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "UnitKey" field.</summary>
    public const int UnitKeyFieldNumber = 2;
    private string unitKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UnitKey {
      get { return unitKey_; }
      set {
        unitKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Executed" field.</summary>
    public const int ExecutedFieldNumber = 3;
    private bool executed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Executed {
      get { return executed_; }
      set {
        executed_ = value;
      }
    }

    /// <summary>Field number for the "NoExecuteMessage" field.</summary>
    public const int NoExecuteMessageFieldNumber = 4;
    private string noExecuteMessage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NoExecuteMessage {
      get { return noExecuteMessage_; }
      set {
        noExecuteMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RestartResponseProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RestartResponseProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (UnitKey != other.UnitKey) return false;
      if (Executed != other.Executed) return false;
      if (NoExecuteMessage != other.NoExecuteMessage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (UnitKey.Length != 0) hash ^= UnitKey.GetHashCode();
      if (Executed != false) hash ^= Executed.GetHashCode();
      if (NoExecuteMessage.Length != 0) hash ^= NoExecuteMessage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (UnitKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UnitKey);
      }
      if (Executed != false) {
        output.WriteRawTag(24);
        output.WriteBool(Executed);
      }
      if (NoExecuteMessage.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NoExecuteMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (UnitKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UnitKey);
      }
      if (Executed != false) {
        size += 1 + 1;
      }
      if (NoExecuteMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NoExecuteMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RestartResponseProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.UnitKey.Length != 0) {
        UnitKey = other.UnitKey;
      }
      if (other.Executed != false) {
        Executed = other.Executed;
      }
      if (other.NoExecuteMessage.Length != 0) {
        NoExecuteMessage = other.NoExecuteMessage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            UnitKey = input.ReadString();
            break;
          }
          case 24: {
            Executed = input.ReadBool();
            break;
          }
          case 34: {
            NoExecuteMessage = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// windctl load unitKey
  /// </summary>
  public sealed partial class LoadResponseProtobuf : pb::IMessage<LoadResponseProtobuf> {
    private static readonly pb::MessageParser<LoadResponseProtobuf> _parser = new pb::MessageParser<LoadResponseProtobuf>(() => new LoadResponseProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoadResponseProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.WebSocketMessagesReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadResponseProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadResponseProtobuf(LoadResponseProtobuf other) : this() {
      type_ = other.type_;
      unitKey_ = other.unitKey_;
      executed_ = other.executed_;
      noExecuteMessage_ = other.noExecuteMessage_;
      unitSettingsProtobuf_ = other.unitSettingsProtobuf_ != null ? other.unitSettingsProtobuf_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadResponseProtobuf Clone() {
      return new LoadResponseProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///2005
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "UnitKey" field.</summary>
    public const int UnitKeyFieldNumber = 2;
    private string unitKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UnitKey {
      get { return unitKey_; }
      set {
        unitKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Executed" field.</summary>
    public const int ExecutedFieldNumber = 3;
    private bool executed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Executed {
      get { return executed_; }
      set {
        executed_ = value;
      }
    }

    /// <summary>Field number for the "NoExecuteMessage" field.</summary>
    public const int NoExecuteMessageFieldNumber = 4;
    private string noExecuteMessage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NoExecuteMessage {
      get { return noExecuteMessage_; }
      set {
        noExecuteMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "UnitSettingsProtobuf" field.</summary>
    public const int UnitSettingsProtobufFieldNumber = 5;
    private global::wind.Entities.Protobuf.UnitSettingsProtobuf unitSettingsProtobuf_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::wind.Entities.Protobuf.UnitSettingsProtobuf UnitSettingsProtobuf {
      get { return unitSettingsProtobuf_; }
      set {
        unitSettingsProtobuf_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoadResponseProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoadResponseProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (UnitKey != other.UnitKey) return false;
      if (Executed != other.Executed) return false;
      if (NoExecuteMessage != other.NoExecuteMessage) return false;
      if (!object.Equals(UnitSettingsProtobuf, other.UnitSettingsProtobuf)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (UnitKey.Length != 0) hash ^= UnitKey.GetHashCode();
      if (Executed != false) hash ^= Executed.GetHashCode();
      if (NoExecuteMessage.Length != 0) hash ^= NoExecuteMessage.GetHashCode();
      if (unitSettingsProtobuf_ != null) hash ^= UnitSettingsProtobuf.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (UnitKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UnitKey);
      }
      if (Executed != false) {
        output.WriteRawTag(24);
        output.WriteBool(Executed);
      }
      if (NoExecuteMessage.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NoExecuteMessage);
      }
      if (unitSettingsProtobuf_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(UnitSettingsProtobuf);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (UnitKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UnitKey);
      }
      if (Executed != false) {
        size += 1 + 1;
      }
      if (NoExecuteMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NoExecuteMessage);
      }
      if (unitSettingsProtobuf_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UnitSettingsProtobuf);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoadResponseProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.UnitKey.Length != 0) {
        UnitKey = other.UnitKey;
      }
      if (other.Executed != false) {
        Executed = other.Executed;
      }
      if (other.NoExecuteMessage.Length != 0) {
        NoExecuteMessage = other.NoExecuteMessage;
      }
      if (other.unitSettingsProtobuf_ != null) {
        if (unitSettingsProtobuf_ == null) {
          UnitSettingsProtobuf = new global::wind.Entities.Protobuf.UnitSettingsProtobuf();
        }
        UnitSettingsProtobuf.MergeFrom(other.UnitSettingsProtobuf);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            UnitKey = input.ReadString();
            break;
          }
          case 24: {
            Executed = input.ReadBool();
            break;
          }
          case 34: {
            NoExecuteMessage = input.ReadString();
            break;
          }
          case 42: {
            if (unitSettingsProtobuf_ == null) {
              UnitSettingsProtobuf = new global::wind.Entities.Protobuf.UnitSettingsProtobuf();
            }
            input.ReadMessage(UnitSettingsProtobuf);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// windctl remove unitKey
  /// </summary>
  public sealed partial class RemoveResponseProtobuf : pb::IMessage<RemoveResponseProtobuf> {
    private static readonly pb::MessageParser<RemoveResponseProtobuf> _parser = new pb::MessageParser<RemoveResponseProtobuf>(() => new RemoveResponseProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemoveResponseProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.WebSocketMessagesReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveResponseProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveResponseProtobuf(RemoveResponseProtobuf other) : this() {
      type_ = other.type_;
      unitKey_ = other.unitKey_;
      executed_ = other.executed_;
      noExecuteMessage_ = other.noExecuteMessage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveResponseProtobuf Clone() {
      return new RemoveResponseProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///2006
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "UnitKey" field.</summary>
    public const int UnitKeyFieldNumber = 2;
    private string unitKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UnitKey {
      get { return unitKey_; }
      set {
        unitKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Executed" field.</summary>
    public const int ExecutedFieldNumber = 3;
    private bool executed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Executed {
      get { return executed_; }
      set {
        executed_ = value;
      }
    }

    /// <summary>Field number for the "NoExecuteMessage" field.</summary>
    public const int NoExecuteMessageFieldNumber = 4;
    private string noExecuteMessage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NoExecuteMessage {
      get { return noExecuteMessage_; }
      set {
        noExecuteMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemoveResponseProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemoveResponseProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (UnitKey != other.UnitKey) return false;
      if (Executed != other.Executed) return false;
      if (NoExecuteMessage != other.NoExecuteMessage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (UnitKey.Length != 0) hash ^= UnitKey.GetHashCode();
      if (Executed != false) hash ^= Executed.GetHashCode();
      if (NoExecuteMessage.Length != 0) hash ^= NoExecuteMessage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (UnitKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UnitKey);
      }
      if (Executed != false) {
        output.WriteRawTag(24);
        output.WriteBool(Executed);
      }
      if (NoExecuteMessage.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NoExecuteMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (UnitKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UnitKey);
      }
      if (Executed != false) {
        size += 1 + 1;
      }
      if (NoExecuteMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NoExecuteMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemoveResponseProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.UnitKey.Length != 0) {
        UnitKey = other.UnitKey;
      }
      if (other.Executed != false) {
        Executed = other.Executed;
      }
      if (other.NoExecuteMessage.Length != 0) {
        NoExecuteMessage = other.NoExecuteMessage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            UnitKey = input.ReadString();
            break;
          }
          case 24: {
            Executed = input.ReadBool();
            break;
          }
          case 34: {
            NoExecuteMessage = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// windctl logs unitKey
  /// </summary>
  public sealed partial class LogsResponseProtobuf : pb::IMessage<LogsResponseProtobuf> {
    private static readonly pb::MessageParser<LogsResponseProtobuf> _parser = new pb::MessageParser<LogsResponseProtobuf>(() => new LogsResponseProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LogsResponseProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.WebSocketMessagesReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogsResponseProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogsResponseProtobuf(LogsResponseProtobuf other) : this() {
      type_ = other.type_;
      unitKey_ = other.unitKey_;
      executed_ = other.executed_;
      noExecuteMessage_ = other.noExecuteMessage_;
      logFilePath_ = other.logFilePath_;
      logLineArray_ = other.logLineArray_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogsResponseProtobuf Clone() {
      return new LogsResponseProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///2007
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "UnitKey" field.</summary>
    public const int UnitKeyFieldNumber = 2;
    private string unitKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UnitKey {
      get { return unitKey_; }
      set {
        unitKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Executed" field.</summary>
    public const int ExecutedFieldNumber = 3;
    private bool executed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Executed {
      get { return executed_; }
      set {
        executed_ = value;
      }
    }

    /// <summary>Field number for the "NoExecuteMessage" field.</summary>
    public const int NoExecuteMessageFieldNumber = 4;
    private string noExecuteMessage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NoExecuteMessage {
      get { return noExecuteMessage_; }
      set {
        noExecuteMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LogFilePath" field.</summary>
    public const int LogFilePathFieldNumber = 5;
    private string logFilePath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LogFilePath {
      get { return logFilePath_; }
      set {
        logFilePath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LogLineArray" field.</summary>
    public const int LogLineArrayFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_logLineArray_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> logLineArray_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> LogLineArray {
      get { return logLineArray_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LogsResponseProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LogsResponseProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (UnitKey != other.UnitKey) return false;
      if (Executed != other.Executed) return false;
      if (NoExecuteMessage != other.NoExecuteMessage) return false;
      if (LogFilePath != other.LogFilePath) return false;
      if(!logLineArray_.Equals(other.logLineArray_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (UnitKey.Length != 0) hash ^= UnitKey.GetHashCode();
      if (Executed != false) hash ^= Executed.GetHashCode();
      if (NoExecuteMessage.Length != 0) hash ^= NoExecuteMessage.GetHashCode();
      if (LogFilePath.Length != 0) hash ^= LogFilePath.GetHashCode();
      hash ^= logLineArray_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (UnitKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UnitKey);
      }
      if (Executed != false) {
        output.WriteRawTag(24);
        output.WriteBool(Executed);
      }
      if (NoExecuteMessage.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NoExecuteMessage);
      }
      if (LogFilePath.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(LogFilePath);
      }
      logLineArray_.WriteTo(output, _repeated_logLineArray_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (UnitKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UnitKey);
      }
      if (Executed != false) {
        size += 1 + 1;
      }
      if (NoExecuteMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NoExecuteMessage);
      }
      if (LogFilePath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LogFilePath);
      }
      size += logLineArray_.CalculateSize(_repeated_logLineArray_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LogsResponseProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.UnitKey.Length != 0) {
        UnitKey = other.UnitKey;
      }
      if (other.Executed != false) {
        Executed = other.Executed;
      }
      if (other.NoExecuteMessage.Length != 0) {
        NoExecuteMessage = other.NoExecuteMessage;
      }
      if (other.LogFilePath.Length != 0) {
        LogFilePath = other.LogFilePath;
      }
      logLineArray_.Add(other.logLineArray_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            UnitKey = input.ReadString();
            break;
          }
          case 24: {
            Executed = input.ReadBool();
            break;
          }
          case 34: {
            NoExecuteMessage = input.ReadString();
            break;
          }
          case 42: {
            LogFilePath = input.ReadString();
            break;
          }
          case 50: {
            logLineArray_.AddEntriesFrom(input, _repeated_logLineArray_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// windctl attach unitKey
  /// </summary>
  public sealed partial class AttachResponseProtobuf : pb::IMessage<AttachResponseProtobuf> {
    private static readonly pb::MessageParser<AttachResponseProtobuf> _parser = new pb::MessageParser<AttachResponseProtobuf>(() => new AttachResponseProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AttachResponseProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.WebSocketMessagesReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttachResponseProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttachResponseProtobuf(AttachResponseProtobuf other) : this() {
      type_ = other.type_;
      unitKey_ = other.unitKey_;
      executed_ = other.executed_;
      noExecuteMessage_ = other.noExecuteMessage_;
      outputLineArray_ = other.outputLineArray_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttachResponseProtobuf Clone() {
      return new AttachResponseProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///2008
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "UnitKey" field.</summary>
    public const int UnitKeyFieldNumber = 2;
    private string unitKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UnitKey {
      get { return unitKey_; }
      set {
        unitKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Executed" field.</summary>
    public const int ExecutedFieldNumber = 3;
    private bool executed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Executed {
      get { return executed_; }
      set {
        executed_ = value;
      }
    }

    /// <summary>Field number for the "NoExecuteMessage" field.</summary>
    public const int NoExecuteMessageFieldNumber = 4;
    private string noExecuteMessage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NoExecuteMessage {
      get { return noExecuteMessage_; }
      set {
        noExecuteMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OutputLineArray" field.</summary>
    public const int OutputLineArrayFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_outputLineArray_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> outputLineArray_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> OutputLineArray {
      get { return outputLineArray_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AttachResponseProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AttachResponseProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (UnitKey != other.UnitKey) return false;
      if (Executed != other.Executed) return false;
      if (NoExecuteMessage != other.NoExecuteMessage) return false;
      if(!outputLineArray_.Equals(other.outputLineArray_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (UnitKey.Length != 0) hash ^= UnitKey.GetHashCode();
      if (Executed != false) hash ^= Executed.GetHashCode();
      if (NoExecuteMessage.Length != 0) hash ^= NoExecuteMessage.GetHashCode();
      hash ^= outputLineArray_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (UnitKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UnitKey);
      }
      if (Executed != false) {
        output.WriteRawTag(24);
        output.WriteBool(Executed);
      }
      if (NoExecuteMessage.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NoExecuteMessage);
      }
      outputLineArray_.WriteTo(output, _repeated_outputLineArray_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (UnitKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UnitKey);
      }
      if (Executed != false) {
        size += 1 + 1;
      }
      if (NoExecuteMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NoExecuteMessage);
      }
      size += outputLineArray_.CalculateSize(_repeated_outputLineArray_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AttachResponseProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.UnitKey.Length != 0) {
        UnitKey = other.UnitKey;
      }
      if (other.Executed != false) {
        Executed = other.Executed;
      }
      if (other.NoExecuteMessage.Length != 0) {
        NoExecuteMessage = other.NoExecuteMessage;
      }
      outputLineArray_.Add(other.outputLineArray_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            UnitKey = input.ReadString();
            break;
          }
          case 24: {
            Executed = input.ReadBool();
            break;
          }
          case 34: {
            NoExecuteMessage = input.ReadString();
            break;
          }
          case 42: {
            outputLineArray_.AddEntriesFrom(input, _repeated_outputLineArray_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// windctl status-all
  /// </summary>
  public sealed partial class StatusAllResponseProtobuf : pb::IMessage<StatusAllResponseProtobuf> {
    private static readonly pb::MessageParser<StatusAllResponseProtobuf> _parser = new pb::MessageParser<StatusAllResponseProtobuf>(() => new StatusAllResponseProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StatusAllResponseProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.WebSocketMessagesReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatusAllResponseProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatusAllResponseProtobuf(StatusAllResponseProtobuf other) : this() {
      type_ = other.type_;
      executed_ = other.executed_;
      noExecuteMessage_ = other.noExecuteMessage_;
      unitProtobufArraySize_ = other.unitProtobufArraySize_;
      unitProtobufArray_ = other.unitProtobufArray_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatusAllResponseProtobuf Clone() {
      return new StatusAllResponseProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///2101
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "Executed" field.</summary>
    public const int ExecutedFieldNumber = 2;
    private bool executed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Executed {
      get { return executed_; }
      set {
        executed_ = value;
      }
    }

    /// <summary>Field number for the "NoExecuteMessage" field.</summary>
    public const int NoExecuteMessageFieldNumber = 3;
    private string noExecuteMessage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NoExecuteMessage {
      get { return noExecuteMessage_; }
      set {
        noExecuteMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "UnitProtobufArraySize" field.</summary>
    public const int UnitProtobufArraySizeFieldNumber = 4;
    private int unitProtobufArraySize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnitProtobufArraySize {
      get { return unitProtobufArraySize_; }
      set {
        unitProtobufArraySize_ = value;
      }
    }

    /// <summary>Field number for the "UnitProtobufArray" field.</summary>
    public const int UnitProtobufArrayFieldNumber = 5;
    private static readonly pb::FieldCodec<global::wind.Entities.Protobuf.UnitProtobuf> _repeated_unitProtobufArray_codec
        = pb::FieldCodec.ForMessage(42, global::wind.Entities.Protobuf.UnitProtobuf.Parser);
    private readonly pbc::RepeatedField<global::wind.Entities.Protobuf.UnitProtobuf> unitProtobufArray_ = new pbc::RepeatedField<global::wind.Entities.Protobuf.UnitProtobuf>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::wind.Entities.Protobuf.UnitProtobuf> UnitProtobufArray {
      get { return unitProtobufArray_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StatusAllResponseProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StatusAllResponseProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Executed != other.Executed) return false;
      if (NoExecuteMessage != other.NoExecuteMessage) return false;
      if (UnitProtobufArraySize != other.UnitProtobufArraySize) return false;
      if(!unitProtobufArray_.Equals(other.unitProtobufArray_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Executed != false) hash ^= Executed.GetHashCode();
      if (NoExecuteMessage.Length != 0) hash ^= NoExecuteMessage.GetHashCode();
      if (UnitProtobufArraySize != 0) hash ^= UnitProtobufArraySize.GetHashCode();
      hash ^= unitProtobufArray_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (Executed != false) {
        output.WriteRawTag(16);
        output.WriteBool(Executed);
      }
      if (NoExecuteMessage.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(NoExecuteMessage);
      }
      if (UnitProtobufArraySize != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(UnitProtobufArraySize);
      }
      unitProtobufArray_.WriteTo(output, _repeated_unitProtobufArray_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (Executed != false) {
        size += 1 + 1;
      }
      if (NoExecuteMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NoExecuteMessage);
      }
      if (UnitProtobufArraySize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnitProtobufArraySize);
      }
      size += unitProtobufArray_.CalculateSize(_repeated_unitProtobufArray_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StatusAllResponseProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Executed != false) {
        Executed = other.Executed;
      }
      if (other.NoExecuteMessage.Length != 0) {
        NoExecuteMessage = other.NoExecuteMessage;
      }
      if (other.UnitProtobufArraySize != 0) {
        UnitProtobufArraySize = other.UnitProtobufArraySize;
      }
      unitProtobufArray_.Add(other.unitProtobufArray_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 16: {
            Executed = input.ReadBool();
            break;
          }
          case 26: {
            NoExecuteMessage = input.ReadString();
            break;
          }
          case 32: {
            UnitProtobufArraySize = input.ReadInt32();
            break;
          }
          case 42: {
            unitProtobufArray_.AddEntriesFrom(input, _repeated_unitProtobufArray_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// windctl start-all
  /// </summary>
  public sealed partial class StartAllResponseProtobuf : pb::IMessage<StartAllResponseProtobuf> {
    private static readonly pb::MessageParser<StartAllResponseProtobuf> _parser = new pb::MessageParser<StartAllResponseProtobuf>(() => new StartAllResponseProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StartAllResponseProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.WebSocketMessagesReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartAllResponseProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartAllResponseProtobuf(StartAllResponseProtobuf other) : this() {
      type_ = other.type_;
      executed_ = other.executed_;
      noExecuteMessage_ = other.noExecuteMessage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartAllResponseProtobuf Clone() {
      return new StartAllResponseProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///2102
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "Executed" field.</summary>
    public const int ExecutedFieldNumber = 2;
    private bool executed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Executed {
      get { return executed_; }
      set {
        executed_ = value;
      }
    }

    /// <summary>Field number for the "NoExecuteMessage" field.</summary>
    public const int NoExecuteMessageFieldNumber = 3;
    private string noExecuteMessage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NoExecuteMessage {
      get { return noExecuteMessage_; }
      set {
        noExecuteMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StartAllResponseProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StartAllResponseProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Executed != other.Executed) return false;
      if (NoExecuteMessage != other.NoExecuteMessage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Executed != false) hash ^= Executed.GetHashCode();
      if (NoExecuteMessage.Length != 0) hash ^= NoExecuteMessage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (Executed != false) {
        output.WriteRawTag(16);
        output.WriteBool(Executed);
      }
      if (NoExecuteMessage.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(NoExecuteMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (Executed != false) {
        size += 1 + 1;
      }
      if (NoExecuteMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NoExecuteMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StartAllResponseProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Executed != false) {
        Executed = other.Executed;
      }
      if (other.NoExecuteMessage.Length != 0) {
        NoExecuteMessage = other.NoExecuteMessage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 16: {
            Executed = input.ReadBool();
            break;
          }
          case 26: {
            NoExecuteMessage = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// windctl stop-all
  /// </summary>
  public sealed partial class StopAllResponseProtobuf : pb::IMessage<StopAllResponseProtobuf> {
    private static readonly pb::MessageParser<StopAllResponseProtobuf> _parser = new pb::MessageParser<StopAllResponseProtobuf>(() => new StopAllResponseProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StopAllResponseProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.WebSocketMessagesReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopAllResponseProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopAllResponseProtobuf(StopAllResponseProtobuf other) : this() {
      type_ = other.type_;
      executed_ = other.executed_;
      noExecuteMessage_ = other.noExecuteMessage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopAllResponseProtobuf Clone() {
      return new StopAllResponseProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///2103
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "Executed" field.</summary>
    public const int ExecutedFieldNumber = 2;
    private bool executed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Executed {
      get { return executed_; }
      set {
        executed_ = value;
      }
    }

    /// <summary>Field number for the "NoExecuteMessage" field.</summary>
    public const int NoExecuteMessageFieldNumber = 3;
    private string noExecuteMessage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NoExecuteMessage {
      get { return noExecuteMessage_; }
      set {
        noExecuteMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StopAllResponseProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StopAllResponseProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Executed != other.Executed) return false;
      if (NoExecuteMessage != other.NoExecuteMessage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Executed != false) hash ^= Executed.GetHashCode();
      if (NoExecuteMessage.Length != 0) hash ^= NoExecuteMessage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (Executed != false) {
        output.WriteRawTag(16);
        output.WriteBool(Executed);
      }
      if (NoExecuteMessage.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(NoExecuteMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (Executed != false) {
        size += 1 + 1;
      }
      if (NoExecuteMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NoExecuteMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StopAllResponseProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Executed != false) {
        Executed = other.Executed;
      }
      if (other.NoExecuteMessage.Length != 0) {
        NoExecuteMessage = other.NoExecuteMessage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 16: {
            Executed = input.ReadBool();
            break;
          }
          case 26: {
            NoExecuteMessage = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// windctl restart-all
  /// </summary>
  public sealed partial class RestartAllResponseProtobuf : pb::IMessage<RestartAllResponseProtobuf> {
    private static readonly pb::MessageParser<RestartAllResponseProtobuf> _parser = new pb::MessageParser<RestartAllResponseProtobuf>(() => new RestartAllResponseProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RestartAllResponseProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.WebSocketMessagesReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestartAllResponseProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestartAllResponseProtobuf(RestartAllResponseProtobuf other) : this() {
      type_ = other.type_;
      executed_ = other.executed_;
      noExecuteMessage_ = other.noExecuteMessage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestartAllResponseProtobuf Clone() {
      return new RestartAllResponseProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///2104
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "Executed" field.</summary>
    public const int ExecutedFieldNumber = 2;
    private bool executed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Executed {
      get { return executed_; }
      set {
        executed_ = value;
      }
    }

    /// <summary>Field number for the "NoExecuteMessage" field.</summary>
    public const int NoExecuteMessageFieldNumber = 3;
    private string noExecuteMessage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NoExecuteMessage {
      get { return noExecuteMessage_; }
      set {
        noExecuteMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RestartAllResponseProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RestartAllResponseProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Executed != other.Executed) return false;
      if (NoExecuteMessage != other.NoExecuteMessage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Executed != false) hash ^= Executed.GetHashCode();
      if (NoExecuteMessage.Length != 0) hash ^= NoExecuteMessage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (Executed != false) {
        output.WriteRawTag(16);
        output.WriteBool(Executed);
      }
      if (NoExecuteMessage.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(NoExecuteMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (Executed != false) {
        size += 1 + 1;
      }
      if (NoExecuteMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NoExecuteMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RestartAllResponseProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Executed != false) {
        Executed = other.Executed;
      }
      if (other.NoExecuteMessage.Length != 0) {
        NoExecuteMessage = other.NoExecuteMessage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 16: {
            Executed = input.ReadBool();
            break;
          }
          case 26: {
            NoExecuteMessage = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// windctl load-all
  /// </summary>
  public sealed partial class LoadAllResponseProtobuf : pb::IMessage<LoadAllResponseProtobuf> {
    private static readonly pb::MessageParser<LoadAllResponseProtobuf> _parser = new pb::MessageParser<LoadAllResponseProtobuf>(() => new LoadAllResponseProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoadAllResponseProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.WebSocketMessagesReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadAllResponseProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadAllResponseProtobuf(LoadAllResponseProtobuf other) : this() {
      type_ = other.type_;
      executed_ = other.executed_;
      noExecuteMessage_ = other.noExecuteMessage_;
      unitSettingsProtobufArraySize_ = other.unitSettingsProtobufArraySize_;
      unitSettingsProtobufArray_ = other.unitSettingsProtobufArray_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadAllResponseProtobuf Clone() {
      return new LoadAllResponseProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///2105
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "Executed" field.</summary>
    public const int ExecutedFieldNumber = 2;
    private bool executed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Executed {
      get { return executed_; }
      set {
        executed_ = value;
      }
    }

    /// <summary>Field number for the "NoExecuteMessage" field.</summary>
    public const int NoExecuteMessageFieldNumber = 3;
    private string noExecuteMessage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NoExecuteMessage {
      get { return noExecuteMessage_; }
      set {
        noExecuteMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "UnitSettingsProtobufArraySize" field.</summary>
    public const int UnitSettingsProtobufArraySizeFieldNumber = 4;
    private int unitSettingsProtobufArraySize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnitSettingsProtobufArraySize {
      get { return unitSettingsProtobufArraySize_; }
      set {
        unitSettingsProtobufArraySize_ = value;
      }
    }

    /// <summary>Field number for the "UnitSettingsProtobufArray" field.</summary>
    public const int UnitSettingsProtobufArrayFieldNumber = 5;
    private static readonly pb::FieldCodec<global::wind.Entities.Protobuf.UnitSettingsProtobuf> _repeated_unitSettingsProtobufArray_codec
        = pb::FieldCodec.ForMessage(42, global::wind.Entities.Protobuf.UnitSettingsProtobuf.Parser);
    private readonly pbc::RepeatedField<global::wind.Entities.Protobuf.UnitSettingsProtobuf> unitSettingsProtobufArray_ = new pbc::RepeatedField<global::wind.Entities.Protobuf.UnitSettingsProtobuf>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::wind.Entities.Protobuf.UnitSettingsProtobuf> UnitSettingsProtobufArray {
      get { return unitSettingsProtobufArray_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoadAllResponseProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoadAllResponseProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Executed != other.Executed) return false;
      if (NoExecuteMessage != other.NoExecuteMessage) return false;
      if (UnitSettingsProtobufArraySize != other.UnitSettingsProtobufArraySize) return false;
      if(!unitSettingsProtobufArray_.Equals(other.unitSettingsProtobufArray_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Executed != false) hash ^= Executed.GetHashCode();
      if (NoExecuteMessage.Length != 0) hash ^= NoExecuteMessage.GetHashCode();
      if (UnitSettingsProtobufArraySize != 0) hash ^= UnitSettingsProtobufArraySize.GetHashCode();
      hash ^= unitSettingsProtobufArray_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (Executed != false) {
        output.WriteRawTag(16);
        output.WriteBool(Executed);
      }
      if (NoExecuteMessage.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(NoExecuteMessage);
      }
      if (UnitSettingsProtobufArraySize != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(UnitSettingsProtobufArraySize);
      }
      unitSettingsProtobufArray_.WriteTo(output, _repeated_unitSettingsProtobufArray_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (Executed != false) {
        size += 1 + 1;
      }
      if (NoExecuteMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NoExecuteMessage);
      }
      if (UnitSettingsProtobufArraySize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnitSettingsProtobufArraySize);
      }
      size += unitSettingsProtobufArray_.CalculateSize(_repeated_unitSettingsProtobufArray_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoadAllResponseProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Executed != false) {
        Executed = other.Executed;
      }
      if (other.NoExecuteMessage.Length != 0) {
        NoExecuteMessage = other.NoExecuteMessage;
      }
      if (other.UnitSettingsProtobufArraySize != 0) {
        UnitSettingsProtobufArraySize = other.UnitSettingsProtobufArraySize;
      }
      unitSettingsProtobufArray_.Add(other.unitSettingsProtobufArray_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 16: {
            Executed = input.ReadBool();
            break;
          }
          case 26: {
            NoExecuteMessage = input.ReadString();
            break;
          }
          case 32: {
            UnitSettingsProtobufArraySize = input.ReadInt32();
            break;
          }
          case 42: {
            unitSettingsProtobufArray_.AddEntriesFrom(input, _repeated_unitSettingsProtobufArray_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// windctl remove-all
  /// </summary>
  public sealed partial class RemoveAllResponseProtobuf : pb::IMessage<RemoveAllResponseProtobuf> {
    private static readonly pb::MessageParser<RemoveAllResponseProtobuf> _parser = new pb::MessageParser<RemoveAllResponseProtobuf>(() => new RemoveAllResponseProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemoveAllResponseProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.WebSocketMessagesReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveAllResponseProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveAllResponseProtobuf(RemoveAllResponseProtobuf other) : this() {
      type_ = other.type_;
      executed_ = other.executed_;
      noExecuteMessage_ = other.noExecuteMessage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveAllResponseProtobuf Clone() {
      return new RemoveAllResponseProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///2106
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "Executed" field.</summary>
    public const int ExecutedFieldNumber = 2;
    private bool executed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Executed {
      get { return executed_; }
      set {
        executed_ = value;
      }
    }

    /// <summary>Field number for the "NoExecuteMessage" field.</summary>
    public const int NoExecuteMessageFieldNumber = 3;
    private string noExecuteMessage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NoExecuteMessage {
      get { return noExecuteMessage_; }
      set {
        noExecuteMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemoveAllResponseProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemoveAllResponseProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Executed != other.Executed) return false;
      if (NoExecuteMessage != other.NoExecuteMessage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Executed != false) hash ^= Executed.GetHashCode();
      if (NoExecuteMessage.Length != 0) hash ^= NoExecuteMessage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (Executed != false) {
        output.WriteRawTag(16);
        output.WriteBool(Executed);
      }
      if (NoExecuteMessage.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(NoExecuteMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (Executed != false) {
        size += 1 + 1;
      }
      if (NoExecuteMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NoExecuteMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemoveAllResponseProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Executed != false) {
        Executed = other.Executed;
      }
      if (other.NoExecuteMessage.Length != 0) {
        NoExecuteMessage = other.NoExecuteMessage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 16: {
            Executed = input.ReadBool();
            break;
          }
          case 26: {
            NoExecuteMessage = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// windctl daemon-version
  /// </summary>
  public sealed partial class DaemonVersionResponseProtobuf : pb::IMessage<DaemonVersionResponseProtobuf> {
    private static readonly pb::MessageParser<DaemonVersionResponseProtobuf> _parser = new pb::MessageParser<DaemonVersionResponseProtobuf>(() => new DaemonVersionResponseProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DaemonVersionResponseProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.WebSocketMessagesReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DaemonVersionResponseProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DaemonVersionResponseProtobuf(DaemonVersionResponseProtobuf other) : this() {
      type_ = other.type_;
      major_ = other.major_;
      minor_ = other.minor_;
      build_ = other.build_;
      revision_ = other.revision_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DaemonVersionResponseProtobuf Clone() {
      return new DaemonVersionResponseProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///2200
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "Major" field.</summary>
    public const int MajorFieldNumber = 2;
    private int major_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Major {
      get { return major_; }
      set {
        major_ = value;
      }
    }

    /// <summary>Field number for the "Minor" field.</summary>
    public const int MinorFieldNumber = 3;
    private int minor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Minor {
      get { return minor_; }
      set {
        minor_ = value;
      }
    }

    /// <summary>Field number for the "Build" field.</summary>
    public const int BuildFieldNumber = 4;
    private int build_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Build {
      get { return build_; }
      set {
        build_ = value;
      }
    }

    /// <summary>Field number for the "Revision" field.</summary>
    public const int RevisionFieldNumber = 5;
    private int revision_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Revision {
      get { return revision_; }
      set {
        revision_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DaemonVersionResponseProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DaemonVersionResponseProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Major != other.Major) return false;
      if (Minor != other.Minor) return false;
      if (Build != other.Build) return false;
      if (Revision != other.Revision) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Major != 0) hash ^= Major.GetHashCode();
      if (Minor != 0) hash ^= Minor.GetHashCode();
      if (Build != 0) hash ^= Build.GetHashCode();
      if (Revision != 0) hash ^= Revision.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (Major != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Major);
      }
      if (Minor != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Minor);
      }
      if (Build != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Build);
      }
      if (Revision != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Revision);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (Major != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Major);
      }
      if (Minor != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Minor);
      }
      if (Build != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Build);
      }
      if (Revision != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Revision);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DaemonVersionResponseProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Major != 0) {
        Major = other.Major;
      }
      if (other.Minor != 0) {
        Minor = other.Minor;
      }
      if (other.Build != 0) {
        Build = other.Build;
      }
      if (other.Revision != 0) {
        Revision = other.Revision;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 16: {
            Major = input.ReadInt32();
            break;
          }
          case 24: {
            Minor = input.ReadInt32();
            break;
          }
          case 32: {
            Build = input.ReadInt32();
            break;
          }
          case 40: {
            Revision = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// windctl daemon-status
  /// </summary>
  public sealed partial class DaemonStatusResponseProtobuf : pb::IMessage<DaemonStatusResponseProtobuf> {
    private static readonly pb::MessageParser<DaemonStatusResponseProtobuf> _parser = new pb::MessageParser<DaemonStatusResponseProtobuf>(() => new DaemonStatusResponseProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DaemonStatusResponseProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.WebSocketMessagesReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DaemonStatusResponseProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DaemonStatusResponseProtobuf(DaemonStatusResponseProtobuf other) : this() {
      type_ = other.type_;
      daemonProtobuf_ = other.daemonProtobuf_ != null ? other.daemonProtobuf_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DaemonStatusResponseProtobuf Clone() {
      return new DaemonStatusResponseProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///2201
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "DaemonProtobuf" field.</summary>
    public const int DaemonProtobufFieldNumber = 2;
    private global::wind.Entities.Protobuf.DaemonProtobuf daemonProtobuf_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::wind.Entities.Protobuf.DaemonProtobuf DaemonProtobuf {
      get { return daemonProtobuf_; }
      set {
        daemonProtobuf_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DaemonStatusResponseProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DaemonStatusResponseProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!object.Equals(DaemonProtobuf, other.DaemonProtobuf)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (daemonProtobuf_ != null) hash ^= DaemonProtobuf.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (daemonProtobuf_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DaemonProtobuf);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (daemonProtobuf_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DaemonProtobuf);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DaemonStatusResponseProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.daemonProtobuf_ != null) {
        if (daemonProtobuf_ == null) {
          DaemonProtobuf = new global::wind.Entities.Protobuf.DaemonProtobuf();
        }
        DaemonProtobuf.MergeFrom(other.DaemonProtobuf);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            if (daemonProtobuf_ == null) {
              DaemonProtobuf = new global::wind.Entities.Protobuf.DaemonProtobuf();
            }
            input.ReadMessage(DaemonProtobuf);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// windctl daemon-shutdown
  /// </summary>
  public sealed partial class DaemonShutdownResponseProtobuf : pb::IMessage<DaemonShutdownResponseProtobuf> {
    private static readonly pb::MessageParser<DaemonShutdownResponseProtobuf> _parser = new pb::MessageParser<DaemonShutdownResponseProtobuf>(() => new DaemonShutdownResponseProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DaemonShutdownResponseProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.WebSocketMessagesReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DaemonShutdownResponseProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DaemonShutdownResponseProtobuf(DaemonShutdownResponseProtobuf other) : this() {
      type_ = other.type_;
      executed_ = other.executed_;
      noExecuteMessage_ = other.noExecuteMessage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DaemonShutdownResponseProtobuf Clone() {
      return new DaemonShutdownResponseProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///2299
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "Executed" field.</summary>
    public const int ExecutedFieldNumber = 2;
    private bool executed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Executed {
      get { return executed_; }
      set {
        executed_ = value;
      }
    }

    /// <summary>Field number for the "NoExecuteMessage" field.</summary>
    public const int NoExecuteMessageFieldNumber = 3;
    private string noExecuteMessage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NoExecuteMessage {
      get { return noExecuteMessage_; }
      set {
        noExecuteMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DaemonShutdownResponseProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DaemonShutdownResponseProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Executed != other.Executed) return false;
      if (NoExecuteMessage != other.NoExecuteMessage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Executed != false) hash ^= Executed.GetHashCode();
      if (NoExecuteMessage.Length != 0) hash ^= NoExecuteMessage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (Executed != false) {
        output.WriteRawTag(16);
        output.WriteBool(Executed);
      }
      if (NoExecuteMessage.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(NoExecuteMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (Executed != false) {
        size += 1 + 1;
      }
      if (NoExecuteMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NoExecuteMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DaemonShutdownResponseProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Executed != false) {
        Executed = other.Executed;
      }
      if (other.NoExecuteMessage.Length != 0) {
        NoExecuteMessage = other.NoExecuteMessage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 16: {
            Executed = input.ReadBool();
            break;
          }
          case 26: {
            NoExecuteMessage = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class StartNotifyProtobuf : pb::IMessage<StartNotifyProtobuf> {
    private static readonly pb::MessageParser<StartNotifyProtobuf> _parser = new pb::MessageParser<StartNotifyProtobuf>(() => new StartNotifyProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StartNotifyProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.WebSocketMessagesReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartNotifyProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartNotifyProtobuf(StartNotifyProtobuf other) : this() {
      type_ = other.type_;
      unitKey_ = other.unitKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartNotifyProtobuf Clone() {
      return new StartNotifyProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///3002
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "UnitKey" field.</summary>
    public const int UnitKeyFieldNumber = 2;
    private string unitKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UnitKey {
      get { return unitKey_; }
      set {
        unitKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StartNotifyProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StartNotifyProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (UnitKey != other.UnitKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (UnitKey.Length != 0) hash ^= UnitKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (UnitKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UnitKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (UnitKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UnitKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StartNotifyProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.UnitKey.Length != 0) {
        UnitKey = other.UnitKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            UnitKey = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class StopNotifyProtobuf : pb::IMessage<StopNotifyProtobuf> {
    private static readonly pb::MessageParser<StopNotifyProtobuf> _parser = new pb::MessageParser<StopNotifyProtobuf>(() => new StopNotifyProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StopNotifyProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.WebSocketMessagesReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopNotifyProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopNotifyProtobuf(StopNotifyProtobuf other) : this() {
      type_ = other.type_;
      unitKey_ = other.unitKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopNotifyProtobuf Clone() {
      return new StopNotifyProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///3003
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "UnitKey" field.</summary>
    public const int UnitKeyFieldNumber = 2;
    private string unitKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UnitKey {
      get { return unitKey_; }
      set {
        unitKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StopNotifyProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StopNotifyProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (UnitKey != other.UnitKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (UnitKey.Length != 0) hash ^= UnitKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (UnitKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UnitKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (UnitKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UnitKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StopNotifyProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.UnitKey.Length != 0) {
        UnitKey = other.UnitKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            UnitKey = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LoadNotifyProtobuf : pb::IMessage<LoadNotifyProtobuf> {
    private static readonly pb::MessageParser<LoadNotifyProtobuf> _parser = new pb::MessageParser<LoadNotifyProtobuf>(() => new LoadNotifyProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoadNotifyProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.WebSocketMessagesReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadNotifyProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadNotifyProtobuf(LoadNotifyProtobuf other) : this() {
      type_ = other.type_;
      unitKey_ = other.unitKey_;
      unitSettingsProtobuf_ = other.unitSettingsProtobuf_ != null ? other.unitSettingsProtobuf_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadNotifyProtobuf Clone() {
      return new LoadNotifyProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///3005
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "UnitKey" field.</summary>
    public const int UnitKeyFieldNumber = 2;
    private string unitKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UnitKey {
      get { return unitKey_; }
      set {
        unitKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "UnitSettingsProtobuf" field.</summary>
    public const int UnitSettingsProtobufFieldNumber = 3;
    private global::wind.Entities.Protobuf.UnitSettingsProtobuf unitSettingsProtobuf_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::wind.Entities.Protobuf.UnitSettingsProtobuf UnitSettingsProtobuf {
      get { return unitSettingsProtobuf_; }
      set {
        unitSettingsProtobuf_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoadNotifyProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoadNotifyProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (UnitKey != other.UnitKey) return false;
      if (!object.Equals(UnitSettingsProtobuf, other.UnitSettingsProtobuf)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (UnitKey.Length != 0) hash ^= UnitKey.GetHashCode();
      if (unitSettingsProtobuf_ != null) hash ^= UnitSettingsProtobuf.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (UnitKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UnitKey);
      }
      if (unitSettingsProtobuf_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UnitSettingsProtobuf);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (UnitKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UnitKey);
      }
      if (unitSettingsProtobuf_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UnitSettingsProtobuf);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoadNotifyProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.UnitKey.Length != 0) {
        UnitKey = other.UnitKey;
      }
      if (other.unitSettingsProtobuf_ != null) {
        if (unitSettingsProtobuf_ == null) {
          UnitSettingsProtobuf = new global::wind.Entities.Protobuf.UnitSettingsProtobuf();
        }
        UnitSettingsProtobuf.MergeFrom(other.UnitSettingsProtobuf);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            UnitKey = input.ReadString();
            break;
          }
          case 26: {
            if (unitSettingsProtobuf_ == null) {
              UnitSettingsProtobuf = new global::wind.Entities.Protobuf.UnitSettingsProtobuf();
            }
            input.ReadMessage(UnitSettingsProtobuf);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RemoveNotifyProtobuf : pb::IMessage<RemoveNotifyProtobuf> {
    private static readonly pb::MessageParser<RemoveNotifyProtobuf> _parser = new pb::MessageParser<RemoveNotifyProtobuf>(() => new RemoveNotifyProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemoveNotifyProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.WebSocketMessagesReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveNotifyProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveNotifyProtobuf(RemoveNotifyProtobuf other) : this() {
      type_ = other.type_;
      unitKey_ = other.unitKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveNotifyProtobuf Clone() {
      return new RemoveNotifyProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///3006
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "UnitKey" field.</summary>
    public const int UnitKeyFieldNumber = 2;
    private string unitKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UnitKey {
      get { return unitKey_; }
      set {
        unitKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemoveNotifyProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemoveNotifyProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (UnitKey != other.UnitKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (UnitKey.Length != 0) hash ^= UnitKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (UnitKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UnitKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (UnitKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UnitKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemoveNotifyProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.UnitKey.Length != 0) {
        UnitKey = other.UnitKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            UnitKey = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LogsNotifyProtobuf : pb::IMessage<LogsNotifyProtobuf> {
    private static readonly pb::MessageParser<LogsNotifyProtobuf> _parser = new pb::MessageParser<LogsNotifyProtobuf>(() => new LogsNotifyProtobuf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LogsNotifyProtobuf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::wind.Entities.Protobuf.WebSocketMessagesReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogsNotifyProtobuf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogsNotifyProtobuf(LogsNotifyProtobuf other) : this() {
      type_ = other.type_;
      unitKey_ = other.unitKey_;
      logLine_ = other.logLine_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogsNotifyProtobuf Clone() {
      return new LogsNotifyProtobuf(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///3007
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "UnitKey" field.</summary>
    public const int UnitKeyFieldNumber = 2;
    private string unitKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UnitKey {
      get { return unitKey_; }
      set {
        unitKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LogLine" field.</summary>
    public const int LogLineFieldNumber = 3;
    private string logLine_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LogLine {
      get { return logLine_; }
      set {
        logLine_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LogsNotifyProtobuf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LogsNotifyProtobuf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (UnitKey != other.UnitKey) return false;
      if (LogLine != other.LogLine) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (UnitKey.Length != 0) hash ^= UnitKey.GetHashCode();
      if (LogLine.Length != 0) hash ^= LogLine.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (UnitKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UnitKey);
      }
      if (LogLine.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LogLine);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (UnitKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UnitKey);
      }
      if (LogLine.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LogLine);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LogsNotifyProtobuf other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.UnitKey.Length != 0) {
        UnitKey = other.UnitKey;
      }
      if (other.LogLine.Length != 0) {
        LogLine = other.LogLine;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            UnitKey = input.ReadString();
            break;
          }
          case 26: {
            LogLine = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
